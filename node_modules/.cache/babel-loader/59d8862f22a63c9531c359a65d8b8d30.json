{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/CropManagement.js\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport Profile from \"../Profile/Profile\";\nimport CropSideSection from \"../../sections/CropSideSection/cropsidesection\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport CropContainer from \"../CropManagement/cropcontainer\";\nimport TimelineLabel from \"../TimelineLabel/TimelineLabel\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport TabletViewCropPage from \"../tablet-view/tablet-view-cropmanage\";\n\nconst CropManagement = props => {\n  const [flag, setFlag] = useState(true);\n  const {\n    t\n  } = useTranslation(\"crop-management\");\n\n  const changeFlag = () => {\n    setFlag(false);\n    setTimeout(() => {\n      console.log(flag);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n\n    if (props.devices.userDevices.length) {\n      props.getSensorsData(props.devices.userDevices.map(d => d.deviceId).join());\n    }\n  }, [props.title, props.devices]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 1366,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    active: \"cropManagement\",\n    defaultsensor: props.sensors && props.sensors[0] ? props.sensors[0].deviceId : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CropContainer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    className: \"rightcontainer crop-rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CropSideSection, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MainButton, Object.assign({}, props, {\n    className: \"MainButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), t(\"ADD ACTIVITY\")))))))), /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 768,\n    maxWidth: 1365.98,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabletViewCropPage, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default CropManagement;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/CropManagement.js"],"names":["React","Suspense","useEffect","useState","Container","Grid","Responsive","Navbar","Profile","CropSideSection","MainButton","useTranslation","CropContainer","TimelineLabel","SearchBar","TabletViewCropPage","CropManagement","props","flag","setFlag","t","changeFlag","setTimeout","console","log","document","title","devices","userDevices","length","getSensorsData","map","d","deviceId","join","sensors","undefined"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport Profile from \"../Profile/Profile\";\nimport CropSideSection from \"../../sections/CropSideSection/cropsidesection\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport CropContainer from \"../CropManagement/cropcontainer\";\nimport TimelineLabel from \"../TimelineLabel/TimelineLabel\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport TabletViewCropPage from \"../tablet-view/tablet-view-cropmanage\"\nconst CropManagement = (props) => {\n  const [flag, setFlag] = useState(true);\n  const { t } = useTranslation(\"crop-management\");\n\n  const changeFlag = () => {\n    setFlag(false);\n    setTimeout(() => {\n      console.log(flag);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n    if (props.devices.userDevices.length) {\n      props.getSensorsData(\n        props.devices.userDevices.map((d) => d.deviceId).join()\n      );\n    }\n  }, [props.title, props.devices]);\n  return (\n\n\n    <div>\n      <Responsive minWidth = {1366}>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column width={1}>\n              {/* <Container className=\"leftcontainer\"> */}\n              <Navbar\n                active=\"cropManagement\"\n                defaultsensor={\n                  props.sensors && props.sensors[0]\n                    ? props.sensors[0].deviceId\n                    : undefined\n                }\n              />\n              {/* </Container> */}\n            </Grid.Column>\n\n            <Suspense fallback=\"loading\">\n              <Grid.Column width={11}>\n                <div className=\"midcontainer\">\n                  <SearchBar {...props} />\n                  <CropContainer {...props} />\n                </div>\n              </Grid.Column>\n              <Grid.Column width={4} className=\"rightcontainer crop-rightcontainer\">\n                {/* <Container> */}\n                  <div>\n                    <Profile className=\"Profile\" />\n                  </div>\n                  <div>\n                    <CropSideSection {... props}/>\n                  </div>\n                  <div>\n                    <MainButton {...props} className = \"MainButton\">\n                      {\n                        t(\"ADD ACTIVITY\")\n                      }\n                    </MainButton>\n                  </div>\n                {/* </Container> */}\n              </Grid.Column>\n            </Suspense>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n      <Responsive minWidth={768} maxWidth={1365.98}>\n        <TabletViewCropPage {...props} />\n      </Responsive>\n    </div>\n\n\n  );\n};\n\nexport default CropManagement;\n"]},"metadata":{},"sourceType":"module"}