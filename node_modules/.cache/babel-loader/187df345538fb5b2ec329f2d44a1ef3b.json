{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/DashMidGrids/dashmidgrids.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Segment, Dropdown, Responsive } from \"semantic-ui-react\";\nimport \"./dashmidgrids.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport MapPolygon from \"../MapPolygon/MapPolygon\";\nimport { calculateArea } from \"../../utils/utilsFunctions\";\nimport ChartList from \"../../components/ChartList/ChartList\";\nimport AddFieldModal from \"../../components/DashMidGrids/AddFieldModal\";\nimport { Link } from \"react-router-dom\";\nimport { getPlantName } from \"../../utils/utilsFunctions\";\nconst linkStyles = {\n  color: \"#B2AFAF\",\n  textDecoration: \"none\",\n  opacity: \"30%\"\n};\nconst activeLinkStyles = {\n  // color: \"rgba(60, 117, 60, 0.787)\",\n  color: \"#B2AFAF\",\n  textDecoration: \"none\"\n};\n\nconst DashMidGrids = props => {\n  const [firstLinkActive, setFirstLinkActive] = useState(true);\n  const links = [// { id: 0, name: \"7D\", type: \"\", activeLINK: firstLinkActive ? true : false },\n  {\n    id: 0,\n    name: \"7D\",\n    type: \"\",\n    activeFirst: true,\n    firstLinkActive\n  }, {\n    id: 1,\n    name: \"1M\",\n    type: \"data_1M\"\n  }, {\n    id: 2,\n    name: \"1Y\",\n    type: \"data_1Y\"\n  }];\n  const {\n    t\n  } = useTranslation(\"dashboard\");\n  const [fieldId, setFieldId] = useState(\"\");\n  const [arrayType, setArrayType] = useState(\"\");\n  const [linksArray, setLinksArray] = useState(links);\n  let polygon = [[48.8566, 2.3522]]; //=  props.userFarms.location\n\n  let center = [48.8566, 2.3522]; //=  props.userFarms.address.location\n\n  let fieldOptions = []; // let selectedField = \"\";\n\n  const fillData = newData => {\n    newData.forEach(element => {\n      fieldOptions.push({\n        text: element.farmName,\n        id: element._id,\n        value: element._id\n      });\n    }); // selectedField = newData[0].farmName;\n\n    polygon = newData[0].location;\n    center = newData[0].address.location;\n  };\n\n  const {\n    lookup,\n    ranges,\n    history_data,\n    getWeatherData,\n    getUserFarmCropCycles,\n    userId,\n    token,\n    userFarmCropCycles,\n    userFarms,\n    getIdealRange\n  } = props;\n  let {\n    history_data_7d,\n    history_data_1M,\n    history_data_1Y\n  } = history_data;\n  console.log({\n    history_data_1M\n  });\n  const firstFarm = props.userFarms[0];\n  const [farm] = props.userFarms.filter(farm => farm._id === fieldId);\n  console.log({\n    firstFarm\n  });\n  console.log({\n    farm\n  });\n  const fieldArea = calculateArea(farm ? [farm.location] : []) * 0.000247105;\n  const firstFieldArea = calculateArea(firstFarm ? [firstFarm.location] : []) * 0.000247105;\n  console.log({\n    fieldArea\n  });\n  const [terraintypes] = lookup.terraintypes.filter(item => {\n    console.log(\"firstFarm\", firstFarm);\n    return farm && firstFarm ? // ? item._id === firstFarm.terrainTypeId\n    item._id === farm.terrainTypeId : item._id === firstFarm.terrainTypeId;\n  });\n  const [waterSource] = lookup.watersources.filter(item => {\n    return farm && firstFarm ? // ? item._id === firstFarm.terrainTypeId\n    item._id === farm.waterSourceId : item._id === firstFarm.waterSourceId;\n  });\n  const [soiltype] = lookup.soiltypes.filter(item => {\n    return farm && firstFarm ? // ? item._id === firstFarm.terrainTypeId\n    item._id === farm.soilTypeId : item._id === firstFarm.soilTypeId;\n  }); // console.log({ soiltype });\n\n  const onLinkClick = (arrayType, index, Id) => {\n    setArrayType(arrayType);\n    index == 0 ? setFirstLinkActive(true) : setFirstLinkActive(false);\n    console.log({\n      index\n    });\n    console.log({\n      firstLinkActive\n    });\n    let [activeLink] = links.filter(link => link.id === Id); // console.log(index);\n\n    console.log(arrayType); // let ActiveSensorIndex = sensors.findIndex(\n    //   (sensor) => sensor.deviceId === sensorId\n    // );\n\n    let NewActiveLink = { ...activeLink,\n      active: true\n    };\n    const newLinks = Object.assign([], links, {\n      [index]: NewActiveLink\n    }); // console.log(newSensors);\n\n    setLinksArray(newLinks);\n  };\n\n  console.log(arrayType);\n  useEffect(() => {\n    farm ? getWeatherData(farm && farm.address.location[0], farm.address.location[0]) : getWeatherData(firstFarm && firstFarm.address.location[0], firstFarm.address.location[1]);\n    farm ? getUserFarmCropCycles(farm._id, userId, token) : getUserFarmCropCycles(firstFarm._id, userId, token);\n\n    if (farm) {\n      const plant = getPlantName(userFarms, farm.address.location, lookup.croptypes);\n      getIdealRange(plant);\n    } else {\n      const plant = firstFarm ? getPlantName(userFarms, firstFarm.address.location, lookup.croptypes) : \"generic\";\n      getIdealRange(plant);\n    }\n  }, [userId, farm]);\n  const [userFarmCropCycle] = userFarmCropCycles && userFarmCropCycles.filter(item => item.isPast == false);\n  console.log({\n    userFarmCropCycle\n  });\n  const cultivationId = userFarmCropCycles.length && userFarmCropCycle ? userFarmCropCycle.cultivationId : \"\";\n  console.log(\"cultivationId\", cultivationId); // let cropId = \"\";\n  // if (userFarmCropCycles.length && userFarmCropCycle.cropSeeds[0].cropId) {\n  //   cropId = userFarmCropCycle.cropSeeds[0].cropId;\n  // }\n\n  let cropId = userFarmCropCycles.length && userFarmCropCycle ? userFarmCropCycle.cropSeeds[0].cropId : \"\";\n  const [croptype] = lookup.croptypes.filter(item => item._id === cropId);\n  const [cultivationtype] = lookup.cultivationtypes.filter(item => item._id === cultivationId);\n  return (\n    /*#__PURE__*/\n    // <Container fluid className=\"maincontainer\">\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Responsive, {\n      minWidth: 1024,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, props.userFarms.length > 0 ? fillData(props.userFarms) : null, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"dashboard-content ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      className: \"gridcolumn-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"ml-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-white pl-3 pt-3 green-left-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, \" \", t(\"field-info\"), \" \")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-white ml-5 pl-1 pt-3 green-right-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(AddFieldModal, Object.assign({}, props, {\n      name: t(\"add-field\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mx-0 py-0 mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 16,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, props.userFarms.length > 0 && fieldId ? props.userFarms.forEach(poly => {\n      if (poly._id === fieldId) {\n        polygon = poly.location;\n        center = poly.address.location;\n      }\n    }) : null, /*#__PURE__*/React.createElement(MapPolygon, {\n      editable: false,\n      polygon: polygon,\n      center: center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"row2 mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Field\" // defaultValue={selectedField}\n      ,\n      defaultValue: fieldOptions[0].value,\n      scrolling: true,\n      options: fieldOptions,\n      onChange: (e, {\n        value\n      }) => {\n        setFieldId(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(AddFieldModal, Object.assign({\n      name: t(\"edit\"),\n      color: \"rgba(60, 117, 60, 0.787)\",\n      icon: true\n    }, props, {\n      farmId: fieldId ? fieldId : fieldOptions[0].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }))))), farm || firstFarm ?\n    /*#__PURE__*/\n    // <div className=\"fildInfo\">\n    React.createElement(Grid.Row, {\n      className: \"mx-0 p-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 31\n      }\n    }, t(\"location\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 31\n      }\n    }, ` ${farm ? farm.address.location[0].toFixed(2) : firstFarm.address.location[1].toFixed(2)} Lat ${farm ? farm.address.location[1].toFixed(2) : firstFarm.address.location[1].toFixed(2)} Long `))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 31\n      }\n    }, t(\"soil-type\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 31\n      }\n    }, soiltype && soiltype.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 31\n      }\n    }, t(\"terren-type\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 31\n      }\n    }, terraintypes && terraintypes.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-3 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 31\n      }\n    }, t(\"water-source\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 31\n      }\n    }, waterSource && waterSource.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 31\n      }\n    }, t(\"crop\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 31\n      }\n    }, croptype ? croptype.name : \"Uncultivated\", \" \"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 31\n      }\n    }, t(\"stage\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 31\n      }\n    }, cultivationtype ? cultivationtype.name : \"Uncultivated\")))) : null))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      className: \"gridcolumn-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      className: \"right-segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"gray pl-3 py-2 size-s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 23\n      }\n    }, t(\"field-insights\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fieldInsights pl-3 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"size-L green-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 27\n      }\n    }, fieldArea ? fieldArea.toFixed(2) : firstFieldArea.toFixed(2), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"size-s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, \"ac\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"size-xs mb-3\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }\n    }, t(\"total-field-area\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"size-L green-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 27\n      }\n    }, \"413\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"size-s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 32\n      }\n    }, \"bu/ac\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"size-xs mb-3\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 27\n      }\n    }, t(\"avg-yield\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"size-L green-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 27\n      }\n    }, \"16\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"size-xs mb-3\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 27\n      }\n    }, t(\"total-rec-activities\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceBetween mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray \",\n      style: {\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, \" \", t(\"analytics-perscription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceBetween\",\n      style: {\n        paddingRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray mr-2 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }, t(\"last\")), linksArray.map((item, index) => /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mr-2 ml-2\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      style: item.active || item.activeFirst && firstLinkActive ? activeLinkStyles : linkStyles,\n      onClick: () => onLinkClick(item.type, index, item.id),\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 23\n      }\n    }, item.name))))), /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      className: \"right-segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceBetween\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray size-s1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }, t(\"general\")), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray size-standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, t(\"view-all\"))), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray size-standard px-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gray size-standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 25\n      }\n    }, \"\\uD83D\\uDE9C\"), \" Start harvest planning for 2nd week of next month for best yield and market rate.\"))))), history_data_7d || history_data_1M || history_data_1Y ? /*#__PURE__*/React.createElement(ChartList, {\n      ranges: ranges.ranges,\n      data_7D: history_data_7d && history_data_7d,\n      data_1M: history_data_1M && history_data_1M,\n      data_1Y: history_data_1Y && history_data_1Y,\n      type: arrayType && arrayType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }) : \"\")))), /*#__PURE__*/React.createElement(Responsive, {\n      minWidth: 768,\n      maxWidth: 1024,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"dashboard-content ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"gridcolumn-left pl-5\",\n      tablet: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"ml-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-white pl-3 pt-3 green-left-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, \" \", t(\"field-info\"), \" \")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-white ml-5 pl-1 pt-3 green-right-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(AddFieldModal, Object.assign({}, props, {\n      name: t(\"add-field\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mx-0 py-0 mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 16,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, props.userFarms.length > 0 && fieldId ? props.userFarms.forEach(poly => {\n      if (poly._id === fieldId) {\n        polygon = poly.location;\n        center = poly.address.location;\n      }\n    }) : null, /*#__PURE__*/React.createElement(MapPolygon, {\n      editable: false,\n      polygon: polygon,\n      center: center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"row2 mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Field\" // defaultValue={selectedField}\n      ,\n      defaultValue: fieldOptions[0].value,\n      scrolling: true,\n      options: fieldOptions,\n      onChange: (e, {\n        value\n      }) => {\n        setFieldId(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(AddFieldModal, Object.assign({\n      name: t(\"edit\"),\n      color: \"rgba(60, 117, 60, 0.787)\",\n      icon: true\n    }, props, {\n      farmId: fieldId ? fieldId : fieldOptions[0].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }))))), farm || firstFarm ?\n    /*#__PURE__*/\n    // <div className=\"fildInfo\">\n    React.createElement(Grid.Row, {\n      className: \"mx-0 p-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 31\n      }\n    }, t(\"location\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 31\n      }\n    }, ` ${farm ? farm.address.location[0].toFixed(2) : firstFarm.address.location[1].toFixed(2)} Lat ${farm ? farm.address.location[1].toFixed(2) : firstFarm.address.location[1].toFixed(2)} Long `))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 31\n      }\n    }, t(\"soil-type\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 31\n      }\n    }, soiltype && soiltype.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 31\n      }\n    }, t(\"terren-type\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 31\n      }\n    }, terraintypes && terraintypes.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-3 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 31\n      }\n    }, t(\"water-source\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 31\n      }\n    }, waterSource && waterSource.name))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 31\n      }\n    }, t(\"crop\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 31\n      }\n    }, croptype ? croptype.name : \"Uncultivated\", \" \"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"row3 opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 31\n      }\n    }, t(\"stage\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"opacity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 31\n      }\n    }, cultivationtype ? cultivationtype.name : \"Uncultivated\")))) : null))), /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"gridcolumn-right\",\n      tablet: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      className: \"right-segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"gray pl-3 py-2 size-s ipad-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 23\n      }\n    }, t(\"field-insights\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fieldInsights pl-3 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"size-L green-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 27\n      }\n    }, fieldArea ? fieldArea.toFixed(2) : firstFieldArea.toFixed(2), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"size-s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 29\n      }\n    }, \"ac\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"size-xs mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 27\n      }\n    }, t(\"total-field-area\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"size-L green-sec ipad-view-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 27\n      }\n    }, \"413\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"size-s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 32\n      }\n    }, \"bu/ac\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"size-xs mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 27\n      }\n    }, t(\"avg-yield\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"size-L green-sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 27\n      }\n    }, \"16\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"size-xs mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 27\n      }\n    }, t(\"total-rec-activities\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceBetween\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }\n    }, \" \", t(\"analytics-perscription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceBetween\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray mr-2 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 19\n      }\n    }, t(\"last\")), linksArray.map((item, index) => /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mr-2 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      style: item.active || item.activeFirst && firstLinkActive ? activeLinkStyles : linkStyles,\n      onClick: () => onLinkClick(item.type, index, item.id),\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 23\n      }\n    }, item.name))))), /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      className: \"right-segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spaceBetween\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray size-s1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 25\n      }\n    }, t(\"general\")), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray size-standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 25\n      }\n    }, t(\"view-all\"))), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"gray size-standard px-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gray size-standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 25\n      }\n    }, \"\\uD83D\\uDE9C\"), \" Start harvest planing for 2nd week of next month for best yield and market rate.\"))))), history_data_7d || history_data_1M || history_data_1Y ? /*#__PURE__*/React.createElement(ChartList, {\n      ranges: ranges.ranges,\n      data_7D: history_data_7d && history_data_7d,\n      data_1M: history_data_1M && history_data_1M,\n      data_1Y: history_data_1Y && history_data_1Y,\n      type: arrayType && arrayType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 17\n      }\n    }) : \"\")))))\n  );\n};\n\nexport default DashMidGrids;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/DashMidGrids/dashmidgrids.js"],"names":["React","useState","useEffect","Grid","Segment","Dropdown","Responsive","useTranslation","MapPolygon","calculateArea","ChartList","AddFieldModal","Link","getPlantName","linkStyles","color","textDecoration","opacity","activeLinkStyles","DashMidGrids","props","firstLinkActive","setFirstLinkActive","links","id","name","type","activeFirst","t","fieldId","setFieldId","arrayType","setArrayType","linksArray","setLinksArray","polygon","center","fieldOptions","fillData","newData","forEach","element","push","text","farmName","_id","value","location","address","lookup","ranges","history_data","getWeatherData","getUserFarmCropCycles","userId","token","userFarmCropCycles","userFarms","getIdealRange","history_data_7d","history_data_1M","history_data_1Y","console","log","firstFarm","farm","filter","fieldArea","firstFieldArea","terraintypes","item","terrainTypeId","waterSource","watersources","waterSourceId","soiltype","soiltypes","soilTypeId","onLinkClick","index","Id","activeLink","link","NewActiveLink","active","newLinks","Object","assign","plant","croptypes","userFarmCropCycle","isPast","cultivationId","length","cropId","cropSeeds","croptype","cultivationtype","cultivationtypes","poly","e","toFixed","fontWeight","paddingLeft","paddingRight","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Segment, Dropdown, Responsive } from \"semantic-ui-react\";\nimport \"./dashmidgrids.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport MapPolygon from \"../MapPolygon/MapPolygon\";\nimport { calculateArea } from \"../../utils/utilsFunctions\";\nimport ChartList from \"../../components/ChartList/ChartList\";\nimport AddFieldModal from \"../../components/DashMidGrids/AddFieldModal\";\nimport { Link } from \"react-router-dom\";\nimport { getPlantName } from \"../../utils/utilsFunctions\";\n\n\nconst linkStyles = {\n  color: \"#B2AFAF\",\n  textDecoration: \"none\",\n  opacity : \"30%\"\n};\nconst activeLinkStyles = {\n  // color: \"rgba(60, 117, 60, 0.787)\",\n  color: \"#B2AFAF\",\n  textDecoration: \"none\", \n};\n\nconst DashMidGrids = (props) => {\n  const [firstLinkActive, setFirstLinkActive] = useState(true);\n  const links = [\n    // { id: 0, name: \"7D\", type: \"\", activeLINK: firstLinkActive ? true : false },\n    { id: 0, name: \"7D\", type: \"\", activeFirst: true, firstLinkActive },\n    { id: 1, name: \"1M\", type: \"data_1M\" },\n    { id: 2, name: \"1Y\", type: \"data_1Y\" },\n  ];\n  const { t } = useTranslation(\"dashboard\");\n  const [fieldId, setFieldId] = useState(\"\");\n  const [arrayType, setArrayType] = useState(\"\");\n\n  const [linksArray, setLinksArray] = useState(links);\n\n  let polygon = [[48.8566, 2.3522]]; //=  props.userFarms.location\n  let center = [48.8566, 2.3522]; //=  props.userFarms.address.location\n\n  let fieldOptions = [];\n  // let selectedField = \"\";\n  const fillData = (newData) => {\n    newData.forEach((element) => {\n      fieldOptions.push({\n        text: element.farmName,\n        id: element._id,\n        value: element._id,\n      });\n    });\n    // selectedField = newData[0].farmName;\n    polygon = newData[0].location;\n    center = newData[0].address.location;\n  };\n\n  const {\n    lookup,\n    ranges,\n    history_data,\n    getWeatherData,\n    getUserFarmCropCycles,\n    userId,\n    token,\n    userFarmCropCycles,\n    userFarms,\n    getIdealRange,\n  } = props;\n  let { history_data_7d, history_data_1M, history_data_1Y } = history_data;\n\n  console.log({ history_data_1M });\n\n  const firstFarm = props.userFarms[0];\n  const [farm] = props.userFarms.filter((farm) => farm._id === fieldId);\n  console.log({ firstFarm });\n  console.log({ farm });\n\n  const fieldArea = calculateArea(farm ? [farm.location] : []) * 0.000247105;\n  const firstFieldArea =\n    calculateArea(firstFarm ? [firstFarm.location] : []) * 0.000247105;\n  console.log({ fieldArea });\n\n  const [terraintypes] = lookup.terraintypes.filter((item) => {\n    console.log(\"firstFarm\", firstFarm);\n    return farm && firstFarm\n      ? // ? item._id === firstFarm.terrainTypeId\n        item._id === farm.terrainTypeId\n      : item._id === firstFarm.terrainTypeId;\n  });\n  const [waterSource] = lookup.watersources.filter((item) => {\n    return farm && firstFarm\n      ? // ? item._id === firstFarm.terrainTypeId\n        item._id === farm.waterSourceId\n      : item._id === firstFarm.waterSourceId;\n  });\n  const [soiltype] = lookup.soiltypes.filter((item) => {\n    return farm && firstFarm\n      ? // ? item._id === firstFarm.terrainTypeId\n        item._id === farm.soilTypeId\n      : item._id === firstFarm.soilTypeId;\n  });\n\n  // console.log({ soiltype });\n  const onLinkClick = (arrayType, index, Id) => {\n    setArrayType(arrayType);\n    index == 0 ? setFirstLinkActive(true) : setFirstLinkActive(false);\n    console.log({ index });\n    console.log({ firstLinkActive });\n    let [activeLink] = links.filter((link) => link.id === Id);\n    // console.log(index);\n    console.log(arrayType);\n    // let ActiveSensorIndex = sensors.findIndex(\n    //   (sensor) => sensor.deviceId === sensorId\n    // );\n\n    let NewActiveLink = {\n      ...activeLink,\n      active: true,\n    };\n\n    const newLinks = Object.assign([], links, {\n      [index]: NewActiveLink,\n    });\n    // console.log(newSensors);\n    setLinksArray(newLinks);\n  };\n  console.log(arrayType);\n\n  useEffect(() => {\n    farm\n      ? getWeatherData(\n          farm && farm.address.location[0],\n          farm.address.location[0]\n        )\n      : getWeatherData(\n          firstFarm && firstFarm.address.location[0],\n          firstFarm.address.location[1]\n        );\n\n    farm\n      ? getUserFarmCropCycles(farm._id, userId, token)\n      : getUserFarmCropCycles(firstFarm._id, userId, token);\n    if (farm) {\n      const plant = getPlantName(\n        userFarms,\n        farm.address.location,\n        lookup.croptypes\n      );\n      getIdealRange(plant);\n    } else {\n      const plant = firstFarm\n        ? getPlantName(userFarms, firstFarm.address.location, lookup.croptypes)\n        : \"generic\";\n      getIdealRange(plant);\n    }\n  }, [userId, farm]);\n\n  const [userFarmCropCycle] =\n    userFarmCropCycles &&\n    userFarmCropCycles.filter((item) => item.isPast == false);\n  console.log({ userFarmCropCycle });\n\n  const cultivationId =\n    userFarmCropCycles.length && userFarmCropCycle\n      ? userFarmCropCycle.cultivationId\n      : \"\";\n  console.log(\"cultivationId\", cultivationId);\n\n  // let cropId = \"\";\n\n  // if (userFarmCropCycles.length && userFarmCropCycle.cropSeeds[0].cropId) {\n  //   cropId = userFarmCropCycle.cropSeeds[0].cropId;\n  // }\n\n  let cropId =\n    userFarmCropCycles.length && userFarmCropCycle\n      ? userFarmCropCycle.cropSeeds[0].cropId\n      : \"\";\n  const [croptype] = lookup.croptypes.filter((item) => item._id === cropId);\n  const [cultivationtype] = lookup.cultivationtypes.filter(\n    (item) => item._id === cultivationId\n  );\n\n  return (\n    // <Container fluid className=\"maincontainer\">\n    <div>\n      <Responsive minWidth = {1024}>\n        <Grid container columns={2}>\n          {props.userFarms.length > 0 ? fillData(props.userFarms) : null}\n          {/* left green section  */}\n          <Grid.Row className=\"dashboard-content ml-3\">\n            <Grid.Column width={6} className=\"gridcolumn-left\">\n              <Segment>\n                <Grid columns={2}>\n                  <Grid.Row className=\"ml-0 p-0\">\n                    <Grid.Column width={8}>\n                      <h6 className=\"text-white pl-3 pt-3 green-left-header\"> {t(\"field-info\")} </h6>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"text-white ml-5 pl-1 pt-3 green-right-header\">\n                        <AddFieldModal {...props} name={t(\"add-field\")} />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row  className=\"mx-0 py-0 mapContainer\">\n                    <Grid.Column width={16} className=\"p-0\">\n                      {props.userFarms.length > 0 && fieldId\n                        ? props.userFarms.forEach((poly) => \n                        {\n                          if (poly._id === fieldId) \n                          {\n                            polygon = poly.location;\n                            center = poly.address.location;\n                          }\n                        })\n                        : null\n                      }\n                      <MapPolygon editable={false} polygon={polygon} center={center} />\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row className=\"row2 mx-0\">\n                    <Grid.Column width={8}>\n                      <div className=\"dropdown\">\n                        <Dropdown\n                          placeholder=\"Select Field\"\n                          // defaultValue={selectedField}\n                          defaultValue={fieldOptions[0].value}\n                          scrolling\n                          options={fieldOptions}\n                          onChange={(e, { value }) => {\n                            setFieldId(value);\n                          }}\n                        />\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column width={8}>\n                      <div className=\"edit text-center\">\n                        <AddFieldModal\n                          name={t(\"edit\")}\n                          color=\"rgba(60, 117, 60, 0.787)\"\n                          icon={true}\n                          {...props}\n                          farmId={fieldId ? fieldId : fieldOptions[0].value}\n                        />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                \n                  {\n                    farm || firstFarm ? (\n                      // <div className=\"fildInfo\">\n                        <Grid.Row className=\"mx-0 p-0 text-white\">\n                          <Grid.Column width={8}>\n                            <div className=\"\">\n                              <h6 className=\"row3 opacity\">{t(\"location\")}</h6>\n                              <p className=\"opacity\">\n                                {` ${\n                                  farm\n                                    ? farm.address.location[0].toFixed(2)\n                                    : firstFarm.address.location[1].toFixed(2)\n                                } Lat ${\n                                  farm\n                                    ? farm.address.location[1].toFixed(2)\n                                    : firstFarm.address.location[1].toFixed(2)\n                                } Long `}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pr-3\">\n                              <h6 className=\"row3 opacity\">{t(\"soil-type\")}</h6>\n                              <p className=\"opacity\">{soiltype && soiltype.name}</p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pt-3 \">\n                              <h6 className=\"row3 opacity\">{t(\"terren-type\")}</h6>\n                              <p className=\"opacity\">\n                                {terraintypes && terraintypes.name}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pr-3 mt-3\">\n                              <h6 className=\"row3 opacity\">{t(\"water-source\")}</h6>\n                              <p className=\"opacity\">{waterSource && waterSource.name}</p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={16}>\n                            <hr className=\"mt-4\"/>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"\">\n                              <h6 className=\"row3 opacity\">{t(\"crop\")}</h6>\n                              {/* <p className=\"opacity\">Wheat (Triticum) </p> */}\n                              <p className=\"opacity\">\n                                {croptype ? croptype.name : \"Uncultivated\"}{\" \"}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pr-3\">\n                              <h6 className=\"row3 opacity\">{t(\"stage\")}</h6>\n                              {/* <p className=\"opacity\">Harvesting</p> */}\n                              <p className=\"opacity\">\n                                {cultivationtype ? cultivationtype.name : \"Uncultivated\"}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                        </Grid.Row>\n                        \n                    ) : null\n                  }\n                </Grid>\n              </Segment>\n            </Grid.Column>\n\n          {/* end of green section (left-side) */}\n\n            <Grid.Column width={10} className=\"gridcolumn-right\">\n              <Segment raised className=\"right-segment\">\n                <Grid columns={1}>\n                  <Grid.Row className=\"mx-0\">\n                    <Grid.Column>\n                      <p className=\"gray pl-3 py-2 size-s\" >{t(\"field-insights\")}</p>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"fieldInsights pl-3 ml-2\">\n                        <div className=\"center\">\n                          <h1 className=\"size-L green-sec\">\n                            {fieldArea ? fieldArea.toFixed(2) : firstFieldArea.toFixed(2)}\n                            <span className=\"size-s\">ac</span>\n                          </h1>\n                          <p className=\"size-xs mb-3\" style={{fontWeight : \"bold\"}}>{t(\"total-field-area\")}</p>\n                        </div>\n                        <div className=\"center\">\n                          <h1 className=\"size-L green-sec\">\n                            413<span className=\"size-s\">bu/ac</span>\n                          </h1>\n                          <p className=\"size-xs mb-3\" style={{fontWeight : \"bold\"}}>{t(\"avg-yield\")}</p>\n                        </div>\n                        <div className=\"center\">\n                          <h1 className=\"size-L green-sec\">16</h1>\n                          <p className=\"size-xs mb-3\" style={{fontWeight : \"bold\"}}>{t(\"total-rec-activities\")}</p>\n                        </div>\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n              <div className=\"spaceBetween mt-5\">\n                <h6 className=\"gray \" style={{paddingLeft : \"10px\"}}> {t(\"analytics-perscription\")}</h6>\n                <div className=\"spaceBetween\" style={{paddingRight : \"10px\"}}>\n                  <h6 className=\"gray mr-2 ml-2\">{t(\"last\")}</h6>\n                  {linksArray.map((item, index) => (\n                    <h6 className=\"mr-2 ml-2\" key = {index}>\n                      <Link\n                        style={\n                          item.active || (item.activeFirst && firstLinkActive)\n                            ? activeLinkStyles\n                            : linkStyles\n                        }\n                        onClick={() => onLinkClick(item.type, index, item.id)}\n                        key={item.id}\n                      >\n                        {item.name}\n                      </Link>\n                    </h6>\n                  ))}\n                </div>\n              </div>\n              <Segment raised className=\"right-segment\">\n                <Grid columns={1}>\n                  <Grid.Row className=\"mx-0\">\n                    <Grid.Column>\n                      <div className=\"spaceBetween\">\n                        <h6 className=\"gray size-s1\">{t(\"general\")}</h6>\n                        <h6 className=\"gray size-standard\">{t(\"view-all\")}</h6>\n                      </div>\n                      <h6 className=\"gray size-standard px-1\">\n                        <span className=\"gray size-standard\">🚜</span> Start harvest planning for 2nd week of next month for best yield and market rate.\n                      </h6>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n              {history_data_7d || history_data_1M || history_data_1Y ? \n              (\n                <ChartList\n                  ranges={ranges.ranges}\n                  data_7D={history_data_7d && history_data_7d}\n                  data_1M={history_data_1M && history_data_1M}\n                  data_1Y={history_data_1Y && history_data_1Y}\n                  type={arrayType && arrayType}\n                />\n              ) : \n              (\n                \"\"\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n\n\n      {/* responsive from ipad till ipadPro */}\n      <Responsive minWidth={768} maxWidth={1024}>\n        <Grid container columns={2}>\n          {/* {props.userFarms.length > 0 ? fillData(props.userFarms) : null} */}\n          {/* left green section  */}\n          <Grid.Row className=\"dashboard-content ml-2\">\n            <Grid.Column className=\"gridcolumn-left pl-5\" tablet={7}>\n              <Segment>\n                <Grid columns={2}>\n                  <Grid.Row className=\"ml-0 p-0\">\n                    <Grid.Column width={8}>\n                      <h6 className=\"text-white pl-3 pt-3 green-left-header\"> {t(\"field-info\")} </h6>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"text-white ml-5 pl-1 pt-3 green-right-header\">\n                        <AddFieldModal {...props} name={t(\"add-field\")} />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row  className=\"mx-0 py-0 mapContainer\">\n                    <Grid.Column width={16} className=\"p-0\">\n                      {props.userFarms.length > 0 && fieldId\n                        ? props.userFarms.forEach((poly) => \n                        {\n                          if (poly._id === fieldId) \n                          {\n                            polygon = poly.location;\n                            center = poly.address.location;\n                          }\n                        })\n                        : null\n                      }\n                      <MapPolygon editable={false} polygon={polygon} center={center} />\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row className=\"row2 mx-0\">\n                    <Grid.Column width={8}>\n                      <div className=\"dropdown\">\n                        <Dropdown\n                          placeholder=\"Select Field\"\n                          // defaultValue={selectedField}\n                          defaultValue={fieldOptions[0].value}\n                          scrolling\n                          options={fieldOptions}\n                          onChange={(e, { value }) => {\n                            setFieldId(value);\n                          }}\n                        />\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column width={8}>\n                      <div className=\"edit text-center\">\n                        <AddFieldModal\n                          name={t(\"edit\")}\n                          color=\"rgba(60, 117, 60, 0.787)\"\n                          icon={true}\n                          {...props}\n                          farmId={fieldId ? fieldId : fieldOptions[0].value}\n                        />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                \n                  {\n                    farm || firstFarm ? (\n                      // <div className=\"fildInfo\">\n                        <Grid.Row className=\"mx-0 p-0 text-white\">\n                          <Grid.Column width={8}>\n                            <div className=\"\">\n                              <h6 className=\"row3 opacity\">{t(\"location\")}</h6>\n                              <p className=\"opacity\">\n                                {` ${\n                                  farm\n                                    ? farm.address.location[0].toFixed(2)\n                                    : firstFarm.address.location[1].toFixed(2)\n                                } Lat ${\n                                  farm\n                                    ? farm.address.location[1].toFixed(2)\n                                    : firstFarm.address.location[1].toFixed(2)\n                                } Long `}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pr-3\">\n                              <h6 className=\"row3 opacity\">{t(\"soil-type\")}</h6>\n                              <p className=\"opacity\">{soiltype && soiltype.name}</p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pt-3 \">\n                              <h6 className=\"row3 opacity\">{t(\"terren-type\")}</h6>\n                              <p className=\"opacity\">\n                                {terraintypes && terraintypes.name}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pr-3 mt-3\">\n                              <h6 className=\"row3 opacity\">{t(\"water-source\")}</h6>\n                              <p className=\"opacity\">{waterSource && waterSource.name}</p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={16}>\n                            <hr className=\"mt-4\"/>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"\">\n                              <h6 className=\"row3 opacity\">{t(\"crop\")}</h6>\n                              {/* <p className=\"opacity\">Wheat (Triticum) </p> */}\n                              <p className=\"opacity\">\n                                {croptype ? croptype.name : \"Uncultivated\"}{\" \"}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <div className=\"pr-3\">\n                              <h6 className=\"row3 opacity\">{t(\"stage\")}</h6>\n                              {/* <p className=\"opacity\">Harvesting</p> */}\n                              <p className=\"opacity\">\n                                {cultivationtype ? cultivationtype.name : \"Uncultivated\"}\n                              </p>\n                            </div>\n                          </Grid.Column>\n                        </Grid.Row>\n                        \n                    ) : null\n                  }\n                </Grid>\n              </Segment>\n            </Grid.Column>\n\n          {/* end of green section (left-side) */}\n\n            <Grid.Column className=\"gridcolumn-right\" tablet={9}>\n              <Segment raised className=\"right-segment\">\n                <Grid columns={1}>\n                  <Grid.Row className=\"mx-0\">\n                    <Grid.Column>\n                      <p className=\"gray pl-3 py-2 size-s ipad-view\">{t(\"field-insights\")}</p>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"fieldInsights pl-3 ml-2\">\n                        <div className=\"center\">\n                          <h1 className=\"size-L green-sec\">\n                            {fieldArea ? fieldArea.toFixed(2) : firstFieldArea.toFixed(2)}\n                            <span className=\"size-s\">ac</span>\n                          </h1>\n                          <p className=\"size-xs mb-3\">{t(\"total-field-area\")}</p>\n                        </div>\n                        <div className=\"center\">\n                          <h1 className=\"size-L green-sec ipad-view-heading\">\n                            413<span className=\"size-s\">bu/ac</span>\n                          </h1>\n                          <p className=\"size-xs mb-3\">{t(\"avg-yield\")}</p>\n                        </div>\n                        <div className=\"center\">\n                          <h1 className=\"size-L green-sec\">16</h1>\n                          <p className=\"size-xs mb-3\">{t(\"total-rec-activities\")}</p>\n                        </div>\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n              <div className=\"spaceBetween\">\n                <h6 className=\"gray \"> {t(\"analytics-perscription\")}</h6>\n                <div className=\"spaceBetween\">\n                  <h6 className=\"gray mr-2 ml-2\">{t(\"last\")}</h6>\n                  {linksArray.map((item, index) => (\n                    <h6 className=\"mr-2 ml-2\">\n                      <Link\n                        style={\n                          item.active || (item.activeFirst && firstLinkActive)\n                            ? activeLinkStyles\n                            : linkStyles\n                        }\n                        onClick={() => onLinkClick(item.type, index, item.id)}\n                        key={item.id}\n                      >\n                        {item.name}\n                      </Link>\n                    </h6>\n                  ))}\n                </div>\n              </div>\n              <Segment raised className=\"right-segment\">\n                <Grid columns={1}>\n                  <Grid.Row className=\"mx-0\">\n                    <Grid.Column>\n                      <div className=\"spaceBetween\">\n                        <h6 className=\"gray size-s1\">{t(\"general\")}</h6>\n                        <h6 className=\"gray size-standard\">{t(\"view-all\")}</h6>\n                      </div>\n                      <h6 className=\"gray size-standard px-1\">\n                        <span className=\"gray size-standard\">🚜</span> Start harvest planing for 2nd week of next month for best yield and market rate.\n                      </h6>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n              {history_data_7d || history_data_1M || history_data_1Y ? \n              (\n                <ChartList\n                  ranges={ranges.ranges}\n                  data_7D={history_data_7d && history_data_7d}\n                  data_1M={history_data_1M && history_data_1M}\n                  data_1Y={history_data_1Y && history_data_1Y}\n                  type={arrayType && arrayType}\n                />\n              ) : \n              (\n                \"\"\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n    </div>\n    \n  );\n};\n\nexport default DashMidGrids;\n\n\n  \n\n\n"]},"metadata":{},"sourceType":"module"}