{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{compose}from\"redux\";import{withRouter}from\"react-router-dom\";import{Grid,Loader}from\"semantic-ui-react\";import Moment from\"react-moment\";import{getWeatherData}from\"../../actions/weather\";import\"../../utils/css/weather-icons.css\";//Optional include of the default css styles\nimport\"./weatherCard.scss\";import{changeLogo,changeDesc}from\"../../utils/prepareWeatherData\";// import WeatherDisplay from \"react-weather-display\";\nfunction WeatherCard(_ref){var weatherData=_ref.weatherData;// console.log(match);\nuseEffect(function(){// get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n},[weatherData]);// convert to celsius func\nvar calCelsius=function calCelsius(temp){var cell=Math.floor(temp-273.15);return cell;};var temp=weatherData.temp?weatherData.temp.value:weatherData.temp;console.log(\"New-Temp- \",weatherData.temp?weatherData.temp.value:weatherData.temp);var time=weatherData.observation_time?weatherData.observation_time.value:weatherData.observation_time;var weatherDesc=weatherData.weather_code?weatherData.weather_code.value:weatherData.weather_code;var changeTemp=function changeTemp(temp){var newTemp=temp-273.15;return newTemp.toFixed(2);};return temp?/*#__PURE__*/React.createElement(Grid,{className:\"weatherCard\"},/*#__PURE__*/React.createElement(Grid.Row,{className:\"mx-0 top\"},/*#__PURE__*/React.createElement(\"div\",{className:\"middle-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(changeLogo(weatherDesc),\" weatherIcon\")}))),/*#__PURE__*/React.createElement(Grid.Row,{className:\"mx-0 p-0 bottom\",columns:2},/*#__PURE__*/React.createElement(Grid.Column,{width:10,className:\"left-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"weatherdesc\"},/*#__PURE__*/React.createElement(\"h4\",null,changeDesc(weatherDesc))),/*#__PURE__*/React.createElement(\"div\",{className:\"currtime\"},/*#__PURE__*/React.createElement(\"h5\",null,/*#__PURE__*/React.createElement(Moment,{format:\"HH:mm\"},time)))),/*#__PURE__*/React.createElement(Grid.Column,{width:6,className:\"right-section\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",{className:\"text-white text-center\"},/*#__PURE__*/React.createElement(\"span\",null,weatherData.temp?weatherData.temp.value:weatherData.temp,\"\\xB0\"),/*#__PURE__*/React.createElement(\"span\",null,\"C\")),/*#__PURE__*/React.createElement(\"h5\",{className:\"text-center\"},/*#__PURE__*/React.createElement(Moment,{format:\"DD MMM YYYY\"},time)))))):/*#__PURE__*/ // \"\"\nReact.createElement(Loader,{active:true,inline:\"centered\",className:\"mt-3\"});}var mapStateToProps=function mapStateToProps(state){return{weatherData:state.weather.weatherData_sensor};};// export default connect(mapStateToProps, { getWeatherData })(WeatherCard);\nexport default compose(withRouter,connect(mapStateToProps,{getWeatherData:getWeatherData}))(WeatherCard);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/WeatherCard/WeatherCard.js"],"names":["React","useEffect","connect","compose","withRouter","Grid","Loader","Moment","getWeatherData","changeLogo","changeDesc","WeatherCard","weatherData","calCelsius","temp","cell","Math","floor","value","console","log","time","observation_time","weatherDesc","weather_code","changeTemp","newTemp","toFixed","mapStateToProps","state","weather","weatherData_sensor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { getWeatherData } from \"../../actions/weather\";\nimport \"../../utils/css/weather-icons.css\";\n//Optional include of the default css styles\nimport \"./weatherCard.scss\";\n\nimport {changeLogo, changeDesc} from \"../../utils/prepareWeatherData\"\n\n// import WeatherDisplay from \"react-weather-display\";\n\n\n\nfunction WeatherCard({ weatherData }) {\n  // console.log(match);\n  useEffect(() => {\n    // get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n  }, [weatherData]);\n\n  // convert to celsius func\n  const calCelsius = (temp) => {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  };\n\n  const temp = weatherData.temp ? weatherData.temp.value : weatherData.temp;\n  console.log(\"New-Temp- \",weatherData.temp ? weatherData.temp.value : weatherData.temp);\n  const time = weatherData.observation_time ? weatherData.observation_time.value : weatherData.observation_time;\n  const weatherDesc = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n\n\n  const changeTemp = (temp) => {\n    const newTemp = temp-273.15;\n    return newTemp.toFixed(2);\n  }\n\n  return temp ? (\n      <Grid className=\"weatherCard\">\n        <Grid.Row className=\"mx-0 top\">\n          <div className=\"middle-section\">\n            <div className={`${changeLogo(weatherDesc)} weatherIcon`}/>\n          </div>\n        </Grid.Row>\n        <Grid.Row className=\"mx-0 p-0 bottom\" columns={2}>\n          \n          <Grid.Column width={10} className=\"left-section\">\n              <div className=\"weatherdesc\">\n                <h4>{changeDesc(weatherDesc)}</h4>\n              </div>\n              <div className=\"currtime\">\n                <h5>\n                  <Moment format=\"HH:mm\">\n                  {time}\n                  </Moment>\n                </h5>\n              </div>\n          </Grid.Column>\n\n          <Grid.Column width={6} className=\"right-section\">\n            <div>\n              \n              <h3 className='text-white text-center'>\n                <span>{weatherData.temp ? weatherData.temp.value : weatherData.temp}&deg;</span><span>C</span>\n              </h3>\n              <h5 className=\"text-center\">  \n                <Moment format=\"DD MMM YYYY\">\n                  {time}\n                </Moment>\n                \n              </h5>\n              \n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n  ) : (\n    // \"\"\n    <Loader active inline=\"centered\" className=\"mt-3\" />\n  );\n}\nconst mapStateToProps = (state) => ({\n  weatherData: state.weather.weatherData_sensor,\n});\n// export default connect(mapStateToProps, { getWeatherData })(WeatherCard);\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { getWeatherData })\n)(WeatherCard);\n\n"]},"metadata":{},"sourceType":"module"}