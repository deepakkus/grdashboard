{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/AlertBar/AlertBar.js\";\nimport React, { useEffect } from \"react\"; // import Button from \"@material-ui/core/Button\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function AlertBar({\n  children,\n  onClickFunc,\n  verticalInput,\n  horizontalInput,\n  severity,\n  isOpen,\n  msg,\n  errorMsg\n}) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"left\"\n  });\n  useEffect(() => {\n    if (verticalInput || horizontalInput || isOpen) {\n      setState({\n        open: isOpen,\n        vertical: verticalInput,\n        horizontal: horizontalInput\n      });\n    }\n\n    console.log({\n      isOpen\n    });\n  }, [isOpen]);\n  const {\n    vertical,\n    horizontal,\n    open\n  } = state;\n\n  const handleClick = newState => () => {\n    setState({\n      open: true,\n      ...newState\n    });\n  };\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    open: open,\n    onClose: handleClose // message=\"I love snacks\"\n    ,\n    key: vertical + horizontal,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: severity ? severity : \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, msg ? msg : \"This is a success message!\")));\n}","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/AlertBar/AlertBar.js"],"names":["React","useEffect","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","AlertBar","children","onClickFunc","verticalInput","horizontalInput","severity","isOpen","msg","errorMsg","classes","state","setState","useState","open","vertical","horizontal","console","log","handleClick","newState","handleClose"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n// import Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n})); \n\nexport default function AlertBar({\n  children,\n  onClickFunc,\n  verticalInput,\n  horizontalInput,\n  severity,\n  isOpen,\n  msg,\n  errorMsg,\n}) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"left\",\n  });\n\n  useEffect(() => {\n    if (verticalInput || horizontalInput || isOpen) {\n      setState({\n        open: isOpen,\n        vertical: verticalInput,\n        horizontal: horizontalInput,\n      });\n    }\n    console.log({ isOpen });\n  }, [isOpen]);\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = (newState) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        // message=\"I love snacks\"\n        key={vertical + horizontal}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={severity ? severity : \"success\"}>\n          {msg ? msg : \"This is a success message!\"}\n        </Alert>\n      </Snackbar>\n      {/* <Alert severity=\"error\">This is an error message!</Alert> */}\n      {/* <Alert severity=\"warning\">This is a warning message!</Alert> */}\n      {/* <Alert severity=\"info\">This is an information message!</Alert> */}\n      {/* <Alert severity=\"success\">This is a success message!</Alert> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}