{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/WeatherCard/WeatherCard.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { getWeatherData } from \"../../actions/weather\";\nimport \"../../utils/css/weather-icons.css\"; //Optional include of the default css styles\n\nimport \"./weatherCard.scss\";\nimport { changeLogo, changeDesc } from \"../../utils/prepareWeatherData\"; // import WeatherDisplay from \"react-weather-display\";\n\nfunction WeatherCard({\n  weatherData\n}) {\n  // console.log(match);\n  useEffect(() => {// get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n  }, [weatherData]); // convert to celsius func\n\n  const calCelsius = temp => {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  };\n\n  const temp = weatherData.temp ? weatherData.temp.value : weatherData.temp;\n  console.log(\"New-Temp- \", weatherData.temp ? weatherData.temp.value : weatherData.temp);\n  const time = weatherData.observation_time ? weatherData.observation_time.value : weatherData.observation_time;\n  const weatherDesc = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n\n  const changeTemp = temp => {\n    const newTemp = temp - 273.15;\n    return newTemp.toFixed(2);\n  };\n\n  return temp ? /*#__PURE__*/React.createElement(Grid, {\n    className: \"weatherCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"mx-0 top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"middle-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${changeLogo(weatherDesc)} weatherIcon`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"mx-0 p-0 bottom\",\n    columns: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    className: \"left-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherdesc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, changeDesc(weatherDesc))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"currtime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, time)))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    className: \"right-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-white text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, weatherData.temp ? weatherData.temp.value : weatherData.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 97\n    }\n  }, \"C\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, time)))))) :\n  /*#__PURE__*/\n  // \"\"\n  React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  });\n}\n\nconst mapStateToProps = state => ({\n  weatherData: state.weather.weatherData_sensor\n}); // export default connect(mapStateToProps, { getWeatherData })(WeatherCard);\n\n\nexport default compose(withRouter, connect(mapStateToProps, {\n  getWeatherData\n}))(WeatherCard);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/WeatherCard/WeatherCard.js"],"names":["React","useEffect","connect","compose","withRouter","Grid","Loader","Moment","getWeatherData","changeLogo","changeDesc","WeatherCard","weatherData","calCelsius","temp","cell","Math","floor","value","console","log","time","observation_time","weatherDesc","weather_code","changeTemp","newTemp","toFixed","mapStateToProps","state","weather","weatherData_sensor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport Moment from \"react-moment\";\nimport { getWeatherData } from \"../../actions/weather\";\nimport \"../../utils/css/weather-icons.css\";\n//Optional include of the default css styles\nimport \"./weatherCard.scss\";\n\nimport {changeLogo, changeDesc} from \"../../utils/prepareWeatherData\"\n\n// import WeatherDisplay from \"react-weather-display\";\n\n\n\nfunction WeatherCard({ weatherData }) {\n  // console.log(match);\n  useEffect(() => {\n    // get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n  }, [weatherData]);\n\n  // convert to celsius func\n  const calCelsius = (temp) => {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  };\n\n  const temp = weatherData.temp ? weatherData.temp.value : weatherData.temp;\n  console.log(\"New-Temp- \",weatherData.temp ? weatherData.temp.value : weatherData.temp);\n  const time = weatherData.observation_time ? weatherData.observation_time.value : weatherData.observation_time;\n  const weatherDesc = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n\n\n  const changeTemp = (temp) => {\n    const newTemp = temp-273.15;\n    return newTemp.toFixed(2);\n  }\n\n  return temp ? (\n      <Grid className=\"weatherCard\">\n        <Grid.Row className=\"mx-0 top\">\n          <div className=\"middle-section\">\n            <div className={`${changeLogo(weatherDesc)} weatherIcon`}/>\n          </div>\n        </Grid.Row>\n        <Grid.Row className=\"mx-0 p-0 bottom\" columns={2}>\n          \n          <Grid.Column width={10} className=\"left-section\">\n              <div className=\"weatherdesc\">\n                <h4>{changeDesc(weatherDesc)}</h4>\n              </div>\n              <div className=\"currtime\">\n                <h5>\n                  <Moment format=\"HH:mm\">\n                  {time}\n                  </Moment>\n                </h5>\n              </div>\n          </Grid.Column>\n\n          <Grid.Column width={6} className=\"right-section\">\n            <div>\n              \n              <h3 className='text-white text-center'>\n                <span>{weatherData.temp ? weatherData.temp.value : weatherData.temp}&deg;</span><span>C</span>\n              </h3>\n              <h5 className=\"text-center\">  \n                <Moment format=\"DD MMM YYYY\">\n                  {time}\n                </Moment>\n                \n              </h5>\n              \n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n  ) : (\n    // \"\"\n    <Loader active inline=\"centered\" className=\"mt-3\" />\n  );\n}\nconst mapStateToProps = (state) => ({\n  weatherData: state.weather.weatherData_sensor,\n});\n// export default connect(mapStateToProps, { getWeatherData })(WeatherCard);\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { getWeatherData })\n)(WeatherCard);\n\n"]},"metadata":{},"sourceType":"module"}