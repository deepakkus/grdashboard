{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// export function prepareWeatherData({ weatherData, icon }) {\n//   //   useEffect(() => {\n//   //     getWeatherData();\n//   //   }, [getWeatherData]);\n//   const [weatherState, setWeatherState] = useState({});\n//   const [iconState, setIconState] = useState({});\n//   const weatherIcons = {\n//     Thunderstorm: \"wi-thunderstorm\",\n//     Drizzle: \"wi-sleet\",\n//     Rain: \"wi-storm-showers\",\n//     Snow: \"wi-snow\",\n//     Atmosphere: \"wi-fog\",\n//     Clear: \"wi-day-sunny\",\n//     Clouds: \"wi-day-fog\",\n//   };\n//   //   get the right weather Icon depnds on the randeId\n//   const get_WeatherIcon = (icons, rangeId) => {\n//     switch (true) {\n//       case rangeId >= 200 && rangeId < 232:\n//         setIconState({ icon: icons.Thunderstorm });\n//         break;\n//       case rangeId >= 300 && rangeId <= 321:\n//         setIconState({ icon: icons.Drizzle });\n//         break;\n//       case rangeId >= 500 && rangeId <= 521:\n//         setIconState({ icon: icons.Rain });\n//         break;\n//       case rangeId >= 600 && rangeId <= 622:\n//         setIconState({ icon: icons.Snow });\n//         break;\n//       case rangeId >= 701 && rangeId <= 781:\n//         setIconState({ icon: icons.Atmosphere });\n//         break;\n//       case rangeId === 800:\n//         setIconState({ icon: icons.Clear });\n//         break;\n//       case rangeId >= 801 && rangeId <= 804:\n//         setIconState({ icon: icons.Clouds });\n//         break;\n//       default:\n//         setIconState({ icon: icons.Clouds });\n//     }\n//   };\n//   export const changeLogo = (image) => {\n//     switch(image){\n//       case \"cloudy\":\n//         return weatherIcons.Clouds;\n//       case \"partly_cloudy\":\n//         return weatherIcons.Clouds;\n//         break;\n//       case \"mostly_cloudy\":\n//         return weatherIcons.Clouds;\n//         break;\n//       case \"mostly_clear\":\n//         return weatherIcons.Clear;\n//         break;\n//       case \"clear\":\n//         return weatherIcons.Clear;\n//         break;\n//       case \"fog\":\n//         return weatherIcons.Clouds;\n//         break;\n//       case \"fog_light\":\n//         return weatherIcons.Clear;\n//         break;\n//       case \"drizzle\":\n//         return weatherIcons.Drizzle;\n//         break;\n//       case \"rain_light\":\n//         return weatherIcons.Drizzle;\n//         break;\n//       case \"rain\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"rain_heavy\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"tstorm\":\n//         return weatherIcons.Thunderstorm;\n//         break;\n//       case \"flurries\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"snow_light\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"snow\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"snow_heavy\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"ice_pallets_light\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"ice_pallets_heavy\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"ice_pallets\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"freezing_drizzle\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"freezing_rain_light\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"freezing_rain\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"freezing_rain_heavy\":\n//         return weatherIcons.Rain;\n//         break;\n//       default:\n//         return weatherIcons.Atmosphere;\n//     }\n//   }\n//   useEffect(async () => {\n//     try {\n//       getWeatherData();\n//       // const lat = url.lat;\n//       // const lon = url.lon;\n//       const lat = 22;\n//       const lon = 226;\n//       const res = await axios.get(\n//         `https://y9yaxzh357.execute-api.us-east-1.amazonaws.com/api/weather?lat=${lat}&lng=${lon}`\n//       );\n//       console.log(\"res\", res.data);\n//       setWeatherState({\n//         weatherData: res.data,\n//       });\n//       getWeatherData(res.data);\n//       get_WeatherIcon(weatherIcons, res.data.weatherId);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   }, [weatherIcons]);\n//   // convert to celsius func\n//   const calCelsius = (temp) => {\n//     let cell = Math.floor(temp - 273.15);\n//     return cell;\n//   };\n//   const { weatherData } = weatherState;\n//   const { icon } = iconState;\n//   console.log(\"weatherData\", weatherData);\n//   console.log(\"icon:\", icon);\n//   // get data from weatherData state\n//   const precipIntensity = weatherData.precipIntensity;\n//   const precipProbability = weatherData.precipProbability;\n//   const pressure = weatherData.pressure;\n//   const temp = calCelsius(weatherData.temp);\n//   const wind_deg = weatherData.wind_deg;\n//   const wind_speed = weatherData.wind_speed;\n//   const weatherId = weatherData.weatherId;\n//   //   console.log(\"precipIntensity\", precipIntensity);\n//   //weather icon func\n//   // get_WeatherIcon(weatherIcons, weatherId);\n//   return { weatherData, icon };\n// }\n{\n  /* <Moment format=\"D MMM YYYY h:mm a\" unix> */\n}\n{\n  /* <Moment format=\"YYYY-MM-DD HH:mm\"> */\n}\n{\n  /* <i className={`wi ${icon} display-1  weatherIcon`} />\n  <h4 className=\"pt-1\">{temp}&deg;C</h4> */\n}\n{\n  /* currentTemperature={weatherData.temp ? weatherData.temp.value : weatherData.temp} */\n}\n{\n  /* <WeatherDisplay  \n   height={50}\n   width={120}\n   // currentCondition={changeLogo(weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code)}\n   currentTemperature={weatherData.temp ? weatherData.temp.value : weatherData.temp}\n  /> */\n}\nconst weatherIcons = {\n  Thunderstorm: \"wi wi-thunderstorm\",\n  Drizzle: \"wi wi-sleet\",\n  Rain: \"wi wi-storm-showers\",\n  Snow: \"wi wi-snow\",\n  Atmosphere: \"wi wi-fog\",\n  Clear: \"wi wi-day-sunny\",\n  Clouds: \"wi wi-day-fog\"\n};\nexport const changeLogo = image => {\n  switch (image) {\n    case \"cloudy\":\n      return weatherIcons.Clouds;\n\n    case \"partly_cloudy\":\n      return weatherIcons.Clouds;\n      break;\n\n    case \"mostly_cloudy\":\n      return weatherIcons.Clouds;\n      break;\n\n    case \"mostly_clear\":\n      return weatherIcons.Clear;\n      break;\n\n    case \"clear\":\n      return weatherIcons.Clear;\n      break;\n\n    case \"fog\":\n      return weatherIcons.Clouds;\n      break;\n\n    case \"fog_light\":\n      return weatherIcons.Clear;\n      break;\n\n    case \"drizzle\":\n      return weatherIcons.Drizzle;\n      break;\n\n    case \"rain_light\":\n      return weatherIcons.Drizzle;\n      break;\n\n    case \"rain\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"rain_heavy\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"tstorm\":\n      return weatherIcons.Thunderstorm;\n      break;\n\n    case \"flurries\":\n      return weatherIcons.Snow;\n      break;\n\n    case \"snow_light\":\n      return weatherIcons.Snow;\n      break;\n\n    case \"snow\":\n      return weatherIcons.Snow;\n      break;\n\n    case \"snow_heavy\":\n      return weatherIcons.Snow;\n      break;\n\n    case \"ice_pallets_light\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"ice_pallets_heavy\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"ice_pallets\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"freezing_drizzle\":\n      return weatherIcons.Snow;\n      break;\n\n    case \"freezing_rain_light\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"freezing_rain\":\n      return weatherIcons.Rain;\n      break;\n\n    case \"freezing_rain_heavy\":\n      return weatherIcons.Rain;\n      break;\n\n    default:\n      return weatherIcons.Atmosphere;\n  }\n};\nexport const changeDesc = desc => {\n  switch (desc) {\n    case \"cloudy\":\n      return \"cloudy\";\n\n    case \"partly_cloudy\":\n      return \"cloudy\";\n      break;\n\n    case \"mostly_cloudy\":\n      return \"cloudy\";\n      break;\n\n    case \"mostly_clear\":\n      return \"clear\";\n      break;\n\n    case \"clear\":\n      return \"clear\";\n      break;\n\n    case \"fog\":\n      return \"fog\";\n      break;\n\n    case \"fog_light\":\n      return \"fog\";\n      break;\n\n    case \"drizzle\":\n      return \"drizzle\";\n      break;\n\n    case \"rain_light\":\n      return \"drizzle\";\n      break;\n\n    case \"rain\":\n      return \"rain\";\n      break;\n\n    case \"rain_heavy\":\n      return \"heavy rain\";\n      break;\n\n    case \"tstorm\":\n      return \"thunderstorm\";\n      break;\n\n    case \"flurries\":\n      return \"flurry\";\n      break;\n\n    case \"snow_light\":\n      return \"snow\";\n      break;\n\n    case \"snow\":\n      return \"snow\";\n      break;\n\n    case \"snow_heavy\":\n      return \"snow\";\n      break;\n\n    case \"ice_pallets_light\":\n      return \"rain\";\n      break;\n\n    case \"ice_pallets_heavy\":\n      return \"rain\";\n      break;\n\n    case \"ice_pallets\":\n      return \"rain\";\n      break;\n\n    case \"freezing_drizzle\":\n      return \"drizzle\";\n      break;\n\n    case \"freezing_rain_light\":\n      return \"rain\";\n      break;\n\n    case \"freezing_rain\":\n      return \"rain\";\n      break;\n\n    case \"freezing_rain_heavy\":\n      return \"rain\";\n      break;\n\n    default:\n      return \"Clear\";\n  }\n};","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/utils/prepareWeatherData.js"],"names":["weatherIcons","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","changeLogo","image","changeDesc","desc"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// export function prepareWeatherData({ weatherData, icon }) {\n//   //   useEffect(() => {\n//   //     getWeatherData();\n//   //   }, [getWeatherData]);\n\n//   const [weatherState, setWeatherState] = useState({});\n//   const [iconState, setIconState] = useState({});\n\n//   const weatherIcons = {\n//     Thunderstorm: \"wi-thunderstorm\",\n//     Drizzle: \"wi-sleet\",\n//     Rain: \"wi-storm-showers\",\n//     Snow: \"wi-snow\",\n//     Atmosphere: \"wi-fog\",\n//     Clear: \"wi-day-sunny\",\n//     Clouds: \"wi-day-fog\",\n//   };\n\n//   //   get the right weather Icon depnds on the randeId\n//   const get_WeatherIcon = (icons, rangeId) => {\n//     switch (true) {\n//       case rangeId >= 200 && rangeId < 232:\n//         setIconState({ icon: icons.Thunderstorm });\n//         break;\n//       case rangeId >= 300 && rangeId <= 321:\n//         setIconState({ icon: icons.Drizzle });\n//         break;\n//       case rangeId >= 500 && rangeId <= 521:\n//         setIconState({ icon: icons.Rain });\n//         break;\n//       case rangeId >= 600 && rangeId <= 622:\n//         setIconState({ icon: icons.Snow });\n//         break;\n//       case rangeId >= 701 && rangeId <= 781:\n//         setIconState({ icon: icons.Atmosphere });\n//         break;\n//       case rangeId === 800:\n//         setIconState({ icon: icons.Clear });\n//         break;\n//       case rangeId >= 801 && rangeId <= 804:\n//         setIconState({ icon: icons.Clouds });\n//         break;\n//       default:\n//         setIconState({ icon: icons.Clouds });\n//     }\n//   };\n\n//   export const changeLogo = (image) => {\n//     switch(image){\n//       case \"cloudy\":\n//         return weatherIcons.Clouds;\n        \n//       case \"partly_cloudy\":\n//         return weatherIcons.Clouds;\n//         break;\n//       case \"mostly_cloudy\":\n//         return weatherIcons.Clouds;\n//         break;\n//       case \"mostly_clear\":\n//         return weatherIcons.Clear;\n//         break;\n//       case \"clear\":\n//         return weatherIcons.Clear;\n//         break;\n//       case \"fog\":\n//         return weatherIcons.Clouds;\n//         break;\n//       case \"fog_light\":\n//         return weatherIcons.Clear;\n//         break;\n//       case \"drizzle\":\n//         return weatherIcons.Drizzle;\n//         break;\n//       case \"rain_light\":\n//         return weatherIcons.Drizzle;\n//         break;\n//       case \"rain\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"rain_heavy\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"tstorm\":\n//         return weatherIcons.Thunderstorm;\n//         break;\n//       case \"flurries\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"snow_light\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"snow\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"snow_heavy\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"ice_pallets_light\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"ice_pallets_heavy\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"ice_pallets\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"freezing_drizzle\":\n//         return weatherIcons.Snow;\n//         break;\n//       case \"freezing_rain_light\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"freezing_rain\":\n//         return weatherIcons.Rain;\n//         break;\n//       case \"freezing_rain_heavy\":\n//         return weatherIcons.Rain;\n//         break;\n//       default:\n//         return weatherIcons.Atmosphere;\n//     }\n//   }\n\n//   useEffect(async () => {\n//     try {\n//       getWeatherData();\n//       // const lat = url.lat;\n//       // const lon = url.lon;\n//       const lat = 22;\n//       const lon = 226;\n//       const res = await axios.get(\n//         `https://y9yaxzh357.execute-api.us-east-1.amazonaws.com/api/weather?lat=${lat}&lng=${lon}`\n//       );\n//       console.log(\"res\", res.data);\n//       setWeatherState({\n//         weatherData: res.data,\n//       });\n//       getWeatherData(res.data);\n//       get_WeatherIcon(weatherIcons, res.data.weatherId);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   }, [weatherIcons]);\n\n//   // convert to celsius func\n//   const calCelsius = (temp) => {\n//     let cell = Math.floor(temp - 273.15);\n//     return cell;\n//   };\n\n//   const { weatherData } = weatherState;\n//   const { icon } = iconState;\n\n//   console.log(\"weatherData\", weatherData);\n//   console.log(\"icon:\", icon);\n\n//   // get data from weatherData state\n//   const precipIntensity = weatherData.precipIntensity;\n//   const precipProbability = weatherData.precipProbability;\n//   const pressure = weatherData.pressure;\n//   const temp = calCelsius(weatherData.temp);\n//   const wind_deg = weatherData.wind_deg;\n//   const wind_speed = weatherData.wind_speed;\n//   const weatherId = weatherData.weatherId;\n\n//   //   console.log(\"precipIntensity\", precipIntensity);\n\n//   //weather icon func\n//   // get_WeatherIcon(weatherIcons, weatherId);\n\n//   return { weatherData, icon };\n// }\n\n\n\n\n\n\n\n\n\n{/* <Moment format=\"D MMM YYYY h:mm a\" unix> */}\n              {/* <Moment format=\"YYYY-MM-DD HH:mm\"> */}\n\n               {/* <i className={`wi ${icon} display-1  weatherIcon`} />\n            <h4 className=\"pt-1\">{temp}&deg;C</h4> */}\n\n            {/* currentTemperature={weatherData.temp ? weatherData.temp.value : weatherData.temp} */}\n            \n            {/* <WeatherDisplay  \n              height={50}\n              width={120}\n              // currentCondition={changeLogo(weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code)}\n              currentTemperature={weatherData.temp ? weatherData.temp.value : weatherData.temp}\n            /> */}\n\n\n\n\n\n\n\n\n\nconst weatherIcons = {\n  Thunderstorm: \"wi wi-thunderstorm\",\n  Drizzle: \"wi wi-sleet\",\n  Rain: \"wi wi-storm-showers\",\n  Snow: \"wi wi-snow\",\n  Atmosphere: \"wi wi-fog\",\n  Clear: \"wi wi-day-sunny\",\n  Clouds: \"wi wi-day-fog\",\n};\n\nexport const changeLogo = (image) => {\n  switch(image){\n    case \"cloudy\":\n      return weatherIcons.Clouds;\n      \n    case \"partly_cloudy\":\n      return weatherIcons.Clouds;\n      break;\n    case \"mostly_cloudy\":\n      return weatherIcons.Clouds;\n      break;\n    case \"mostly_clear\":\n      return weatherIcons.Clear;\n      break;\n    case \"clear\":\n      return weatherIcons.Clear;\n      break;\n    case \"fog\":\n      return weatherIcons.Clouds;\n      break;\n    case \"fog_light\":\n      return weatherIcons.Clear;\n      break;\n    case \"drizzle\":\n      return weatherIcons.Drizzle;\n      break;\n    case \"rain_light\":\n      return weatherIcons.Drizzle;\n      break;\n    case \"rain\":\n      return weatherIcons.Rain;\n      break;\n    case \"rain_heavy\":\n      return weatherIcons.Rain;\n      break;\n    case \"tstorm\":\n      return weatherIcons.Thunderstorm;\n      break;\n    case \"flurries\":\n      return weatherIcons.Snow;\n      break;\n    case \"snow_light\":\n      return weatherIcons.Snow;\n      break;\n    case \"snow\":\n      return weatherIcons.Snow;\n      break;\n    case \"snow_heavy\":\n      return weatherIcons.Snow;\n      break;\n    case \"ice_pallets_light\":\n      return weatherIcons.Rain;\n      break;\n    case \"ice_pallets_heavy\":\n      return weatherIcons.Rain;\n      break;\n    case \"ice_pallets\":\n      return weatherIcons.Rain;\n      break;\n    case \"freezing_drizzle\":\n      return weatherIcons.Snow;\n      break;\n    case \"freezing_rain_light\":\n      return weatherIcons.Rain;\n      break;\n    case \"freezing_rain\":\n      return weatherIcons.Rain;\n      break;\n    case \"freezing_rain_heavy\":\n      return weatherIcons.Rain;\n      break;\n    default:\n      return weatherIcons.Atmosphere;\n  }\n}\nexport const changeDesc = (desc) => {\n  switch(desc){\n    case \"cloudy\":\n      return \"cloudy\";\n      \n    case \"partly_cloudy\":\n      return \"cloudy\";\n      break;\n    case \"mostly_cloudy\":\n      return \"cloudy\";\n      break;\n    case \"mostly_clear\":\n      return \"clear\";\n      break;\n    case \"clear\":\n      return \"clear\";\n      break;\n    case \"fog\":\n      return \"fog\";\n      break;\n    case \"fog_light\":\n      return \"fog\";\n      break;\n    case \"drizzle\":\n      return \"drizzle\";\n      break;\n    case \"rain_light\":\n      return \"drizzle\";\n      break;\n    case \"rain\":\n      return \"rain\";\n      break;\n    case \"rain_heavy\":\n      return \"heavy rain\";\n      break;\n    case \"tstorm\":\n      return \"thunderstorm\";\n      break;\n    case \"flurries\":\n      return \"flurry\";\n      break;\n    case \"snow_light\":\n      return \"snow\";\n      break;\n    case \"snow\":\n      return \"snow\";\n      break;\n    case \"snow_heavy\":\n      return \"snow\";\n      break;\n    case \"ice_pallets_light\":\n      return \"rain\";\n      break;\n    case \"ice_pallets_heavy\":\n      return \"rain\";\n      break;\n    case \"ice_pallets\":\n      return \"rain\";\n      break;\n    case \"freezing_drizzle\":\n      return \"drizzle\";\n      break;\n    case \"freezing_rain_light\":\n      return \"rain\";\n      break;\n    case \"freezing_rain\":\n      return \"rain\";\n      break;\n    case \"freezing_rain_heavy\":\n      return \"rain\";\n      break;\n    default:\n      return \"Clear\";\n  }\n}"]},"metadata":{},"sourceType":"module"}