{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/PublicData/PublicData.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getWeatherData } from \"../../actions/weather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Loader, Grid, Container } from \"semantic-ui-react\";\nimport \"../../utils/css/weather-icons.css\";\nimport \"./PublicData.scss\";\nimport WeatherDisplay from \"react-weather-display\";\nimport MainButton from \"../MainButton/MainButton\"; // import { useTranslation } from \"react-i18next\";\n// const weatherIcons = {\n//   Thunderstorm: \"wi-thunderstorm\",\n//   Drizzle: \"wi-sleet\",\n//   Rain: \"wi-storm-showers\",\n//   Snow: \"wi-snow\",\n//   Atmosphere: \"wi-fog\",\n//   Clear: \"wi-day-sunny\",\n//   Clouds: \"wi-day-fog\",\n// };\n\nconst PublicData = props => {\n  // weatherData = null;\n  // TODO get latlng from browser location if not found\n  // transltion i18next\n  const {\n    t\n  } = useTranslation(\"public-data\");\n  let polygon = props.userFarms[0].location; // console.log(polygon)\n\n  const {\n    weatherData,\n    getWeatherData,\n    latlng,\n    className,\n    gisclassName\n  } = props;\n  const DetailWeather = weatherData[0];\n  console.log(DetailWeather); // DetailWeather ? setApi(true) : setApi(false)\n\n  const Min_Air_Temp = DetailWeather ? DetailWeather.Temp_air_min.toFixed(2) : DetailWeather;\n  const Max_Air_Temp = DetailWeather ? DetailWeather.Temp_air_max.toFixed(2) : DetailWeather;\n  const Rel_Humidity = DetailWeather ? DetailWeather.Rel_humidity.toFixed(2) : DetailWeather;\n  const Min_Land_Temp = DetailWeather ? DetailWeather.Temp_land_min.toFixed(2) : DetailWeather;\n  const Max_Land_Temp = DetailWeather ? DetailWeather.Temp_land_max.toFixed(2) : DetailWeather;\n  const Rain_det = DetailWeather ? DetailWeather.Rain : DetailWeather;\n  const snow_depth = DetailWeather ? DetailWeather.Snow_depth : DetailWeather;\n  const Wind_det = DetailWeather ? DetailWeather.Windspeed : DetailWeather; // console.log(Min_Air_Temp, Max_Air_Temp, Rain_det, Rel_Humidity)\n  // console.log(DetailWeather)\n  // weather Icon function\n  // const [iconState, setIconState] = useState({ icon: \"wi-day-sunny\" });\n  // console.log(\"routeID\", match.params.id);\n  // console.log(\"top\", weatherData);\n  // get the right weather Icon depnds on the randeId\n  // const get_WeatherIcon = (icons, rangeId) => {\n  //   switch (true) {\n  //     case rangeId >= 200 && rangeId < 232:\n  //       setIconState({ icon: icons.Thunderstorm });\n  //       break;\n  //     case rangeId >= 300 && rangeId <= 321:\n  //       setIconState({ icon: icons.Drizzle });\n  //       break;\n  //     case rangeId >= 500 && rangeId <= 521:\n  //       setIconState({ icon: icons.Rain });\n  //       break;\n  //     case rangeId >= 600 && rangeId <= 622:\n  //       setIconState({ icon: icons.Snow });\n  //       break;\n  //     case rangeId >= 701 && rangeId <= 781:\n  //       setIconState({ icon: icons.Atmosphere });\n  //       break;\n  //     case rangeId === 800:\n  //       setIconState({ icon: icons.Clear });\n  //       break;\n  //     case rangeId >= 801 && rangeId <= 804:\n  //       setIconState({ icon: icons.Clouds });\n  //       break;\n  //     default:\n  //       setIconState({ icon: icons.Clouds });\n  //   }\n  // };\n\n  const changeLogo = image => {\n    switch (image) {\n      case \"cloudy\":\n        return \"cloudy\";\n        break;\n\n      case \"partly_cloudy\":\n        return \"cloudy\";\n        break;\n\n      case \"mostly_cloudy\":\n        return \"cloudy\";\n        break;\n\n      case \"mostly_clear\":\n        return \"sunny\";\n        break;\n\n      case \"clear\":\n        return \"sunny\";\n        break;\n\n      case \"fog\":\n        return \"cloudy\";\n        break;\n\n      case \"fog_light\":\n        return \"sunny\";\n        break;\n\n      case \"drizzle\":\n        return \"cloudy\";\n        break;\n\n      case \"rain_light\":\n        return \"rainy\";\n        break;\n\n      case \"rain\":\n        return \"rainy\";\n        break;\n\n      case \"rain_heavy\":\n        return \"rainy\";\n        break;\n\n      case \"tstorm\":\n        return \"rainy\";\n        break;\n\n      case \"flurries\":\n        return \"rainy\";\n        break;\n\n      case \"snow_light\":\n        return \"snowy\";\n        break;\n\n      case \"snow\":\n        return \"snowy\";\n        break;\n\n      case \"snow_heavy\":\n        return \"snowy\";\n        break;\n\n      case \"ice_pallets_light\":\n        return \"rainy\";\n        break;\n\n      case \"ice_pallets_heavy\":\n        return \"rainy\";\n        break;\n\n      case \"ice_pallets\":\n        return \"rainy\";\n        break;\n\n      case \"freezing_drizzle\":\n        return \"snowy\";\n        break;\n\n      case \"freezing_rain_light\":\n        return \"rainy\";\n        break;\n\n      case \"freezing_rain\":\n        return \"rainy\";\n        break;\n\n      case \"freezing_rain_heavy\":\n        return \"rainy\";\n        break;\n\n      default:\n        return \"cloudy\";\n    }\n  };\n\n  useEffect(() => {\n    // getWeatherData(latlng.lat, latlng.lon);\n    // get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n    !DetailWeather && getWeatherData(latlng.lat, latlng.lon, polygon);\n  }, []); // convert to celsius func\n\n  const calCelsius = temp => {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }; // const { icon } = iconState;\n  // if (!weatherData) {\n  //   console.log('yes')\n  // }\n  // const precipIntensity = weatherData.precipitation ? weatherData.precipitation.value : weatherData.precipitation;\n  // const humidity = weatherData.humidity ? weatherData.precipitation.value : weatherData.humidity;\n  // const visibility = weatherData.visibility ? weatherData.visibility.value : weatherData.visibility;\n\n\n  const temp = weatherData.temp ? weatherData.temp.value : weatherData.temp; // const wind_direction = weatherData.wind_direction ? weatherData.wind_direction.value : weatherData.wind_direction;\n  // const wind_speed = weatherData.wind_speed ? weatherData.wind_speed.value : weatherData.wind_speed;\n\n  const weatherDesc = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n  const main = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code; // if (!weatherData) {\n  //   return <p>no data found</p>;\n  //   // return <Loader active inline=\"centered\" className=\"mt-4\" />;\n  // }\n  //weather icon func\n  // get_WeatherIcon(weatherIcons, weatherId);\n  // const UrlID = match.params.id;\n\n  return weatherData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: gisclassName ? gisclassName : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: className ? className : `mx-0 weather-det`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"ml-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"ml-0\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    textAlign: \"center\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PublicData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, t(\"Public Weather Data\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }, weatherDesc), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, t(\"temp\"), ` ${temp}`, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"weatherIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n    height: 140,\n    width: 140,\n    currentCondition: changeLogo(main),\n    currentTemperature: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"crop-weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, \"Air Temp: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"air-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, Min_Air_Temp, \" to \", Max_Air_Temp)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, \"Humidity: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"air-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 35\n    }\n  }, Rel_Humidity))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }\n  }, \"Snow Depth: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"air-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, snow_depth))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, \"Land Temp: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"air-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 36\n    }\n  }, Min_Land_Temp, \" to \", Max_Land_Temp))))))))), /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"ml-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 8,\n    className: \"ml-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-2\",\n    style: {\n      fontWeight: \"600\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"RAIN\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, \"\\\"02H\\\" : \", Rain_det ? Rain_det['02h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, \"\\\"05H\\\" : \", Rain_det ? Rain_det['05h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, \"\\\"08H\\\" : \", Rain_det ? Rain_det['08h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, \"\\\"11H\\\" : \", Rain_det ? Rain_det['11h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, \"\\\"14H\\\" : \", Rain_det ? Rain_det['14h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, \"\\\"17H\\\" : \", Rain_det ? Rain_det['17h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, \"\\\"20H\\\" : \", Rain_det ? Rain_det['20h'].toFixed(4) : Rain_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, \"\\\"23H\\\" : \", Rain_det ? Rain_det['23h'].toFixed(4) : Rain_det))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-2\",\n    style: {\n      fontWeight: \"600\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, \"WINDSPEED\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, \"\\\"02H\\\" : \", Wind_det ? Wind_det['02h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, \"\\\"05H\\\" : \", Wind_det ? Rain_det['05h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, \"\\\"08H\\\" : \", Wind_det ? Rain_det['08h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }, \"\\\"11H\\\" : \", Wind_det ? Rain_det['11h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }, \"\\\"14H\\\" : \", Wind_det ? Rain_det['14h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, \"\\\"17H\\\" : \", Wind_det ? Rain_det['17h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, \"\\\"20H\\\" : \", Wind_det ? Rain_det['20h'].toFixed(4) : Wind_det), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, \"\\\"23H\\\" : \", Wind_det ? Wind_det['23h'].toFixed(4) : Wind_det)))))))) :\n  /*#__PURE__*/\n  // \"\"\n  React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  weatherData: state.weather.weatherData_sensor,\n  sensors: state.sensors.sensormeasures\n});\n\nexport default connect(mapStateToProps, {\n  getWeatherData\n})(PublicData);","map":{"version":3,"sources":["/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/PublicData/PublicData.js"],"names":["React","useEffect","useState","connect","getWeatherData","useTranslation","Loader","Grid","Container","WeatherDisplay","MainButton","PublicData","props","t","polygon","userFarms","location","weatherData","latlng","className","gisclassName","DetailWeather","console","log","Min_Air_Temp","Temp_air_min","toFixed","Max_Air_Temp","Temp_air_max","Rel_Humidity","Rel_humidity","Min_Land_Temp","Temp_land_min","Max_Land_Temp","Temp_land_max","Rain_det","Rain","snow_depth","Snow_depth","Wind_det","Windspeed","changeLogo","image","lat","lon","calCelsius","temp","cell","Math","floor","value","weatherDesc","weather_code","main","fontWeight","mapStateToProps","state","weather","weatherData_sensor","sensors","sensormeasures"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getWeatherData } from \"../../actions/weather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Loader , Grid, Container} from \"semantic-ui-react\";\nimport \"../../utils/css/weather-icons.css\";\nimport \"./PublicData.scss\";\nimport WeatherDisplay from \"react-weather-display\";\nimport MainButton from \"../MainButton/MainButton\";\n\n// import { useTranslation } from \"react-i18next\";\n\n// const weatherIcons = {\n//   Thunderstorm: \"wi-thunderstorm\",\n//   Drizzle: \"wi-sleet\",\n//   Rain: \"wi-storm-showers\",\n//   Snow: \"wi-snow\",\n//   Atmosphere: \"wi-fog\",\n//   Clear: \"wi-day-sunny\",\n//   Clouds: \"wi-day-fog\",\n// };\n\nconst  PublicData = (props) =>{\n  // weatherData = null;\n  // TODO get latlng from browser location if not found\n  // transltion i18next\n  const { t } = useTranslation(\"public-data\");\n  let polygon = props.userFarms[0].location;\n  // console.log(polygon)\n  const { weatherData, getWeatherData, latlng, className, gisclassName } = props\n  const DetailWeather = weatherData[0];\n  console.log(DetailWeather)\n  // DetailWeather ? setApi(true) : setApi(false)\n  const Min_Air_Temp = DetailWeather ? DetailWeather.Temp_air_min.toFixed(2) : DetailWeather\n  const Max_Air_Temp = DetailWeather ? DetailWeather.Temp_air_max.toFixed(2) : DetailWeather\n  const Rel_Humidity = DetailWeather ? DetailWeather.Rel_humidity.toFixed(2) : DetailWeather\n  const Min_Land_Temp = DetailWeather ? DetailWeather.Temp_land_min.toFixed(2) : DetailWeather;\n  const Max_Land_Temp = DetailWeather ? DetailWeather.Temp_land_max.toFixed(2) : DetailWeather\n  const Rain_det = DetailWeather ? DetailWeather.Rain : DetailWeather\n  const snow_depth = DetailWeather ? DetailWeather.Snow_depth : DetailWeather\n  const Wind_det = DetailWeather ? DetailWeather.Windspeed : DetailWeather\n  // console.log(Min_Air_Temp, Max_Air_Temp, Rain_det, Rel_Humidity)\n  // console.log(DetailWeather)\n  // weather Icon function\n  // const [iconState, setIconState] = useState({ icon: \"wi-day-sunny\" });\n  // console.log(\"routeID\", match.params.id);\n  // console.log(\"top\", weatherData);\n\n  // get the right weather Icon depnds on the randeId\n  // const get_WeatherIcon = (icons, rangeId) => {\n  //   switch (true) {\n  //     case rangeId >= 200 && rangeId < 232:\n  //       setIconState({ icon: icons.Thunderstorm });\n  //       break;\n  //     case rangeId >= 300 && rangeId <= 321:\n  //       setIconState({ icon: icons.Drizzle });\n  //       break;\n  //     case rangeId >= 500 && rangeId <= 521:\n  //       setIconState({ icon: icons.Rain });\n  //       break;\n  //     case rangeId >= 600 && rangeId <= 622:\n  //       setIconState({ icon: icons.Snow });\n  //       break;\n  //     case rangeId >= 701 && rangeId <= 781:\n  //       setIconState({ icon: icons.Atmosphere });\n  //       break;\n  //     case rangeId === 800:\n  //       setIconState({ icon: icons.Clear });\n  //       break;\n  //     case rangeId >= 801 && rangeId <= 804:\n  //       setIconState({ icon: icons.Clouds });\n  //       break;\n  //     default:\n  //       setIconState({ icon: icons.Clouds });\n  //   }\n  // };\n\n  const changeLogo = (image) => {\n    switch(image){\n      case \"cloudy\":\n        return \"cloudy\";\n        break;\n      case \"partly_cloudy\":\n        return \"cloudy\";\n        break;\n      case \"mostly_cloudy\":\n        return \"cloudy\";\n        break;\n      case \"mostly_clear\":\n        return \"sunny\";\n        break;\n      case \"clear\":\n        return \"sunny\";\n        break;\n      case \"fog\":\n        return \"cloudy\";\n        break;\n      case \"fog_light\":\n        return \"sunny\";\n        break;\n      case \"drizzle\":\n        return \"cloudy\";\n        break;\n      case \"rain_light\":\n        return \"rainy\";\n        break;\n      case \"rain\":\n        return \"rainy\";\n        break;\n      case \"rain_heavy\":\n        return \"rainy\";\n        break;\n      case \"tstorm\":\n        return \"rainy\";\n        break;\n      case \"flurries\":\n        return \"rainy\";\n        break;\n      case \"snow_light\":\n        return \"snowy\";\n        break;\n      case \"snow\":\n        return \"snowy\";\n        break;\n      case \"snow_heavy\":\n        return \"snowy\";\n        break;\n      case \"ice_pallets_light\":\n        return \"rainy\";\n        break;\n      case \"ice_pallets_heavy\":\n        return \"rainy\";\n        break;\n      case \"ice_pallets\":\n        return \"rainy\";\n        break;\n      case \"freezing_drizzle\":\n        return \"snowy\";\n        break;\n      case \"freezing_rain_light\":\n        return \"rainy\";\n        break;\n      case \"freezing_rain\":\n        return \"rainy\";\n        break;\n      case \"freezing_rain_heavy\":\n        return \"rainy\";\n        break;\n      default:\n        return \"cloudy\";\n    }\n  }\n\n  useEffect(()=> {\n    // getWeatherData(latlng.lat, latlng.lon);\n    // get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n    \n    !DetailWeather && getWeatherData(latlng.lat, latlng.lon, polygon)\n\n  \n  }, []);\n  \n  // convert to celsius func\n  const calCelsius = (temp) => {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  };\n\n  // const { icon } = iconState;\n  // if (!weatherData) {\n  //   console.log('yes')\n  // }\n  \n  \n  // const precipIntensity = weatherData.precipitation ? weatherData.precipitation.value : weatherData.precipitation;\n  // const humidity = weatherData.humidity ? weatherData.precipitation.value : weatherData.humidity;\n  // const visibility = weatherData.visibility ? weatherData.visibility.value : weatherData.visibility;\n  const temp = weatherData.temp ? weatherData.temp.value : weatherData.temp;\n  // const wind_direction = weatherData.wind_direction ? weatherData.wind_direction.value : weatherData.wind_direction;\n  // const wind_speed = weatherData.wind_speed ? weatherData.wind_speed.value : weatherData.wind_speed;\n  const weatherDesc = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n  const main = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n\n\n  // if (!weatherData) {\n  //   return <p>no data found</p>;\n  //   // return <Loader active inline=\"centered\" className=\"mt-4\" />;\n  // }\n\n\n  \n  \n  //weather icon func\n  // get_WeatherIcon(weatherIcons, weatherId);\n  // const UrlID = match.params.id;\n\n  return weatherData ? (\n    <div className = {gisclassName ? gisclassName : \"\"}>\n      <Grid className = {className ? className : `mx-0 weather-det`}>\n        <Grid.Row className=\"ml-0\">\n          <Grid.Column className=\"ml-0\" textAlign = \"center\">\n            <Container textAlign=\"center\" className=\"\">\n              <div className=\"PublicData\">\n                <h5>{t(\"Public Weather Data\")}</h5>  \n                <div className=\"weather\">\n                  <div className=\"weather-details\">\n                    <div className = \"weather-desc\">\n                      <h6>\n                        {weatherDesc}\n                      </h6>\n                      <h6>\n                        {t(\"temp\")}{` ${temp}`}&deg;C\n                      </h6>\n                    </div>\n                    <div>\n                      <i className=\"weatherIcon\">\n                        <WeatherDisplay \n                          height={140}\n                          width={140}\n                          currentCondition={changeLogo(main)}\n                          currentTemperature={temp}\n                        />\n                      </i>\n                    </div>\n                  </div>\n                  \n                  <div className = \"crop-weather\">\n                    <div className = \"\">\n                      Air Temp: <span className = \"air-temp\">{ Min_Air_Temp} to {Max_Air_Temp}\n                      </span>\n                    </div>\n                    <div>\n                      <div>\n                        Humidity: <span className = \"air-temp\">{Rel_Humidity}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <div>\n                        Snow Depth: <span className = \"air-temp\">{snow_depth}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <div>\n                        Land Temp: <span className = \"air-temp\">{Min_Land_Temp} to {Max_Land_Temp}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row className = \"ml-0\">\n          <Grid.Column width = {8} className = \"ml-0\">\n            <Container> \n              <div>\n                <div>\n                  <h6 className = \"mb-2\" style = {{fontWeight: \"600\"}}>\n                    RAIN\n                  </h6>\n                </div>\n                <div>\n                  <p>\n                    \"02H\" : {Rain_det ? Rain_det['02h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"05H\" : {Rain_det ? Rain_det['05h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"08H\" : {Rain_det ? Rain_det['08h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"11H\" : {Rain_det ? Rain_det['11h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"14H\" : {Rain_det ? Rain_det['14h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"17H\" : {Rain_det ? Rain_det['17h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"20H\" : {Rain_det ? Rain_det['20h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"23H\" : {Rain_det ? Rain_det['23h'].toFixed(4) : Rain_det}\n                  </p>  \n                </div>\n              </div>\n            </Container>\n          </Grid.Column>\n          <Grid.Column width = {8}> \n            <Container>\n              <div>\n                <div>\n                  <h5 className = \"mb-2\" style = {{fontWeight: \"600\"}}>\n                    WINDSPEED\n                  </h5>\n                </div>\n                <div>\n                  <p>\n                    \"02H\" : {Wind_det ? Wind_det['02h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"05H\" : {Wind_det ? Rain_det['05h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"08H\" : {Wind_det ? Rain_det['08h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"11H\" : {Wind_det ? Rain_det['11h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"14H\" : {Wind_det ? Rain_det['14h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"17H\" : {Wind_det ? Rain_det['17h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"20H\" : {Wind_det ? Rain_det['20h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"23H\" : {Wind_det ? Wind_det['23h'].toFixed(4) : Wind_det}\n                  </p>  \n                </div>\n              </div>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  ) : (\n    // \"\"\n    <Loader active inline=\"centered\" className=\"mt-3\" />\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  \n  weatherData: state.weather.weatherData_sensor,\n  sensors: state.sensors.sensormeasures,\n});\n\nexport default connect(mapStateToProps, { getWeatherData })(PublicData);\n"]},"metadata":{},"sourceType":"module"}