{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/SettingsList/SettingsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./SettingsListStyles.scss\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport { calculateArea } from \"../../utils/utilsFunctions\";\nimport MapPolygon from \"../MapPolygon/MapPolygon\";\nimport fieldCorrectPic from \"../../images/xd/fieldCorrectPic.svg\";\n\nconst SettingsList = props => {\n  const {\n    userId,\n    token,\n    userFarms,\n    getIdealRange,\n    lookup,\n    soilHealth\n  } = props;\n  const [fieldId, setFieldId] = useState(\"\");\n  let fieldOptions = [];\n  const userFields = userFarms.length > 0 ? userFarms.map(farm => {\n    let polygon = farm.location;\n    let center = farm.address.location;\n    let soiltypes = lookup.soiltypes.filter(soiltype => soiltype._id === farm.soilTypeId);\n    let watersources = lookup.watersources.filter(watersource => watersource._id === farm.waterSourceId);\n    let terraintypes = lookup.terraintypes.filter(terrain => terrain._id === farm.terrainTypeId);\n    console.log(soiltypes); // console.log(watersource)\n\n    return /*#__PURE__*/React.createElement(Segment, {\n      inverted: true,\n      className: \"user-fields\",\n      key: farm._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 2,\n      className: \"mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 3,\n      className: \"fieldImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: fieldCorrectPic,\n      className: \"Img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fieldHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }, farm.farmName)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }, \"EDIT\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fieldUpper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, \"Location: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 60\n      }\n    }, farm.address.location[0].toFixed(2), \" Lat \", farm.address.location[1].toFixed(2), \" Lng\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, soilHealth ? '' : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 59\n      }\n    }, \"Size: \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, \"DELETE\"))), soilHealth ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }, \"Report Date: 11.11.2021\"))) : '')), soilHealth ? /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 2,\n      className: \"fieldBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"soilHealth-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lab-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"fielDetails-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }\n    }, \"Name of Laboratory: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 78\n      }\n    }, \"Barath Kishan Lab\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"soil-type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"fielDetails-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, \"Soil Sample Number: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }, \"Black soil\"))))) : /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 4,\n      className: \"fieldBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"fielDetails-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, \"Crop: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 60\n      }\n    }, \"Uncultivated\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"fielDetails-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, \"Water Source: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 68\n      }\n    }, watersources[0] ? watersources[0].name : watersources)), /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"fielDetails-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, \"Soil Type: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 65\n      }\n    }, soiltypes[0] ? soiltypes[0].name : soiltypes)), /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"fielDetails-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, \"Terrain Type: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 68\n      }\n    }, terraintypes[0] ? terraintypes[0].name : terraintypes))))));\n  }) : null;\n  return userFields;\n};\n\nexport default SettingsList; // const fillData = (newData) =>\n//     {\n//         newData.forEach((element) =>\n//         {\n//             fieldOptions.push({\n//                 text: element.farmName,\n//                 id: element._id,\n//                 value: element._id\n//             });\n//         });\n//     }","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/SettingsList/SettingsList.js"],"names":["React","useState","useEffect","Segment","Grid","calculateArea","MapPolygon","SettingsList","props","userId","token","userFarms","getIdealRange","lookup","soilHealth","fieldId","setFieldId","fieldOptions","userFields","length","map","farm","polygon","location","center","address","soiltypes","filter","soiltype","_id","soilTypeId","watersources","watersource","waterSourceId","terraintypes","terrain","terrainTypeId","console","log","fieldCorrectPic","farmName","toFixed","name"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\"\nimport \"./SettingsListStyles.scss\" \nimport {Segment, Grid} from \"semantic-ui-react\"\nimport {calculateArea} from \"../../utils/utilsFunctions\"\nimport MapPolygon from \"../MapPolygon/MapPolygon\"\nimport fieldCorrectPic from \"../../images/xd/fieldCorrectPic.svg\"\n\nconst SettingsList = (props) =>\n{\n    const {userId, token, userFarms, getIdealRange, lookup, soilHealth} = props;\n    const [fieldId, setFieldId] = useState(\"\");\n    let fieldOptions = [];\n    \n    const userFields = userFarms.length > 0 ? userFarms.map(farm => {\n        let polygon =  farm.location\n        let center =  farm.address.location\n        let soiltypes = lookup.soiltypes.filter((soiltype) => soiltype._id === farm.soilTypeId)\n        let watersources = lookup.watersources.filter((watersource) => watersource._id === farm.waterSourceId)\n        let terraintypes = lookup.terraintypes.filter((terrain) => terrain._id === farm.terrainTypeId)\n        console.log(soiltypes)\n        // console.log(watersource)\n\n        return(\n            <Segment inverted className=\"user-fields\" key = {farm._id}>\n                <Grid>\n                    <Grid.Row columns = {2} className = \"mx-0\">\n                        {/* <MapPolygon editable = {false} polygon = {polygon} center = {center}/> */}\n                        <Grid.Column width = {3} className = \"fieldImg\"><img src = {fieldCorrectPic} className = \"Img\"/></Grid.Column>\n                        <Grid.Column width = {13}>\n                            <div className = \"fieldHeading\">\n                                <div>\n                                    <h5>\n                                        {farm.farmName}\n                                    </h5>\n                                </div>\n                                <div>\n                                    <h5>\n                                        EDIT\n                                    </h5>\n                                </div>\n                            </div>\n                            <div className = \"fieldUpper\">\n                                <div>\n                                    <span>Location: </span><span>{farm.address.location[0].toFixed(2)} Lat {farm.address.location[1].toFixed(2)} Lng</span>\n                                </div>\n                                <div>\n                                    {\n                                        soilHealth ? '' : <span>Size: </span>\n                                    }\n                                </div>\n                                <div>\n                                    <span>\n                                        DELETE\n                                    </span>\n                                </div>\n                            </div>\n                            {\n                                soilHealth ? \n                                (\n                                    <div>\n                                        <div className = \"report-date\">\n                                            <span>Report Date: 11.11.2021</span>\n                                        </div>\n                                    </div>\n                                ): ('')\n                            }\n                            \n                            \n                            \n                            \n                            {/* <h5>\n                                Location: <span>{`${farm.address.location[0].toFixed(2)}`} Lat {`${farm.address.location[1].toFixed(2)}`} Long</span>\n                            </h5>                             */}\n                        </Grid.Column>\n                    </Grid.Row>\n                    {\n                        soilHealth ? \n                        (\n                            <Grid.Row columns = {2} className = \"fieldBottom\">\n                                <div className = \"soilHealth-card\">\n                                    <div className = \"lab-name\">\n                                        <Grid.Column className = \"fielDetails-bottom\">\n                                            <span>Name of Laboratory: </span><span>Barath Kishan Lab</span>\n                                        </Grid.Column>\n                                    </div>\n                                    <div className = \"soil-type\">\n                                        <Grid.Column className = \"fielDetails-bottom\">\n                                            <span>Soil Sample Number: </span>\n                                            <span>Black soil</span>\n                                        </Grid.Column>\n                                    </div>\n                                    \n                                </div>\n                            </Grid.Row>\n                        )\n                        :\n                        (\n                            <Grid.Row columns = {4} className = \"fieldBottom\">\n                                <>\n                                    <Grid.Column className = \"fielDetails-bottom\">\n                                        <span>Crop: </span><span>Uncultivated</span>\n                                    </Grid.Column>\n                                    <Grid.Column className = \"fielDetails-bottom\">\n                                        <span>Water Source: </span><span>{watersources[0] ? watersources[0].name : watersources}</span>\n                                        {/* {watersources[0].name} */}\n                                    </Grid.Column>\n                                    <Grid.Column className = \"fielDetails-bottom\">\n                                        <span>Soil Type: </span><span>{soiltypes[0] ? soiltypes[0].name : soiltypes}</span>\n                                    </Grid.Column>\n                                    <Grid.Column className = \"fielDetails-bottom\">\n                                        <span>Terrain Type: </span><span>{terraintypes[0] ? terraintypes[0].name : terraintypes}</span>\n                                    </Grid.Column>\n                                </>\n                            </Grid.Row>\n                        )\n                    }\n                    \n                </Grid>\n            </Segment>\n        )\n    })\n    :null\n    return(\n        userFields\n    )\n\n}\n    \n\n\n\nexport default SettingsList;\n\n\n\n// const fillData = (newData) =>\n//     {\n//         newData.forEach((element) =>\n//         {\n//             fieldOptions.push({\n//                 text: element.farmName,\n//                 id: element._id,\n//                 value: element._id\n//             });\n//         });\n//     }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}