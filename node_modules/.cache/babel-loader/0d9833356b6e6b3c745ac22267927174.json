{"ast":null,"code":"import { connect } from \"react-redux\";\nimport GisAnalysis from \"../components/Page/GisAnalysis\"; // import { getUserFarms, getHeatMapData } from \"../actions/farms\";\n\nimport { getHeatMapData, getLinkForImage } from \"../actions/heatmap\";\nimport { getWeatherData } from \"../actions/weather\";\n\nconst mapStateToProps = state => {\n  return {\n    title: \"gisAnalysis\",\n    // key of translation, not the translated text\n    userId: state.user.userId,\n    userFarms: state.farms.userFarms,\n    heatMap: state.heatmap.heatMap,\n    sensors: state.sensors.sensormeasures\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getHeatMapData,\n  getWeatherData,\n  getLinkForImage\n})(GisAnalysis);","map":{"version":3,"sources":["/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/containers/GisAnalysis.js"],"names":["connect","GisAnalysis","getHeatMapData","getLinkForImage","getWeatherData","mapStateToProps","state","title","userId","user","userFarms","farms","heatMap","heatmap","sensors","sensormeasures"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,oBAAhD;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAE,aADF;AACiB;AACtBC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD,MAFd;AAGLE,IAAAA,SAAS,EAAEJ,KAAK,CAACK,KAAN,CAAYD,SAHlB;AAILE,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAcD,OAJlB;AAKLE,IAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,CAAcC;AALlB,GAAP;AAOD,CARD;;AAUA,eAAef,OAAO,CAACK,eAAD,EAAkB;AAACH,EAAAA,cAAD;AAAgBE,EAAAA,cAAhB;AAAgCD,EAAAA;AAAhC,CAAlB,CAAP,CACbF,WADa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport GisAnalysis from \"../components/Page/GisAnalysis\";\n// import { getUserFarms, getHeatMapData } from \"../actions/farms\";\nimport { getHeatMapData, getLinkForImage } from \"../actions/heatmap\";\nimport { getWeatherData } from \"../actions/weather\";\n\nconst mapStateToProps = (state) => {\n  return {\n    title: \"gisAnalysis\", // key of translation, not the translated text\n    userId: state.user.userId,\n    userFarms: state.farms.userFarms,\n    heatMap: state.heatmap.heatMap,\n    sensors: state.sensors.sensormeasures,\n  };\n};\n\nexport default connect(mapStateToProps, {getHeatMapData,getWeatherData, getLinkForImage})(\n  GisAnalysis\n);\n"]},"metadata":{},"sourceType":"module"}