{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Sensors from \"../components/Page/Sensors\";\nimport { getSensorsData } from \"../actions/sensors\";\nimport { getIdealRange } from \"../actions/ranges\";\nimport { addActivity } from \"../actions/activities\";\n\nconst mapStateToProps = state => {\n  return {\n    sensors: state.sensors.sensormeasures,\n    title: \"sensors\",\n    devices: state.devices,\n    currentcropcycles: state.cropCycles.userCurrentCropCycles,\n    lookup: state.lookup,\n    userFarms: state.farms.userFarms,\n    ranges: state.ranges.ranges\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSensorsData,\n  getIdealRange,\n  addActivity\n})(Sensors);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/containers/Sensors.js"],"names":["connect","Sensors","getSensorsData","getIdealRange","addActivity","mapStateToProps","state","sensors","sensormeasures","title","devices","currentcropcycles","cropCycles","userCurrentCropCycles","lookup","userFarms","farms","ranges"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcC,cADlB;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,OAAO,EAAEJ,KAAK,CAACI,OAHV;AAILC,IAAAA,iBAAiB,EAAEL,KAAK,CAACM,UAAN,CAAiBC,qBAJ/B;AAKLC,IAAAA,MAAM,EAAER,KAAK,CAACQ,MALT;AAMLC,IAAAA,SAAS,EAAET,KAAK,CAACU,KAAN,CAAYD,SANlB;AAOLE,IAAAA,MAAM,EAAEX,KAAK,CAACW,MAAN,CAAaA;AAPhB,GAAP;AASD,CAVD;;AAYA,eAAejB,OAAO,CAACK,eAAD,EAAkB;AACtCH,EAAAA,cADsC;AAEtCC,EAAAA,aAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZH,OAJY,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Sensors from \"../components/Page/Sensors\";\nimport { getSensorsData } from \"../actions/sensors\";\nimport { getIdealRange } from \"../actions/ranges\";\nimport { addActivity } from \"../actions/activities\";\n\nconst mapStateToProps = (state) => {\n  return {\n    sensors: state.sensors.sensormeasures,\n    title: \"sensors\",\n    devices: state.devices,\n    currentcropcycles: state.cropCycles.userCurrentCropCycles,\n    lookup: state.lookup,\n    userFarms: state.farms.userFarms,\n    ranges: state.ranges.ranges,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSensorsData,\n  getIdealRange,\n  addActivity,\n})(Sensors);\n"]},"metadata":{},"sourceType":"module"}