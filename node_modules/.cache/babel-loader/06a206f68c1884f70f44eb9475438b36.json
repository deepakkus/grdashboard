{"ast":null,"code":"import _toConsumableArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_FARM,ADD_FARM_ERROR,SET_FARMS,GET_FARMS_ERROR}from\"../actions/types\";var initialState={userFarms:[],error:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case ADD_FARM:return _objectSpread(_objectSpread({},state),{},{userFarms:state.userFarms.find(function(f){return f._id===payload._id;})?state.userFarms.map(function(f){return f._id===payload._id?payload:f;}):[].concat(_toConsumableArray(state.userFarms),[payload]),loading:false});case ADD_FARM_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});case SET_FARMS:return _objectSpread(_objectSpread({},state),{},{userFarms:payload});case GET_FARMS_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});default:return state;}}","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/reducers/farms.js"],"names":["ADD_FARM","ADD_FARM_ERROR","SET_FARMS","GET_FARMS_ERROR","initialState","userFarms","error","state","action","type","payload","find","f","_id","map","loading"],"mappings":"6VAAA,OAASA,QAAT,CAAmBC,cAAnB,CAAmCC,SAAnC,CAA8CC,eAA9C,KAAqE,kBAArE,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,EADQ,CAEnBC,KAAK,CAAE,EAFY,CAArB,CAKA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,8CAC7CC,CAAAA,IAD6C,CAC3BD,MAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,MAD2B,CACvCE,OADuC,CAGrD,OAAQD,IAAR,EACE,IAAKT,CAAAA,QAAL,CACE,sCACKO,KADL,MAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBM,IAAhB,CAAqB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,GAAF,GAAUH,OAAO,CAACG,GAAzB,EAArB,EACPN,KAAK,CAACF,SAAN,CAAgBS,GAAhB,CAAoB,SAACF,CAAD,QAAQA,CAAAA,CAAC,CAACC,GAAF,GAAUH,OAAO,CAACG,GAAlB,CAAwBH,OAAxB,CAAkCE,CAA1C,EAApB,CADO,8BAEHL,KAAK,CAACF,SAFH,GAEcK,OAFd,EAFb,CAKEK,OAAO,CAAE,KALX,GAOF,IAAKd,CAAAA,cAAL,CACE,sCACKM,KADL,MAEED,KAAK,CAAEI,OAFT,CAGEK,OAAO,CAAE,KAHX,GAKF,IAAKb,CAAAA,SAAL,CACE,sCACKK,KADL,MAEEF,SAAS,CAAEK,OAFb,GAKF,IAAKP,CAAAA,eAAL,CACE,sCACKI,KADL,MAEED,KAAK,CAAEI,OAFT,CAGEK,OAAO,CAAE,KAHX,GAKF,QACE,MAAOR,CAAAA,KAAP,CA5BJ,CA8BD","sourcesContent":["import { ADD_FARM, ADD_FARM_ERROR, SET_FARMS, GET_FARMS_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  userFarms: [],\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_FARM:\n      return {\n        ...state,\n        userFarms: state.userFarms.find((f) => f._id === payload._id)\n          ? state.userFarms.map((f) => (f._id === payload._id ? payload : f))\n          : [...state.userFarms, payload],\n        loading: false,\n      };\n    case ADD_FARM_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case SET_FARMS:\n      return {\n        ...state,\n        userFarms: payload,\n\n      };\n    case GET_FARMS_ERROR:\n      return{\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}