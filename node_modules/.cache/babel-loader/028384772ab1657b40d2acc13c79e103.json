{"ast":null,"code":"import _objectSpread from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_SENSORS_DATA,GET_SENSORS_DATA_ERROR}from\"../actions/types\";var initialState={// sensormeasures: [],\nsensormeasures:[// {\n//   location: {\n//     longitude: \"_\",\n//     latitude: \"_\",\n//   },\n//   deviceId: \"_\",\n//   level0: {\n//     airTemp: \"_\",\n//     humidity: \"_\",\n//     solarRad: \"_\",\n//   },\n//   level1: {\n//     salinity: \"_\",\n//     soilTemp: \"_\",\n//     \"evapotranspiration(ET)\": \"_\",\n//     potassium: \"_\",\n//     nitrogen: \"_\",\n//     pH: \"_\",\n//     respiration: \"_\",\n//     moisture: \"_\",\n//     pressure: \"_\",\n//     phosphorus: \"_\",\n//   },\n//   device: {\n//     hw_version: \"_\",\n//     software_version: \"_\",\n//     battery: \"_\",\n//     signal: \"_\",\n//     uptime: \"_\",\n//   },\n//   level2: {\n//     salinity: \"_\",\n//     soilTemp: \"_\",\n//     potassium: \"_\",\n//     nitrogen: \"_\",\n//     pH: \"_\",\n//     aeration: \"_\",\n//     moisture: \"_\",\n//     pressure: \"_\",\n//     phosphorus: \"_\",\n//   },\n//   timestamp: \"_\",\n//   level3: {\n//     salinity: \"_\",\n//     soilTemp: \"_\",\n//     potassium: \"_\",\n//     nitrogen: \"_\",\n//     pH: \"_\",\n//     moisture: \"_\",\n//     pressure: \"_\",\n//     phosphorus: \"_\",\n//   },\n// },\n],error:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case GET_SENSORS_DATA:return _objectSpread(_objectSpread({},state),{},{sensormeasures:payload,loading:false});case GET_SENSORS_DATA_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});default:return state;}}","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/reducers/sensors.js"],"names":["GET_SENSORS_DATA","GET_SENSORS_DATA_ERROR","initialState","sensormeasures","error","state","action","type","payload","loading"],"mappings":"0KAAA,OAASA,gBAAT,CAA2BC,sBAA3B,KAAyD,kBAAzD,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnB;AACAC,cAAc,CAAE,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDc,CAFG,CAyDnBC,KAAK,CAAE,EAzDY,CAArB,CA4DA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,8CAC7CC,CAAAA,IAD6C,CAC3BD,MAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,MAD2B,CACvCE,OADuC,CAGrD,OAAQD,IAAR,EACE,IAAKP,CAAAA,gBAAL,CACE,sCACKK,KADL,MAEEF,cAAc,CAAEK,OAFlB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKR,CAAAA,sBAAL,CACE,sCACKI,KADL,MAEED,KAAK,CAAEI,OAFT,CAGEC,OAAO,CAAE,KAHX,GAMF,QACE,MAAOJ,CAAAA,KAAP,CAfJ,CAiBD","sourcesContent":["import { GET_SENSORS_DATA, GET_SENSORS_DATA_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  // sensormeasures: [],\n  sensormeasures: [\n    // {\n    //   location: {\n    //     longitude: \"_\",\n    //     latitude: \"_\",\n    //   },\n    //   deviceId: \"_\",\n    //   level0: {\n    //     airTemp: \"_\",\n    //     humidity: \"_\",\n    //     solarRad: \"_\",\n    //   },\n    //   level1: {\n    //     salinity: \"_\",\n    //     soilTemp: \"_\",\n    //     \"evapotranspiration(ET)\": \"_\",\n    //     potassium: \"_\",\n    //     nitrogen: \"_\",\n    //     pH: \"_\",\n    //     respiration: \"_\",\n    //     moisture: \"_\",\n    //     pressure: \"_\",\n    //     phosphorus: \"_\",\n    //   },\n    //   device: {\n    //     hw_version: \"_\",\n    //     software_version: \"_\",\n    //     battery: \"_\",\n    //     signal: \"_\",\n    //     uptime: \"_\",\n    //   },\n    //   level2: {\n    //     salinity: \"_\",\n    //     soilTemp: \"_\",\n    //     potassium: \"_\",\n    //     nitrogen: \"_\",\n    //     pH: \"_\",\n    //     aeration: \"_\",\n    //     moisture: \"_\",\n    //     pressure: \"_\",\n    //     phosphorus: \"_\",\n    //   },\n    //   timestamp: \"_\",\n    //   level3: {\n    //     salinity: \"_\",\n    //     soilTemp: \"_\",\n    //     potassium: \"_\",\n    //     nitrogen: \"_\",\n    //     pH: \"_\",\n    //     moisture: \"_\",\n    //     pressure: \"_\",\n    //     phosphorus: \"_\",\n    //   },\n    // },\n  ],\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SENSORS_DATA:\n      return {\n        ...state,\n        sensormeasures: payload,\n        loading: false,\n      };\n    case GET_SENSORS_DATA_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}