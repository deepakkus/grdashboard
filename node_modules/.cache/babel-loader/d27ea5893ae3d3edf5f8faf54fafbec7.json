{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/SearchBar/SearchBar.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Dropdown, Icon, Grid, Search, Segment, Input, Responsive } from \"semantic-ui-react\";\nimport TabletProfileView from \"../tablet-view/tablet-view\";\nimport \"./SearchBar.scss\";\nimport { connect } from \"react-redux\";\nimport { getUserDevicesOptions } from \"../../actions/devices\";\nexport class SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sensors: [{\n        name: \"sensor1\",\n        id: 1\n      }, {\n        name: \"sensor2\",\n        id: 2\n      }],\n      notifications: [{\n        notify: \"notify1\"\n      }, {\n        notify: \"notify2\"\n      }]\n    };\n  }\n\n  getTitle(title) {\n    const children = []; // console.log(\"deviceTypes\", this.props.devicetypes);\n\n    if (this.props.devicetypes) {\n      this.props.devicetypes.map(devicetype => {\n        // TODO pass devicetypes lookup names here\n        children.push({\n          key: devicetype._id,\n          text: devicetype.name,\n          value: devicetype._id,\n          content: /*#__PURE__*/React.createElement(Link, {\n            className: \"link\" // to={\"/sensors/\" + devicetype._id}\n            ,\n            onClick: () => this.props.getUserDevicesOptions(this.props.userDevices, devicetype._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }\n          }, devicetype.name)\n        });\n      });\n    }\n\n    if (this.props.devicetypes && this.props.devicetypes.length && this.props.userDevices && this.props.userDevices.length && this.props.devices && this.props.devices.UserDevicesOptions && this.props.devices.UserDevicesOptions.length === 0 && title === \"/sensors/:id\") {\n      const deviceTypeId = this.props.devicetypes[0]._id;\n      this.props.getUserDevicesOptions(this.props.userDevices, deviceTypeId);\n    }\n\n    const defaultOption = {\n      key: \"devices\",\n      text: \"devices\",\n      value: \"devices\",\n      content: \"devices\"\n    }; // console.log(title);\n\n    console.log(\"children\", children);\n\n    switch (title) {\n      // case \"/\": this.props.history.push(\"dashboard\");break;\n      case \"/dashboard\":\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 16\n          }\n        }, \" Dashboard\");\n        break;\n\n      case \"/cropManagement\":\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }\n        }, \" Crop Management \");\n        break;\n\n      case \"/gisAnalysis\":\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 16\n          }\n        }, \" GisAnalysis \");\n        break;\n\n      case \"/settings\":\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 16\n          }\n        }, \" Settings \");\n        break;\n\n      case \"/\":\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }\n        }, \" Home \");\n        break;\n\n      case \"/sensors\":\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 16\n          }\n        }, \" Sensors \");\n        break;\n\n      case \"/sensors/:id\":\n        return this.props.devicetypes.length ? /*#__PURE__*/React.createElement(Dropdown, {\n          inline: true,\n          header: \"Devices\",\n          options: children,\n          defaultValue: children[0].value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }) : /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }\n        }, \"no devices found\");\n\n      default:\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }\n        }, \"Something Went Wrong\");\n    } // return title=\"/dashboard\" ? (\n    //   <p> Dashboard</p>\n    // ) : (\n    //   <Dropdown text=\"Sensors\" options={children}></Dropdown>\n    // );\n\n  }\n\n  render() {\n    // console.log(this.props);    \n    return (\n      /*#__PURE__*/\n      // <Container fluid className=\"SearchBar\">\n      //   <Container fluid floated=\"left\" textAlign=\"left\">\n      //     <h3>{this.getTitle(this.props.match.path)}</h3>\n      //   </Container>\n      //   <Container fluid floated=\"right\" textAlign=\"right\">\n      //     <Grid>\n      //       <Grid.Column width=\"14\">\n      //         <Search />\n      //       </Grid.Column>\n      //       {/* <Input icon=\"search\" placeholder=\"Search...\" /> */}\n      //       {/*<Input placeholder=\"Search...\" />*/}\n      //       <Grid.Column width=\"2\">\n      //         <Icon name=\"bell\" className=\"ml-4\" />\n      //       </Grid.Column>\n      //     </Grid>\n      //     {/*<Icon name=\"bell\" className=\"ml-4\" />*/}\n      //   </Container>\n      // </Container>\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Responsive, {\n        minWidth: 768,\n        maxWidth: 1335,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        columns: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        className: \"page-header ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pl-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, this.getTitle(this.props.match.path))), /*#__PURE__*/React.createElement(Grid.Column, {\n        container: true,\n        width: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        icon: \"search\",\n        placeholder: \"Search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Icon, {\n        name: \"bell\",\n        className: \"bell-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      })))))), /*#__PURE__*/React.createElement(Responsive, {\n        minWidth: 1336,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        columns: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        className: \"page-header ml-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pl-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, this.getTitle(this.props.match.path))), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 8,\n        className: \"search-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        icon: \"search\",\n        placeholder: \"Search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Icon, {\n        name: \"bell\",\n        className: \"bell-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }\n      })))))))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    title: \"SearchBar\",\n    devicetypes: state.lookup.devicetypes,\n    userDevices: state.devices.userDevices\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserDevicesOptions\n})(SearchBar); // export default SearchBar;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/SearchBar/SearchBar.js"],"names":["React","Component","Link","Container","Dropdown","Icon","Grid","Search","Segment","Input","Responsive","TabletProfileView","connect","getUserDevicesOptions","SearchBar","state","sensors","name","id","notifications","notify","getTitle","title","children","props","devicetypes","map","devicetype","push","key","_id","text","value","content","userDevices","length","devices","UserDevicesOptions","deviceTypeId","defaultOption","console","log","render","match","path","mapStateToProps","lookup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Dropdown, Icon, Grid, Search, Segment, Input, Responsive } from \"semantic-ui-react\";\nimport TabletProfileView from \"../tablet-view/tablet-view\"\nimport \"./SearchBar.scss\";\nimport { connect } from \"react-redux\";\nimport { getUserDevicesOptions } from \"../../actions/devices\";\n\nexport class SearchBar extends Component {\n  state = {\n    sensors: [\n      { name: \"sensor1\", id: 1 },\n      { name: \"sensor2\", id: 2 },\n    ],\n    notifications: [{ notify: \"notify1\" }, { notify: \"notify2\" }],\n  };\n\n  getTitle(title) {\n    const children = [];\n\n    // console.log(\"deviceTypes\", this.props.devicetypes);\n    if (this.props.devicetypes) {\n      this.props.devicetypes.map((devicetype) => {\n        // TODO pass devicetypes lookup names here\n        children.push({\n          key: devicetype._id,\n          text: devicetype.name,\n          value: devicetype._id,\n          content: (\n            <Link\n              className=\"link\"\n              // to={\"/sensors/\" + devicetype._id}\n              onClick={() =>\n                this.props.getUserDevicesOptions(\n                  this.props.userDevices,\n                  devicetype._id\n                )\n              }\n            >\n              {devicetype.name}\n            </Link>\n          ),\n        });\n      });\n    }\n    if (this.props.devicetypes && this.props.devicetypes.length && this.props.userDevices && this.props.userDevices.length &&\n      this.props.devices && this.props.devices.UserDevicesOptions && this.props.devices.UserDevicesOptions.length === 0\n      && title === \"/sensors/:id\") {\n      const deviceTypeId = this.props.devicetypes[0]._id;\n      this.props.getUserDevicesOptions(\n        this.props.userDevices,\n        deviceTypeId\n      );\n    }\n    const defaultOption = {\n      key: \"devices\",\n      text: \"devices\",\n      value: \"devices\",\n      content: \"devices\",\n    };\n    // console.log(title);\n    console.log(\"children\", children);\n    switch (title) {\n      // case \"/\": this.props.history.push(\"dashboard\");break;\n      case \"/dashboard\":\n        return <p> Dashboard</p>;\n        break;\n      case \"/cropManagement\":\n        return <p> Crop Management </p>;\n        break;\n      case \"/gisAnalysis\":\n        return <p> GisAnalysis </p>;\n        break;\n      case \"/settings\":\n        return <p> Settings </p>;\n        break;\n      case \"/\":\n        return <p> Home </p>;\n        break;\n      case \"/sensors\":\n        return <p> Sensors </p>;\n        break;\n      case \"/sensors/:id\":\n        return this.props.devicetypes.length ? (\n          <Dropdown\n            inline\n            header=\"Devices\"\n            options={children}\n            defaultValue={children[0].value}\n          />\n        ) : (\n          <p>no devices found</p>\n        );\n      default:\n        return <p>Something Went Wrong</p>;\n    }\n    // return title=\"/dashboard\" ? (\n    //   <p> Dashboard</p>\n    // ) : (\n    //   <Dropdown text=\"Sensors\" options={children}></Dropdown>\n    // );\n  }\n\n  render() {\n    // console.log(this.props);    \n    return (\n      // <Container fluid className=\"SearchBar\">\n      //   <Container fluid floated=\"left\" textAlign=\"left\">\n      //     <h3>{this.getTitle(this.props.match.path)}</h3>\n      //   </Container>\n      //   <Container fluid floated=\"right\" textAlign=\"right\">\n      //     <Grid>\n      //       <Grid.Column width=\"14\">\n      //         <Search />\n      //       </Grid.Column>\n      //       {/* <Input icon=\"search\" placeholder=\"Search...\" /> */}\n      //       {/*<Input placeholder=\"Search...\" />*/}\n      //       <Grid.Column width=\"2\">\n      //         <Icon name=\"bell\" className=\"ml-4\" />\n      //       </Grid.Column>\n      //     </Grid>\n      //     {/*<Icon name=\"bell\" className=\"ml-4\" />*/}\n      //   </Container>\n      // </Container>\n\n\n      <div>\n        <Responsive minWidth={768} maxWidth={1335}>\n          <Grid container columns={2}>\n            <Grid.Row  className=\"page-header ml-4\">\n              <Grid.Column width={4}>\n                <h3 className=\"pl-3\">{this.getTitle(this.props.match.path)}</h3>\n              </Grid.Column>\n              <Grid.Column container width={8}>\n                <div className=\"searchbar\">\n                  <Input icon=\"search\" placeholder=\"Search\"/>\n                  <Icon  name=\"bell\" className=\"bell-icon\"/>\n                  {/* <TabletProfileView></TabletProfileView> */}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Responsive>\n\n\n        <Responsive minWidth={1336}>\n          <Grid container columns={2}>\n            <Grid.Row  className=\"page-header ml-3\">\n              <Grid.Column width={8}>\n                <h3 className=\"pl-3\">{this.getTitle(this.props.match.path)}</h3>\n              </Grid.Column>\n              <Grid.Column  width={8} className=\"search-container\">\n                <div className=\"searchbar\">\n                  <Input icon=\"search\" placeholder=\"Search\"/>\n                  <Icon  name=\"bell\" className=\"bell-icon\"/>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Responsive>\n      </div>\n\n      \n\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    title: \"SearchBar\",\n    devicetypes: state.lookup.devicetypes,\n    userDevices: state.devices.userDevices,\n  };\n};\nexport default connect(mapStateToProps, { getUserDevicesOptions })(SearchBar);\n\n// export default SearchBar;\n"]},"metadata":{},"sourceType":"module"}