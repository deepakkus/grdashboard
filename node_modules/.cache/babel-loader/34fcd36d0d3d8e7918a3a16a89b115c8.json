{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Suspense,useState}from\"react\";import{Grid,Sidebar,Segment,Container,Button,Icon}from\"semantic-ui-react\";import Navbar from\"../Navbar/navbar\";import SearchBar from\"../SearchBar/SearchBar\";import Profile from\"../Profile/Profile\";import PublicData from\"../PublicData/PublicData\";import SettingsMidGrids from\"../SettingsMidGrids/settingsmidgrids\";import MainButton from\"../MainButton/MainButton\";var TabletViewSettings=function TabletViewSettings(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hidden=_useState2[0],setHidden=_useState2[1];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{columns:1,className:\"tablet-view-grid\"},!hidden?/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",style:{zIndex:1},onClick:function onClick(){setHidden(true);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})):/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",style:{zIndex:0},onClick:function onClick(){setHidden(true);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})),/*#__PURE__*/React.createElement(Grid.Row,{className:\"test-row\"},/*#__PURE__*/React.createElement(Grid.Column,{width:16,className:\"px-0 tablet-view-container\"},/*#__PURE__*/React.createElement(Sidebar.Pushable,{as:Segment},/*#__PURE__*/React.createElement(Sidebar,{as:Grid,animation:\"overlay\",icon:\"labeled\",inverted:true// onHide={() => setVisible(false)}\n,vertical:true,visible:hidden,width:\"very wide\",direction:\"right\"},/*#__PURE__*/React.createElement(Grid.Column,{className:\"settings-rightcontainer\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Profile,{className:\"Profile\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"settings-weather-tablet\"},/*#__PURE__*/React.createElement(PublicData,Object.assign({},props,{latlng:props.latlng}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MainButton,Object.assign({},props,{className:\"MainButton\"}),\"ADD ACTIVITY\"))))),/*#__PURE__*/React.createElement(Sidebar.Pusher,{dimmed:hidden,onClick:function onClick(){return setHidden(false);}},/*#__PURE__*/React.createElement(Grid,{columns:2,className:\"pusher-grid\"},/*#__PURE__*/React.createElement(Grid.Row,{className:\"ml-1\"},/*#__PURE__*/React.createElement(Grid.Column,{width:1},/*#__PURE__*/React.createElement(Navbar,{active:\"settings\",defaultsensor:props.sensors&&props.sensors[0]?props.sensors[0].deviceId:undefined})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"loading\"},/*#__PURE__*/React.createElement(Grid.Column,{width:15},/*#__PURE__*/React.createElement(\"div\",{className:\"midcontainer\"},/*#__PURE__*/React.createElement(SearchBar,props),/*#__PURE__*/React.createElement(SettingsMidGrids,props))))))))))));};export default TabletViewSettings;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-settings.js"],"names":["React","Suspense","useState","Grid","Sidebar","Segment","Container","Button","Icon","Navbar","SearchBar","Profile","PublicData","SettingsMidGrids","MainButton","TabletViewSettings","props","hidden","setHidden","zIndex","latlng","sensors","deviceId","undefined"],"mappings":"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","sourcesContent":["import React, {Suspense, useState} from \"react\";\nimport {Grid, Sidebar, Segment, Container, Button, Icon} from \"semantic-ui-react\"\nimport Navbar from \"../Navbar/navbar\"\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Profile from \"../Profile/Profile\"\nimport PublicData from \"../PublicData/PublicData\";\nimport SettingsMidGrids from \"../SettingsMidGrids/settingsmidgrids\"\nimport MainButton from \"../MainButton/MainButton\";\n\n\n\nconst TabletViewSettings = (props) =>\n{\n    const [hidden , setHidden] = useState(false)\n    return(\n        <div>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                {\n                    !hidden ? \n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 1}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                    :\n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 0}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                }\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"px-0 tablet-view-container\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                            >\n                                <Grid.Column className=\"settings-rightcontainer\">\n                                    <Container>\n                                        <div>\n                                        <Profile className=\"Profile\" />\n                                        </div>\n                                        <div className = \"settings-weather-tablet\">\n                                        <PublicData {...props} latlng = {props.latlng} />\n                                        </div>\n                                        <div>\n                                            <MainButton {...props} className = \"MainButton\">\n                                            \n                                                ADD ACTIVITY\n                                            \n                                            </MainButton>\n                                        </div>\n                                        \n                                    </Container>\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden} onClick={()=>setHidden(false)}>\n                                <Grid columns={2} className=\"pusher-grid\">\n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar\n                                                active=\"settings\"\n                                                defaultsensor={\n                                                props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                                <div className=\"midcontainer\">\n                                                    <SearchBar {...props} />\n                                                    {/* <Segment raised className=\"SenseMidSection\"> */}\n                                                    <SettingsMidGrids {...props}/>\n                                                    {/* </Segment> */}\n                                                </div>\n                                            </Grid.Column>\n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </div>\n    )\n}\n\n\nexport default TabletViewSettings"]},"metadata":{},"sourceType":"module"}