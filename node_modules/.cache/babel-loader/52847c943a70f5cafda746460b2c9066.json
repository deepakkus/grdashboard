{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/Dashboard.js\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive, Button } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport DashMidGrids from \"../DashMidGrids/dashmidgrids\";\nimport Profile from \"../Profile/Profile\";\nimport MainButton from \"../MainButton/MainButton\";\nimport DashSideSection from \"../../sections/DashSideSection/dashsidesection\";\nimport TabletView from \"../tablet-view/tablet-view\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Dashboard = props => {\n  const [flag, setFlag] = useState(true);\n  const {\n    t\n  } = useTranslation(\"common\");\n\n  const changeFlag = () => {\n    setFlag(false);\n    setTimeout(() => {\n      console.log(flag);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n\n    if (props.userDevices && props.userDevices.length) {\n      props.getSensorsData(props.userDevices.map(d => d.deviceId).join());\n    }\n  }, [props.title]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 1366,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    active: \"dashboard\" // defaultsensor={\n    //   props.sensors && props.sensors[0]\n    //     ? props.sensors[0].deviceId\n    //     : undefined\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DashMidGrids, Object.assign({\n    changeFlag: changeFlag\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    className: \"rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DashSideSection, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 768,\n    maxWidth: 1365,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabletView, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/Dashboard.js"],"names":["React","Suspense","useEffect","useState","Container","Grid","Responsive","Button","Navbar","SearchBar","DashMidGrids","Profile","MainButton","DashSideSection","TabletView","useTranslation","Dashboard","props","flag","setFlag","t","changeFlag","setTimeout","console","log","document","title","userDevices","length","getSensorsData","map","d","deviceId","join"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive, Button } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport DashMidGrids from \"../DashMidGrids/dashmidgrids\";\nimport Profile from \"../Profile/Profile\";\nimport MainButton from \"../MainButton/MainButton\";\nimport DashSideSection from \"../../sections/DashSideSection/dashsidesection\";\nimport TabletView from \"../tablet-view/tablet-view\"\nimport { useTranslation } from \"react-i18next\";\n\nconst Dashboard = (props) => {\n  const [flag, setFlag] = useState(true);\n  const { t } = useTranslation(\"common\");\n\n  const changeFlag = () => {\n    setFlag(false);\n    setTimeout(() => {\n      console.log(flag);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n    if (props.userDevices && props.userDevices.length) {\n      props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n    }\n  }, [props.title]);\n  return (\n    <div>\n      <Responsive minWidth={1366}>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column width={1}>\n              {/* <Container className=\"leftcontainer\"> */}\n              <Navbar\n                active=\"dashboard\"\n                // defaultsensor={\n                //   props.sensors && props.sensors[0]\n                //     ? props.sensors[0].deviceId\n                //     : undefined\n                // }\n              />\n              {/* </Container> */}\n            </Grid.Column>\n\n            <Suspense fallback=\"loading\">\n              <Grid.Column width={11}>\n                <div className=\"midcontainer\">\n                  <SearchBar {...props} />\n                  <DashMidGrids changeFlag={changeFlag} {...props} />\n                </div>\n              </Grid.Column>\n              <Grid.Column width={4} className=\"rightcontainer\">\n                {/* <Container> */}\n                  <Profile className=\"Profile\" />\n                  <DashSideSection {...props}/>\n                {/* </Container> */}\n                {/* <MainButton {...props}>\n                  {\n                    t(\"ADD_ACTIVITY\")\n                  }\n                </MainButton> */}\n              </Grid.Column>\n            </Suspense>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n\n\n\n      <Responsive minWidth={768} maxWidth={1365}>\n        <TabletView {...props} />\n      </Responsive>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}