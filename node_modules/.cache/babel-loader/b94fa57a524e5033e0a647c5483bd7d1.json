{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-sensors.js\";\nimport React, { Suspense, useState } from \"react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Grid, Sidebar, Segment, Container, Button, Icon } from \"semantic-ui-react\";\nimport Profile from \"../Profile/Profile\";\nimport MapCard from \"../MapCard/MapCard\";\nimport AddSensorLink from \"../AddSensorLink/AddSensorLink\";\nimport PublicData from \"../PublicData/PublicData\";\nimport SensorTable from \"../../components/SensorTable/sensortable\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./tablet-view-sensors.scss\";\n\nconst TabletViewSensorsPage = props => {\n  const [hidden, setHidden] = useState(false);\n  const {\n    t\n  } = useTranslation(\"common\");\n\n  const selected = id => {\n    let sensors = props.sensors;\n    const sensor = sensors.filter(sensor => {\n      return sensor.deviceId === id;\n    });\n\n    if (sensor[0]) {\n      return sensor[0];\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    className: \"tablet-view-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, !hidden ? /*#__PURE__*/React.createElement(Button, {\n    className: \"tablet-view-button\",\n    style: {\n      zIndex: 1\n    },\n    onClick: () => {\n      setHidden(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"sidebar\",\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    className: \"tablet-view-button\",\n    style: {\n      zIndex: 0\n    },\n    onClick: () => {\n      setHidden(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"sidebar\",\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"test-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    className: \"px-0 tablet-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n    as: Segment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    as: Grid,\n    animation: \"overlay\",\n    icon: \"labeled\",\n    inverted: true // onHide={() => setVisible(false)}\n    ,\n    vertical: true,\n    visible: hidden,\n    width: \"very wide\",\n    direction: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"sensors-rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MapCard, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddSensorLink, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PublicData, Object.assign({}, props, {\n    latlng: props.latlng,\n    className: \"weather-det-sensors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MainButton, Object.assign({\n    className: \"MainButton\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 41\n    }\n  }), t(\"ADD_ACTIVITY\"))))), /*#__PURE__*/React.createElement(Sidebar.Pusher, {\n    dimmed: hidden,\n    onClick: () => setHidden(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    className: \"pusher-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    active: \"sensors\",\n    defaultsensor: props.sensors && props.sensors[0] ? props.sensors[0].deviceId : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"p-0 m-0\",\n    tablet: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(SensorTable, Object.assign({\n    ranges: props.ranges,\n    sensor: selected(props.match.params.id),\n    firstSensor: props.sensors[0] && props.sensors[0],\n    match: props.match\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 61\n    }\n  })))))))))))))));\n};\n\nexport default TabletViewSensorsPage;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-sensors.js"],"names":["React","Suspense","useState","Navbar","SearchBar","Grid","Sidebar","Segment","Container","Button","Icon","Profile","MapCard","AddSensorLink","PublicData","SensorTable","MainButton","useTranslation","TabletViewSensorsPage","props","hidden","setHidden","t","selected","id","sensors","sensor","filter","deviceId","zIndex","latlng","undefined","ranges","match","params"],"mappings":"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","sourcesContent":["import React, {Suspense, useState} from \"react\"\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Grid, Sidebar, Segment, Container, Button, Icon} from \"semantic-ui-react\";\nimport Profile from \"../Profile/Profile\";\nimport MapCard from \"../MapCard/MapCard\";\nimport AddSensorLink from \"../AddSensorLink/AddSensorLink\";\nimport PublicData from \"../PublicData/PublicData\";\nimport SensorTable from \"../../components/SensorTable/sensortable\";\nimport MainButton from \"../MainButton/MainButton\";\n\nimport { useTranslation } from \"react-i18next\";\nimport \"./tablet-view-sensors.scss\"\n\n\nconst TabletViewSensorsPage = (props) =>\n{\n    const [hidden , setHidden] = useState(false)\n    const { t } = useTranslation(\"common\");\n\n    const selected = (id) => {\n        let sensors = props.sensors;\n        const sensor = sensors.filter((sensor) => {\n            return sensor.deviceId === id;\n        });\n        if (sensor[0]) {\n            return sensor[0];\n        } else {\n            return;\n        }\n    };\n\n    return (\n        <>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                {\n                    !hidden ? \n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 1}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                    :\n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 0}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                }\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"px-0 tablet-view-container\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                            >\n                                <Grid.Column className=\"sensors-rightcontainer\">\n                                    {/* <Container> */}\n                                    <div>\n                                        <Profile className=\"Profile\" />\n                                    </div>\n                                    <div>\n                                        <MapCard {...props} />\n                                    </div>\n                                    <div>\n                                        <AddSensorLink {...props} />\n                                    </div>\n                                    <Container>\n                                    <div>\n                                        <PublicData {...props} latlng={props.latlng} className = \"weather-det-sensors\"/>\n                                    </div>\n                                    </Container>\n                                    <div>\n                                        <MainButton className=\"MainButton\" {...props}>\n                                            {t(\"ADD_ACTIVITY\")}\n                                        </MainButton> \n                                    </div>  \n                                    {/* </Container> */}\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden} onClick={()=>setHidden(false)}>\n                                <Grid columns={2} className=\"pusher-grid\">\n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar\n                                                active=\"sensors\"\n                                                defaultsensor={\n                                                props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                                <div className=\"midcontainer\">\n                                                    <SearchBar {...props} />\n                                                    {/* <Segment raised className=\"SenseMidSection\"> */}\n                                                        <Grid columns = {1}>\n                                                        <Grid.Column className=\"p-0 m-0\" tablet = {16}>\n                                                            <SensorTable\n                                                            ranges={props.ranges}\n                                                            sensor={selected(props.match.params.id)}\n                                                            firstSensor={props.sensors[0] && props.sensors[0]}\n                                                            match={props.match}\n                                                            {...props}\n                                                            />\n                                                        </Grid.Column>\n                                                        </Grid>\n                                                    {/* </Segment> */}\n                                                </div>\n                                            </Grid.Column>\n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </>\n    )\n}\n\n\nexport default TabletViewSensorsPage\n\n\n"]},"metadata":{},"sourceType":"module"}