{"ast":null,"code":"import React,{Suspense,useEffect,useState}from\"react\";import{Container,Grid,Responsive}from\"semantic-ui-react\";import Navbar from\"../Navbar/navbar\";import SearchBar from\"../SearchBar/SearchBar\";import Gis_Analysis from\"../GisAnalysis/GisAnalysis\";import Profile from\"../Profile/Profile\";import MainButton from\"../MainButton/MainButton\";import{useTranslation}from\"react-i18next\";import PublicData from\"../PublicData/PublicData\";var GisAnalysis=function GisAnalysis(props){// const [flag,setFlag] = useState(true)\nvar _useTranslation=useTranslation(),t=_useTranslation.t;var getLatLong=function getLatLong(){var lat=props.userFarms?props.userFarms[0].location[0][0]:0;var lon=props.userFarms?props.userFarms[0].location[0][1]:0;// console.log(\"Lattitude is \"+lat+\"--Longitude is \"+lon);\nreturn{lat:lat,lon:lon};};useEffect(function(){document.title=t(props.title);},[props.title]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Responsive,{minWidth:1366},/*#__PURE__*/React.createElement(Grid,{columns:3},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{width:1},/*#__PURE__*/React.createElement(Navbar,{defaultsensor:props.sensors&&props.sensors[0]?props.sensors[0].deviceId:undefined,active:\"gisAnalysis\"})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"loading\"},/*#__PURE__*/React.createElement(Grid.Column,{width:11},/*#__PURE__*/React.createElement(\"div\",{className:\"midcontainer\"},/*#__PURE__*/React.createElement(SearchBar,props),/*#__PURE__*/React.createElement(Gis_Analysis,props))),/*#__PURE__*/React.createElement(Grid.Column,{width:4,className:\"rightcontainer\"},/*#__PURE__*/React.createElement(Profile,{className:\"Profile\"}),/*#__PURE__*/React.createElement(PublicData,Object.assign({},props,{latlng:getLatLong}))))))),/*#__PURE__*/React.createElement(Responsive,{minWidth:768,maxWidth:1365}));};export default GisAnalysis;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/GisAnalysis.js"],"names":["React","Suspense","useEffect","useState","Container","Grid","Responsive","Navbar","SearchBar","Gis_Analysis","Profile","MainButton","useTranslation","PublicData","GisAnalysis","props","t","getLatLong","lat","userFarms","location","lon","document","title","sensors","deviceId","undefined"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,UAA1B,KAA4C,mBAA5C,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B;AAD6B,oBAEfH,cAAc,EAFC,CAErBI,CAFqB,iBAErBA,CAFqB,CAI7B,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,GAAG,CAAGH,KAAK,CAACI,SAAN,CAAkBJ,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,CAA/B,CAAlB,CAAsD,CAAlE,CACA,GAAMC,CAAAA,GAAG,CAAGN,KAAK,CAACI,SAAN,CAAkBJ,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmBC,QAAnB,CAA4B,CAA5B,EAA+B,CAA/B,CAAlB,CAAsD,CAAlE,CACA;AACA,MAAO,CAAEF,GAAG,CAAHA,GAAF,CAAOG,GAAG,CAAHA,GAAP,CAAP,CACD,CALD,CAOAnB,SAAS,CAAC,UAAM,CACdoB,QAAQ,CAACC,KAAT,CAAiBP,CAAC,CAACD,KAAK,CAACQ,KAAP,CAAlB,CACD,CAFQ,CAEN,CAACR,KAAK,CAACQ,KAAP,CAFM,CAAT,CAIA,mBACE,qDACE,oBAAC,UAAD,EAAY,QAAQ,CAAE,IAAtB,eACE,oBAAC,IAAD,EAAM,OAAO,CAAE,CAAf,eACE,oBAAC,IAAD,CAAM,GAAN,mBACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,eAEI,oBAAC,MAAD,EACE,aAAa,CACXR,KAAK,CAACS,OAAN,EAAiBT,KAAK,CAACS,OAAN,CAAc,CAAd,CAAjB,CACIT,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBC,QADrB,CAEIC,SAJR,CAME,MAAM,CAAC,aANT,EAFJ,CADF,cAcE,oBAAC,QAAD,EAAU,QAAQ,CAAC,SAAnB,eACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,SAAD,CAAeX,KAAf,CADF,cAGE,oBAAC,YAAD,CACMA,KADN,CAHF,CADF,CADF,cAYE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,CAAuB,SAAS,CAAC,gBAAjC,eAEI,oBAAC,OAAD,EAAS,SAAS,CAAC,SAAnB,EAFJ,cAGI,oBAAC,UAAD,kBAAgBA,KAAhB,EAAuB,MAAM,CAAEE,UAA/B,GAHJ,CAZF,CAdF,CADF,CADF,CADF,cA0CE,oBAAC,UAAD,EAAY,QAAQ,CAAE,GAAtB,CAA2B,QAAQ,CAAE,IAArC,EA1CF,CADF,CAgDD,CA/DD,CAiEA,cAAeH,CAAAA,WAAf","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Gis_Analysis from \"../GisAnalysis/GisAnalysis\";\nimport Profile from \"../Profile/Profile\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport PublicData from \"../PublicData/PublicData\";\n\nconst GisAnalysis = (props) => {\n  // const [flag,setFlag] = useState(true)\n  const { t } = useTranslation();\n\n  const getLatLong = () => {\n    const lat = props.userFarms ? props.userFarms[0].location[0][0] : 0;\n    const lon = props.userFarms ? props.userFarms[0].location[0][1] : 0;\n    // console.log(\"Lattitude is \"+lat+\"--Longitude is \"+lon);\n    return { lat, lon };\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n  }, [props.title]);\n\n  return (\n    <>\n      <Responsive minWidth={1366}>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column width={1}>\n              {/* <Container className=\"leftcontainer\"> */}\n                <Navbar\n                  defaultsensor={\n                    props.sensors && props.sensors[0]\n                      ? props.sensors[0].deviceId\n                      : undefined\n                  }\n                  active=\"gisAnalysis\"\n                />\n              {/* </Container> */}\n            </Grid.Column>\n          \n            <Suspense fallback=\"loading\">\n              <Grid.Column width={11}>\n                <div className=\"midcontainer\">\n                  <SearchBar {...props} />\n\n                  <Gis_Analysis\n                    {...props}\n                    // getUserFarm = {props.getUserFarm}\n                    // match={props.match}\n                  />\n                </div>\n              </Grid.Column>\n              <Grid.Column width={4} className=\"rightcontainer\">\n                {/* <Container> */}\n                  <Profile className=\"Profile\" />\n                  <PublicData {...props} latlng={getLatLong} />\n                  {/* <MainButton className=\"gis\" {...props}>\n                    {t(\"ADD_ACTIVITY\")}\n                  </MainButton> */}\n                {/* </Container> */}\n              </Grid.Column>\n            </Suspense>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n      <Responsive minWidth={768} maxWidth={1365}>\n\n      </Responsive>\n    </>\n  );\n};\n\nexport default GisAnalysis;\n"]},"metadata":{},"sourceType":"module"}