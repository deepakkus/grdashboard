{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import{Header,Icon,Modal}from\"semantic-ui-react\";import AddEditFarmModal from\"../Page/AddEditFarmModal/AddEditFarmModal\";import{MdEdit}from\"react-icons/md\";export default function AddFieldModal(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalOpen=_useState2[0],setModalOpen=_useState2[1];var name=props.name,color=props.color,icon=props.icon;var linkStyle={color:color?color:\"white\",textDecoration:\"none\"};var iconStyles={height:\"18px\",marginRight:\"10px\"};var handleOpen=function handleOpen(){return setModalOpen(true);};var handleClose=function handleClose(){return setModalOpen(false);};return/*#__PURE__*/React.createElement(Modal,{trigger:/*#__PURE__*/React.createElement(Link,{style:linkStyle,onClick:function onClick(){handleOpen();}},icon&&/*#__PURE__*/React.createElement(MdEdit,{style:iconStyles}),name),open:modalOpen,onClose:handleClose,closeIcon:true},/*#__PURE__*/React.createElement(Header,null,/*#__PURE__*/React.createElement(Header.Content,null,\"Field Info\"),/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){// setModalOpen(false);\nhandleClose();}},/*#__PURE__*/React.createElement(Icon,{name:\"close\"}))),/*#__PURE__*/React.createElement(AddEditFarmModal,Object.assign({},props,{handleClose:handleClose})));}","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/DashMidGrids/AddFieldModal.js"],"names":["React","useState","Link","Header","Icon","Modal","AddEditFarmModal","MdEdit","AddFieldModal","props","modalOpen","setModalOpen","name","color","icon","linkStyle","textDecoration","iconStyles","height","marginRight","handleOpen","handleClose"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,KAAoC,mBAApC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2CAA7B,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,eACTR,QAAQ,CAAC,KAAD,CADC,wCACpCS,SADoC,eACzBC,YADyB,kBAGnCC,CAAAA,IAHmC,CAGbH,KAHa,CAGnCG,IAHmC,CAG7BC,KAH6B,CAGbJ,KAHa,CAG7BI,KAH6B,CAGtBC,IAHsB,CAGbL,KAHa,CAGtBK,IAHsB,CAI3C,GAAMC,CAAAA,SAAS,CAAG,CAChBF,KAAK,CAAEA,KAAK,CAAGA,KAAH,CAAW,OADP,CAEhBG,cAAc,CAAE,MAFA,CAAlB,CAIA,GAAMC,CAAAA,UAAU,CAAG,CAAEC,MAAM,CAAE,MAAV,CAAkBC,WAAW,CAAE,MAA/B,CAAnB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMT,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAAnB,CACA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMV,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAApB,CACA,mBACE,oBAAC,KAAD,EACE,OAAO,cACL,oBAAC,IAAD,EACE,KAAK,CAAEI,SADT,CAEE,OAAO,CAAE,kBAAM,CACbK,UAAU,GACX,CAJH,EAMGN,IAAI,eAAI,oBAAC,MAAD,EAAQ,KAAK,CAAEG,UAAf,EANX,CAOGL,IAPH,CAFJ,CAYE,IAAI,CAAEF,SAZR,CAaE,OAAO,CAAEW,WAbX,CAcE,SAAS,KAdX,eAgBE,oBAAC,MAAD,mBACE,oBAAC,MAAD,CAAQ,OAAR,mBADF,cAEE,oBAAC,IAAD,EACE,OAAO,CAAE,kBAAM,CACb;AACAA,WAAW,GACZ,CAJH,eAME,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EANF,CAFF,CAhBF,cA6BE,oBAAC,gBAAD,kBAAsBZ,KAAtB,EAA6B,WAAW,CAAEY,WAA1C,GA7BF,CADF,CAmCD","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Icon, Modal } from \"semantic-ui-react\";\nimport AddEditFarmModal from \"../Page/AddEditFarmModal/AddEditFarmModal\";\nimport { MdEdit } from \"react-icons/md\";\nexport default function AddFieldModal(props) {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const { name, color, icon } = props;\n  const linkStyle = {\n    color: color ? color : \"white\",\n    textDecoration: \"none\",\n  };\n  const iconStyles = { height: \"18px\", marginRight: \"10px\" };\n  const handleOpen = () => setModalOpen(true);\n  const handleClose = () => setModalOpen(false);\n  return (\n    <Modal\n      trigger={\n        <Link\n          style={linkStyle}\n          onClick={() => {\n            handleOpen();\n          }}\n        >\n          {icon && <MdEdit style={iconStyles} />}\n          {name}\n        </Link>\n      }\n      open={modalOpen}\n      onClose={handleClose}\n      closeIcon\n    >\n      <Header>\n        <Header.Content>Field Info</Header.Content>\n        <Link\n          onClick={() => {\n            // setModalOpen(false);\n            handleClose();\n          }}\n        >\n          <Icon name=\"close\" />\n        </Link>\n      </Header>\n\n      {/* <Modal.Content scrolling> */}\n      <AddEditFarmModal {...props} handleClose={handleClose} />\n\n      {/* </Modal.Content> */}\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}