{"ast":null,"code":"import { ADD_DEVICE, ADD_DEVICE_ERROR, SET_DEVICES, GET_DEVICES_ERROR, GET_DEVICES_DROPDOWN_OPTIONS, GET_DEVICES_DROPDOWN_OPTIONS_ERROR } from \"../actions/types\";\nconst initialState = {\n  userDevices: [],\n  UserDevicesOptions: [// {\n    //   deviceId: \"14fbedaf-1b14-49f3-93ab-f3e405ab3e0d\",\n    //   deviceName: \"firstOne\",\n    //   deviceTypeId: \"5ef45caeea9d8150d06a300f\",\n    //   userId: \"1\",\n    //   __v: 0,\n    //   _id: \"5efb3e506e20a00008848f62\",\n    // },\n  ],\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_DEVICE:\n      return { ...state,\n        userDevices: state.userDevices.find(d => d._id === payload._id) ? state.userDevices.map(d => d._id === payload._id ? payload : d) : [...state.userDevices, payload],\n        loading: false\n      };\n\n    case ADD_DEVICE_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case SET_DEVICES:\n      return { ...state,\n        userDevices: payload,\n        loading: false\n      };\n\n    case GET_DEVICES_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case GET_DEVICES_DROPDOWN_OPTIONS:\n      return { ...state,\n        UserDevicesOptions: payload,\n        loading: false\n      };\n\n    case GET_DEVICES_DROPDOWN_OPTIONS_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/reducers/devices.js"],"names":["ADD_DEVICE","ADD_DEVICE_ERROR","SET_DEVICES","GET_DEVICES_ERROR","GET_DEVICES_DROPDOWN_OPTIONS","GET_DEVICES_DROPDOWN_OPTIONS_ERROR","initialState","userDevices","UserDevicesOptions","error","state","action","type","payload","find","d","_id","map","loading"],"mappings":"AAAA,SACEA,UADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,iBAJF,EAKEC,4BALF,EAMEC,kCANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,kBAAkB,EAAE,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARkB,GAFD;AAYnBC,EAAAA,KAAK,EAAE;AAZY,CAArB;AAeA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKZ,UAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBO,IAAlB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAhD,IACTN,KAAK,CAACH,WAAN,CAAkBU,GAAlB,CAAuBF,CAAD,IAAQA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAlB,GAAwBH,OAAxB,GAAkCE,CAAhE,CADS,GAET,CAAC,GAAGL,KAAK,CAACH,WAAV,EAAuBM,OAAvB,CAJC;AAKLK,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKjB,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKhB,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,WAAW,EAAEM,OAFR;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKf,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKd,4BAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,kBAAkB,EAAEK,OAFf;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKb,kCAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOR,KAAP;AAxCJ;AA0CD","sourcesContent":["import {\n  ADD_DEVICE,\n  ADD_DEVICE_ERROR,\n  SET_DEVICES,\n  GET_DEVICES_ERROR,\n  GET_DEVICES_DROPDOWN_OPTIONS,\n  GET_DEVICES_DROPDOWN_OPTIONS_ERROR,\n} from \"../actions/types\";\n\nconst initialState = {\n  userDevices: [],\n  UserDevicesOptions: [\n    // {\n    //   deviceId: \"14fbedaf-1b14-49f3-93ab-f3e405ab3e0d\",\n    //   deviceName: \"firstOne\",\n    //   deviceTypeId: \"5ef45caeea9d8150d06a300f\",\n    //   userId: \"1\",\n    //   __v: 0,\n    //   _id: \"5efb3e506e20a00008848f62\",\n    // },\n  ],\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_DEVICE:\n      return {\n        ...state,\n        userDevices: state.userDevices.find((d) => d._id === payload._id)\n          ? state.userDevices.map((d) => (d._id === payload._id ? payload : d))\n          : [...state.userDevices, payload],\n        loading: false,\n      };\n    case ADD_DEVICE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case SET_DEVICES:\n      return {\n        ...state,\n        userDevices: payload,\n        loading: false,\n      };\n    case GET_DEVICES_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case GET_DEVICES_DROPDOWN_OPTIONS:\n      return {\n        ...state,\n        UserDevicesOptions: payload,\n        loading: false,\n      };\n    case GET_DEVICES_DROPDOWN_OPTIONS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}