{"ast":null,"code":"import _classCallCheck from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";import{Menu}from\"semantic-ui-react\";import sgLogo from\"../../images/LOGO.svg\";import farmer from\"../../images/farmer.svg\";import DashLogo from\"../../images/icons/icondashboard.js\";import LeafLogo from\"../../images/icons/iconleaf.js\";import SensorsLogo from\"../../images/icons/iconsensors.js\";import GlobalLogo from\"../../images/icons/iconglobal.js\";import SettingsLogo from\"../../images/icons/iconsettings.js\";import\"./navbar.scss\";var Navbar=/*#__PURE__*/function(_Component){_inherits(Navbar,_Component);var _super=_createSuper(Navbar);function Navbar(){var _this;_classCallCheck(this,Navbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeItem:_this.props.active,activecolor:\"green\",color:\"gray\",defaultsensor:_this.props.defaultsensor};_this.handleItemClick=function(e,_ref){var name=_ref.name;_this.setState({activeItem:name});};_this.setIconColor=function(name){return name===_this.state.activeItem?_this.state.activecolor:_this.state.color;};return _this;}_createClass(Navbar,[{key:\"render\",value:function render(){var activeItem=this.state.activeItem;return/*#__PURE__*/React.createElement(\"div\",{className:\"nav center\"},/*#__PURE__*/React.createElement(Menu,{icon:true,pointing:true,secondary:true,vertical:true},/*#__PURE__*/React.createElement(\"div\",{className:\"topLogo\"},/*#__PURE__*/React.createElement(\"img\",{className:\"iclogo\",src:sgLogo,alt:\"logo\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"menuItems\"},/*#__PURE__*/React.createElement(Link,{to:\"/dashboard\"},/*#__PURE__*/React.createElement(Menu.Item,{icon:true,name:\"dashboard\",color:\"green\",active:activeItem===\"dashboard\",onClick:this.handleItemClick},/*#__PURE__*/React.createElement(DashLogo,{id:\"dashboard\",color:this.setIconColor(\"dashboard\")}))),/*#__PURE__*/React.createElement(Link,{to:\"/cropManagement\"},/*#__PURE__*/React.createElement(Menu.Item,{name:\"cropManagement\",color:\"green\",active:activeItem===\"cropManagement\",onClick:this.handleItemClick},/*#__PURE__*/React.createElement(LeafLogo,{color:this.setIconColor(\"cropManagement\")}))),/*#__PURE__*/React.createElement(Link// to=\"/sensors\"\n,{to:\"/sensors/\".concat(this.props.defaultsensor?this.props.defaultsensor:\"\")},/*#__PURE__*/React.createElement(Menu.Item,{name:\"sensors\",color:\"green\",active:activeItem===\"sensors\",onClick:this.handleItemClick},/*#__PURE__*/React.createElement(SensorsLogo,{color:this.setIconColor(\"sensors\")}))),/*#__PURE__*/React.createElement(Link,{to:\"/gisAnalysis\"},/*#__PURE__*/React.createElement(Menu.Item,{name:\"gisAnalysis\",color:\"green\",active:activeItem===\"gisAnalysis\",onClick:this.handleItemClick},/*#__PURE__*/React.createElement(GlobalLogo,{color:this.setIconColor(\"gisAnalysis\")}))),/*#__PURE__*/React.createElement(Link,{to:\"/settings\"},/*#__PURE__*/React.createElement(Menu.Item,{name:\"settings\",color:\"green\",active:activeItem===\"settings\",onClick:this.handleItemClick},/*#__PURE__*/React.createElement(SettingsLogo,{color:this.setIconColor(\"settings\")})))),/*#__PURE__*/React.createElement(\"div\",{className:\"bottomLgo\"},/*#__PURE__*/React.createElement(\"img\",{className:\"icfarmer\",src:farmer,alt:\"farmer\"}))));}}]);return Navbar;}(Component);export default Navbar;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Navbar/navbar.js"],"names":["React","Component","Link","Menu","DashLogo","LeafLogo","SensorsLogo","GlobalLogo","SettingsLogo","Navbar","state","activeItem","props","active","activecolor","color","defaultsensor","handleItemClick","e","name","setState","setIconColor","sgLogo","farmer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\n\nimport sgLogo from \"../../images/LOGO.svg\";\nimport farmer from \"../../images/farmer.svg\";\n\nimport DashLogo from \"../../images/icons/icondashboard.js\";\nimport LeafLogo from \"../../images/icons/iconleaf.js\";\nimport SensorsLogo from \"../../images/icons/iconsensors.js\";\nimport GlobalLogo from \"../../images/icons/iconglobal.js\";\nimport SettingsLogo from \"../../images/icons/iconsettings.js\";\n\nimport \"./navbar.scss\";\n\nclass Navbar extends Component {\n  //color: '#1A960A' green from adobe\n\n  state = {\n    activeItem: this.props.active,\n    activecolor: \"green\",\n    color: \"gray\",\n    defaultsensor: this.props.defaultsensor,\n  };\n\n  /**\n   * On Icon Click modify active item\n   * Wraped by Link Route\n   */\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  };\n\n  /**\n   * Change Icon Color of the active Item\n   */\n  setIconColor = (name) => {\n    return name === this.state.activeItem\n      ? this.state.activecolor\n      : this.state.color;\n  };\n\n  render() {\n    const { activeItem } = this.state;\n    return (\n      <div className=\"nav center\">\n        <Menu icon pointing secondary vertical>\n          <div className=\"topLogo\">\n            <img className=\"iclogo\" src={sgLogo} alt=\"logo\" />\n          </div>\n\n          <div className=\"menuItems\">\n            <Link to=\"/dashboard\">\n              <Menu.Item\n                icon\n                name=\"dashboard\"\n                color=\"green\"\n                active={activeItem === \"dashboard\"}\n                onClick={this.handleItemClick}\n                \n              >\n                <DashLogo\n                  id=\"dashboard\"\n                  color={this.setIconColor(\"dashboard\")}\n                />\n              </Menu.Item>\n            </Link>\n\n            <Link to=\"/cropManagement\">\n              <Menu.Item\n                name=\"cropManagement\"\n                color=\"green\"\n                active={activeItem === \"cropManagement\"}\n                onClick={this.handleItemClick}\n              >\n                <LeafLogo color={this.setIconColor(\"cropManagement\")} />\n              </Menu.Item>\n            </Link>\n\n            <Link\n              // to=\"/sensors\"\n              to={`/sensors/${\n                this.props.defaultsensor ? this.props.defaultsensor : \"\"\n              }`}\n            >\n              <Menu.Item\n                name=\"sensors\"\n                color=\"green\"\n                active={activeItem === \"sensors\"}\n                onClick={this.handleItemClick}\n              >\n                <SensorsLogo color={this.setIconColor(\"sensors\")} />\n              </Menu.Item>\n            </Link>\n\n            <Link to=\"/gisAnalysis\">\n              <Menu.Item\n                name=\"gisAnalysis\"\n                color=\"green\"\n                active={activeItem === \"gisAnalysis\"}\n                onClick={this.handleItemClick}\n              >\n                <GlobalLogo color={this.setIconColor(\"gisAnalysis\")} />\n              </Menu.Item>\n            </Link>\n\n            <Link to=\"/settings\">\n              <Menu.Item\n                name=\"settings\"\n                color=\"green\"\n                active={activeItem === \"settings\"}\n                onClick={this.handleItemClick}\n              >\n                <SettingsLogo color={this.setIconColor(\"settings\")} />\n              </Menu.Item>\n            </Link>\n          </div>\n          <div className=\"bottomLgo\">\n            <img className=\"icfarmer\" src={farmer} alt=\"farmer\" />\n          </div>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}