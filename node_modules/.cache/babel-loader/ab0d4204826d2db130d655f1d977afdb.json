{"ast":null,"code":"import{connect}from\"react-redux\";import CropManagement from\"../components/Page/CropManagement\";import{editCropCycle,addCropCycle}from\"../actions/cropcycles\";import{addActivity}from\"../actions/activities\";import{getSensorsData}from\"../actions/sensors\";var mapStateToProps=function mapStateToProps(state){return{title:\"crop-management-title\",// key of translation, not the translated text\nuserId:state.user.userId,token:state.user.token,userFarms:state.farms.userFarms,cultivationtypes:state.lookup.cultivationtypes,croptypes:state.lookup.croptypes,seedtypes:state.lookup.seedtypes,activitytypes:state.lookup.activities,userActivities:state.activities.userActivities,//cropcycles: state.cropCycles.userCropCycles,\ncurrentcropcycles:state.cropCycles.userCurrentCropCycles,pastcropcycles:state.cropCycles.userPastCropCycles,devices:state.devices,sensors:state.sensors.sensormeasures};};export default connect(mapStateToProps,{editCropCycle:editCropCycle,addCropCycle:addCropCycle,addActivity:addActivity,getSensorsData:getSensorsData})(CropManagement);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/containers/CropManagement.js"],"names":["connect","CropManagement","editCropCycle","addCropCycle","addActivity","getSensorsData","mapStateToProps","state","title","userId","user","token","userFarms","farms","cultivationtypes","lookup","croptypes","seedtypes","activitytypes","activities","userActivities","currentcropcycles","cropCycles","userCurrentCropCycles","pastcropcycles","userPastCropCycles","devices","sensors","sensormeasures"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA4C,uBAA5C,CACA,OAASC,WAAT,KAA4B,uBAA5B,CACA,OAASC,cAAT,KAA+B,oBAA/B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,KAAK,CAAE,uBADF,CAC2B;AAChCC,MAAM,CAAEF,KAAK,CAACG,IAAN,CAAWD,MAFd,CAGLE,KAAK,CAAEJ,KAAK,CAACG,IAAN,CAAWC,KAHb,CAILC,SAAS,CAAEL,KAAK,CAACM,KAAN,CAAYD,SAJlB,CAKLE,gBAAgB,CAAEP,KAAK,CAACQ,MAAN,CAAaD,gBAL1B,CAMLE,SAAS,CAAET,KAAK,CAACQ,MAAN,CAAaC,SANnB,CAOLC,SAAS,CAAEV,KAAK,CAACQ,MAAN,CAAaE,SAPnB,CAQLC,aAAa,CAAEX,KAAK,CAACQ,MAAN,CAAaI,UARvB,CASLC,cAAc,CAAEb,KAAK,CAACY,UAAN,CAAiBC,cAT5B,CAUL;AACAC,iBAAiB,CAAEd,KAAK,CAACe,UAAN,CAAiBC,qBAX/B,CAYLC,cAAc,CAAEjB,KAAK,CAACe,UAAN,CAAiBG,kBAZ5B,CAaLC,OAAO,CAAEnB,KAAK,CAACmB,OAbV,CAcLC,OAAO,CAAEpB,KAAK,CAACoB,OAAN,CAAcC,cAdlB,CAAP,CAgBD,CAjBD,CAmBA,cAAe5B,CAAAA,OAAO,CAACM,eAAD,CAAkB,CACtCJ,aAAa,CAAbA,aADsC,CAEtCC,YAAY,CAAZA,YAFsC,CAGtCC,WAAW,CAAXA,WAHsC,CAItCC,cAAc,CAAdA,cAJsC,CAAlB,CAAP,CAKZJ,cALY,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CropManagement from \"../components/Page/CropManagement\";\nimport { editCropCycle, addCropCycle } from \"../actions/cropcycles\";\nimport { addActivity } from \"../actions/activities\";\nimport { getSensorsData } from \"../actions/sensors\";\n\nconst mapStateToProps = (state) => {\n  return {\n    title: \"crop-management-title\", // key of translation, not the translated text\n    userId: state.user.userId,\n    token: state.user.token,\n    userFarms: state.farms.userFarms,\n    cultivationtypes: state.lookup.cultivationtypes,\n    croptypes: state.lookup.croptypes,\n    seedtypes: state.lookup.seedtypes,\n    activitytypes: state.lookup.activities,\n    userActivities: state.activities.userActivities,\n    //cropcycles: state.cropCycles.userCropCycles,\n    currentcropcycles: state.cropCycles.userCurrentCropCycles,\n    pastcropcycles: state.cropCycles.userPastCropCycles,\n    devices: state.devices,\n    sensors: state.sensors.sensormeasures,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editCropCycle,\n  addCropCycle,\n  addActivity,\n  getSensorsData,\n})(CropManagement);\n"]},"metadata":{},"sourceType":"module"}