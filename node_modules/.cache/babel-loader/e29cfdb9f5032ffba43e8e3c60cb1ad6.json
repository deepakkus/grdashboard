{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/MapCard/MapCard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport SensorIcon from \"../../images/SensorIcon.png\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./MapCard.scss\";\n\nclass MapCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      greenIcon: {\n        lat: 35.787449,\n        lng: -78.6438197\n      },\n      redIcon: {\n        lat: 35.774416,\n        lng: -78.633271\n      },\n      orangeIcon: {\n        lat: 35.77279,\n        lng: -78.652305\n      },\n      zoom: 11\n    };\n    this.sensorIcon = L.icon({\n      iconUrl: SensorIcon,\n      iconSize: [40, 50],\n      // size of the icon\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      popupAnchor: [-3, -86]\n    });\n  }\n\n  render() {\n    let {\n      sensors,\n      match\n    } = this.props; // sensors = [];\n    // if (sensors) return sensor;\n\n    let sensor = sensors.filter(sensor => sensor.deviceId === match.params.id)[0]; // sensor = {};\n\n    const defaultPositionCenter = [40.7128, -74.006];\n    const positionSensorCenter = [sensor && sensor.location.latitude, sensor && sensor.location.longitude];\n    return sensor ? /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      className: \"p-0 map-segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"map-card\",\n      center: positionSensorCenter // center={positionGreenIcon}\n      ,\n      zoom: this.state.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"google\",\n      url: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), sensors && sensors.map(sensor => /*#__PURE__*/React.createElement(Marker, {\n      key: sensor.deviceId,\n      position: [sensor.location.latitude, sensor.location.longitude],\n      icon: this.sensorIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Popup // onOpen={() => {\n    //   this.props.history.push(`/sensors/${sensor.deviceId}`);\n    // }}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }), \"lat:\", sensor.location.latitude, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }), \"lon:\", sensor.location.longitude))))) : /*#__PURE__*/React.createElement(Segment, {\n      raised: true,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"map-card\",\n      center: defaultPositionCenter,\n      zoom: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  sensors: state.sensors.sensormeasures\n});\n\nexport default connect(mapStateToProps)(MapCard);","map":{"version":3,"sources":["/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/MapCard/MapCard.js"],"names":["React","Component","connect","L","Map","TileLayer","Marker","Popup","SensorIcon","Segment","MapCard","state","greenIcon","lat","lng","redIcon","orangeIcon","zoom","sensorIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","render","sensors","match","props","sensor","filter","deviceId","params","id","defaultPositionCenter","positionSensorCenter","location","latitude","longitude","map","mapStateToProps","sensormeasures"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport L from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport SensorIcon from \"../../images/SensorIcon.png\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./MapCard.scss\";\n\nclass MapCard extends Component {\n  state = {\n    greenIcon: {\n      lat: 35.787449,\n      lng: -78.6438197,\n    },\n    redIcon: {\n      lat: 35.774416,\n      lng: -78.633271,\n    },\n    orangeIcon: {\n      lat: 35.77279,\n      lng: -78.652305,\n    },\n    zoom: 11,\n  };\n\n  sensorIcon = L.icon({\n    iconUrl: SensorIcon,\n    iconSize: [40, 50], // size of the icon\n    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location\n    popupAnchor: [-3, -86],\n  });\n\n  render() {\n    let { sensors, match } = this.props;\n    // sensors = [];\n    // if (sensors) return sensor;\n    let sensor = sensors.filter(\n      (sensor) => sensor.deviceId === match.params.id\n    )[0];\n    // sensor = {};\n    const defaultPositionCenter = [40.7128, -74.006];\n\n    const positionSensorCenter = [\n      sensor && sensor.location.latitude,\n      sensor && sensor.location.longitude,\n    ];\n    return sensor ? (\n      <Segment raised className=\"p-0 map-segment\">\n        <Map\n          className=\"map-card\"\n          center={positionSensorCenter}\n          // center={positionGreenIcon}\n          zoom={this.state.zoom}\n        >\n          <TileLayer\n            attribution=\"google\"\n            url=\"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\n          />\n          {/* <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          /> */}\n\n          {sensors &&\n            sensors.map((sensor) => (\n              <Marker\n                key={sensor.deviceId}\n                position={[sensor.location.latitude, sensor.location.longitude]}\n                icon={this.sensorIcon}\n              >\n                <Popup\n                // onOpen={() => {\n                //   this.props.history.push(`/sensors/${sensor.deviceId}`);\n                // }}\n                >\n                  {/* deviceId:{sensor.deviceId} */}\n                  <br />\n                  lat:{sensor.location.latitude}\n                  <br />\n                  lon:{sensor.location.longitude}\n                </Popup>\n              </Marker>\n            ))}\n        </Map>\n\n        {/* <Popup\n          content=\"Add users to your feed\"\n          trigger={<Button icon=\"add\" />}\n        /> */}\n      </Segment>\n    ) : (\n      <Segment raised className=\"p-0\">\n        <Map className=\"map-card\" center={defaultPositionCenter} zoom={6}>\n          <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </Map>\n      </Segment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sensors: state.sensors.sensormeasures,\n});\n\nexport default connect(mapStateToProps)(MapCard);\n"]},"metadata":{},"sourceType":"module"}