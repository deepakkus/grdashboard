{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{getWeatherData}from\"../../actions/weather\";import{useTranslation}from\"react-i18next\";import{Loader,Grid,Container}from\"semantic-ui-react\";import\"../../utils/css/weather-icons.css\";import\"./PublicData.scss\";import WeatherDisplay from\"react-weather-display\";import MainButton from\"../MainButton/MainButton\";// import { useTranslation } from \"react-i18next\";\n// const weatherIcons = {\n//   Thunderstorm: \"wi-thunderstorm\",\n//   Drizzle: \"wi-sleet\",\n//   Rain: \"wi-storm-showers\",\n//   Snow: \"wi-snow\",\n//   Atmosphere: \"wi-fog\",\n//   Clear: \"wi-day-sunny\",\n//   Clouds: \"wi-day-fog\",\n// };\nvar PublicData=function PublicData(props){// weatherData = null;\n// TODO get latlng from browser location if not found\n// transltion i18next\nvar _useTranslation=useTranslation(\"public-data\"),t=_useTranslation.t;var polygon=props.userFarms[0].location;// console.log(polygon)\nvar weatherData=props.weatherData,getWeatherData=props.getWeatherData,latlng=props.latlng,className=props.className,gisclassName=props.gisclassName;var DetailWeather=weatherData[0];console.log(DetailWeather);// DetailWeather ? setApi(true) : setApi(false)\nvar Min_Air_Temp=DetailWeather?DetailWeather.Temp_air_min.toFixed(2):DetailWeather;var Max_Air_Temp=DetailWeather?DetailWeather.Temp_air_max.toFixed(2):DetailWeather;var Rel_Humidity=DetailWeather?DetailWeather.Rel_humidity.toFixed(2):DetailWeather;var Min_Land_Temp=DetailWeather?DetailWeather.Temp_land_min.toFixed(2):DetailWeather;var Max_Land_Temp=DetailWeather?DetailWeather.Temp_land_max.toFixed(2):DetailWeather;var Rain_det=DetailWeather?DetailWeather.Rain:DetailWeather;var snow_depth=DetailWeather?DetailWeather.Snow_depth:DetailWeather;var Wind_det=DetailWeather?DetailWeather.Windspeed:DetailWeather;// console.log(Min_Air_Temp, Max_Air_Temp, Rain_det, Rel_Humidity)\n// console.log(DetailWeather)\n// weather Icon function\n// const [iconState, setIconState] = useState({ icon: \"wi-day-sunny\" });\n// console.log(\"routeID\", match.params.id);\n// console.log(\"top\", weatherData);\n// get the right weather Icon depnds on the randeId\n// const get_WeatherIcon = (icons, rangeId) => {\n//   switch (true) {\n//     case rangeId >= 200 && rangeId < 232:\n//       setIconState({ icon: icons.Thunderstorm });\n//       break;\n//     case rangeId >= 300 && rangeId <= 321:\n//       setIconState({ icon: icons.Drizzle });\n//       break;\n//     case rangeId >= 500 && rangeId <= 521:\n//       setIconState({ icon: icons.Rain });\n//       break;\n//     case rangeId >= 600 && rangeId <= 622:\n//       setIconState({ icon: icons.Snow });\n//       break;\n//     case rangeId >= 701 && rangeId <= 781:\n//       setIconState({ icon: icons.Atmosphere });\n//       break;\n//     case rangeId === 800:\n//       setIconState({ icon: icons.Clear });\n//       break;\n//     case rangeId >= 801 && rangeId <= 804:\n//       setIconState({ icon: icons.Clouds });\n//       break;\n//     default:\n//       setIconState({ icon: icons.Clouds });\n//   }\n// };\nvar changeLogo=function changeLogo(image){switch(image){case\"cloudy\":return\"cloudy\";break;case\"partly_cloudy\":return\"cloudy\";break;case\"mostly_cloudy\":return\"cloudy\";break;case\"mostly_clear\":return\"sunny\";break;case\"clear\":return\"sunny\";break;case\"fog\":return\"cloudy\";break;case\"fog_light\":return\"sunny\";break;case\"drizzle\":return\"cloudy\";break;case\"rain_light\":return\"rainy\";break;case\"rain\":return\"rainy\";break;case\"rain_heavy\":return\"rainy\";break;case\"tstorm\":return\"rainy\";break;case\"flurries\":return\"rainy\";break;case\"snow_light\":return\"snowy\";break;case\"snow\":return\"snowy\";break;case\"snow_heavy\":return\"snowy\";break;case\"ice_pallets_light\":return\"rainy\";break;case\"ice_pallets_heavy\":return\"rainy\";break;case\"ice_pallets\":return\"rainy\";break;case\"freezing_drizzle\":return\"snowy\";break;case\"freezing_rain_light\":return\"rainy\";break;case\"freezing_rain\":return\"rainy\";break;case\"freezing_rain_heavy\":return\"rainy\";break;default:return\"cloudy\";}};useEffect(function(){// getWeatherData(latlng.lat, latlng.lon);\n// get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n!DetailWeather&&getWeatherData(latlng.lat,latlng.lon,polygon);},[]);// convert to celsius func\nvar calCelsius=function calCelsius(temp){var cell=Math.floor(temp-273.15);return cell;};// const { icon } = iconState;\n// if (!weatherData) {\n//   console.log('yes')\n// }\n// const precipIntensity = weatherData.precipitation ? weatherData.precipitation.value : weatherData.precipitation;\n// const humidity = weatherData.humidity ? weatherData.precipitation.value : weatherData.humidity;\n// const visibility = weatherData.visibility ? weatherData.visibility.value : weatherData.visibility;\nvar temp=weatherData.temp?weatherData.temp.value:weatherData.temp;// const wind_direction = weatherData.wind_direction ? weatherData.wind_direction.value : weatherData.wind_direction;\n// const wind_speed = weatherData.wind_speed ? weatherData.wind_speed.value : weatherData.wind_speed;\nvar weatherDesc=weatherData.weather_code?weatherData.weather_code.value:weatherData.weather_code;var main=weatherData.weather_code?weatherData.weather_code.value:weatherData.weather_code;// if (!weatherData) {\n//   return <p>no data found</p>;\n//   // return <Loader active inline=\"centered\" className=\"mt-4\" />;\n// }\n//weather icon func\n// get_WeatherIcon(weatherIcons, weatherId);\n// const UrlID = match.params.id;\nreturn weatherData?/*#__PURE__*/React.createElement(\"div\",{className:gisclassName?gisclassName:\"\"},/*#__PURE__*/React.createElement(Grid,{className:className?className:\"mx-0 weather-det\"},/*#__PURE__*/React.createElement(Grid.Row,{className:\"ml-0\"},/*#__PURE__*/React.createElement(Grid.Column,{className:\"ml-0\",textAlign:\"center\"},/*#__PURE__*/React.createElement(Container,{textAlign:\"center\",className:\"\"},/*#__PURE__*/React.createElement(\"div\",{className:\"PublicData\"},/*#__PURE__*/React.createElement(\"h5\",null,t(\"Public Weather Data\")),/*#__PURE__*/React.createElement(\"div\",{className:\"weather\"},/*#__PURE__*/React.createElement(\"div\",{className:\"weather-details\"},/*#__PURE__*/React.createElement(\"div\",{className:\"weather-desc\"},/*#__PURE__*/React.createElement(\"h6\",null,weatherDesc),/*#__PURE__*/React.createElement(\"h6\",null,t(\"temp\"),\" \".concat(temp),\"\\xB0C\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"weatherIcon\"},/*#__PURE__*/React.createElement(WeatherDisplay,{height:140,width:140,currentCondition:changeLogo(main),currentTemperature:temp})))),/*#__PURE__*/React.createElement(\"div\",{className:\"crop-weather\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},\"Air Temp: \",/*#__PURE__*/React.createElement(\"span\",{className:\"air-temp\"},Min_Air_Temp,\" to \",Max_Air_Temp)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Humidity: \",/*#__PURE__*/React.createElement(\"span\",{className:\"air-temp\"},Rel_Humidity))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Snow Depth: \",/*#__PURE__*/React.createElement(\"span\",{className:\"air-temp\"},snow_depth))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Land Temp: \",/*#__PURE__*/React.createElement(\"span\",{className:\"air-temp\"},Min_Land_Temp,\" to \",Max_Land_Temp))))))))),/*#__PURE__*/React.createElement(Grid.Row,{className:\"ml-0\"},/*#__PURE__*/React.createElement(Grid.Column,{width:8,className:\"ml-0\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",{className:\"mb-2\",style:{fontWeight:\"600\"}},\"RAIN\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"\\\"02H\\\" : \",Rain_det?Rain_det['02h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"05H\\\" : \",Rain_det?Rain_det['05h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"08H\\\" : \",Rain_det?Rain_det['08h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"11H\\\" : \",Rain_det?Rain_det['11h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"14H\\\" : \",Rain_det?Rain_det['14h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"17H\\\" : \",Rain_det?Rain_det['17h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"20H\\\" : \",Rain_det?Rain_det['20h'].toFixed(4):Rain_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"23H\\\" : \",Rain_det?Rain_det['23h'].toFixed(4):Rain_det))))),/*#__PURE__*/React.createElement(Grid.Column,{width:8},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-2\",style:{fontWeight:\"600\"}},\"WINDSPEED\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"\\\"02H\\\" : \",Wind_det?Wind_det['02h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"05H\\\" : \",Wind_det?Rain_det['05h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"08H\\\" : \",Wind_det?Rain_det['08h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"11H\\\" : \",Wind_det?Rain_det['11h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"14H\\\" : \",Wind_det?Rain_det['14h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"17H\\\" : \",Wind_det?Rain_det['17h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"20H\\\" : \",Wind_det?Rain_det['20h'].toFixed(4):Wind_det),/*#__PURE__*/React.createElement(\"p\",null,\"\\\"23H\\\" : \",Wind_det?Wind_det['23h'].toFixed(4):Wind_det)))))))):/*#__PURE__*/ // \"\"\nReact.createElement(Loader,{active:true,inline:\"centered\",className:\"mt-3\"});};var mapStateToProps=function mapStateToProps(state){return{weatherData:state.weather.weatherData_sensor,sensors:state.sensors.sensormeasures};};export default connect(mapStateToProps,{getWeatherData:getWeatherData})(PublicData);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/PublicData/PublicData.js"],"names":["React","useEffect","useState","connect","getWeatherData","useTranslation","Loader","Grid","Container","WeatherDisplay","MainButton","PublicData","props","t","polygon","userFarms","location","weatherData","latlng","className","gisclassName","DetailWeather","console","log","Min_Air_Temp","Temp_air_min","toFixed","Max_Air_Temp","Temp_air_max","Rel_Humidity","Rel_humidity","Min_Land_Temp","Temp_land_min","Max_Land_Temp","Temp_land_max","Rain_det","Rain","snow_depth","Snow_depth","Wind_det","Windspeed","changeLogo","image","lat","lon","calCelsius","temp","cell","Math","floor","value","weatherDesc","weather_code","main","fontWeight","mapStateToProps","state","weather","weatherData_sensor","sensors","sensormeasures"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getWeatherData } from \"../../actions/weather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Loader , Grid, Container} from \"semantic-ui-react\";\nimport \"../../utils/css/weather-icons.css\";\nimport \"./PublicData.scss\";\nimport WeatherDisplay from \"react-weather-display\";\nimport MainButton from \"../MainButton/MainButton\";\n\n// import { useTranslation } from \"react-i18next\";\n\n// const weatherIcons = {\n//   Thunderstorm: \"wi-thunderstorm\",\n//   Drizzle: \"wi-sleet\",\n//   Rain: \"wi-storm-showers\",\n//   Snow: \"wi-snow\",\n//   Atmosphere: \"wi-fog\",\n//   Clear: \"wi-day-sunny\",\n//   Clouds: \"wi-day-fog\",\n// };\n\nconst  PublicData = (props) =>{\n  // weatherData = null;\n  // TODO get latlng from browser location if not found\n  // transltion i18next\n  const { t } = useTranslation(\"public-data\");\n  let polygon = props.userFarms[0].location;\n  // console.log(polygon)\n  const { weatherData, getWeatherData, latlng, className, gisclassName } = props\n  const DetailWeather = weatherData[0];\n  console.log(DetailWeather)\n  // DetailWeather ? setApi(true) : setApi(false)\n  const Min_Air_Temp = DetailWeather ? DetailWeather.Temp_air_min.toFixed(2) : DetailWeather\n  const Max_Air_Temp = DetailWeather ? DetailWeather.Temp_air_max.toFixed(2) : DetailWeather\n  const Rel_Humidity = DetailWeather ? DetailWeather.Rel_humidity.toFixed(2) : DetailWeather\n  const Min_Land_Temp = DetailWeather ? DetailWeather.Temp_land_min.toFixed(2) : DetailWeather;\n  const Max_Land_Temp = DetailWeather ? DetailWeather.Temp_land_max.toFixed(2) : DetailWeather\n  const Rain_det = DetailWeather ? DetailWeather.Rain : DetailWeather\n  const snow_depth = DetailWeather ? DetailWeather.Snow_depth : DetailWeather\n  const Wind_det = DetailWeather ? DetailWeather.Windspeed : DetailWeather\n  // console.log(Min_Air_Temp, Max_Air_Temp, Rain_det, Rel_Humidity)\n  // console.log(DetailWeather)\n  // weather Icon function\n  // const [iconState, setIconState] = useState({ icon: \"wi-day-sunny\" });\n  // console.log(\"routeID\", match.params.id);\n  // console.log(\"top\", weatherData);\n\n  // get the right weather Icon depnds on the randeId\n  // const get_WeatherIcon = (icons, rangeId) => {\n  //   switch (true) {\n  //     case rangeId >= 200 && rangeId < 232:\n  //       setIconState({ icon: icons.Thunderstorm });\n  //       break;\n  //     case rangeId >= 300 && rangeId <= 321:\n  //       setIconState({ icon: icons.Drizzle });\n  //       break;\n  //     case rangeId >= 500 && rangeId <= 521:\n  //       setIconState({ icon: icons.Rain });\n  //       break;\n  //     case rangeId >= 600 && rangeId <= 622:\n  //       setIconState({ icon: icons.Snow });\n  //       break;\n  //     case rangeId >= 701 && rangeId <= 781:\n  //       setIconState({ icon: icons.Atmosphere });\n  //       break;\n  //     case rangeId === 800:\n  //       setIconState({ icon: icons.Clear });\n  //       break;\n  //     case rangeId >= 801 && rangeId <= 804:\n  //       setIconState({ icon: icons.Clouds });\n  //       break;\n  //     default:\n  //       setIconState({ icon: icons.Clouds });\n  //   }\n  // };\n\n  const changeLogo = (image) => {\n    switch(image){\n      case \"cloudy\":\n        return \"cloudy\";\n        break;\n      case \"partly_cloudy\":\n        return \"cloudy\";\n        break;\n      case \"mostly_cloudy\":\n        return \"cloudy\";\n        break;\n      case \"mostly_clear\":\n        return \"sunny\";\n        break;\n      case \"clear\":\n        return \"sunny\";\n        break;\n      case \"fog\":\n        return \"cloudy\";\n        break;\n      case \"fog_light\":\n        return \"sunny\";\n        break;\n      case \"drizzle\":\n        return \"cloudy\";\n        break;\n      case \"rain_light\":\n        return \"rainy\";\n        break;\n      case \"rain\":\n        return \"rainy\";\n        break;\n      case \"rain_heavy\":\n        return \"rainy\";\n        break;\n      case \"tstorm\":\n        return \"rainy\";\n        break;\n      case \"flurries\":\n        return \"rainy\";\n        break;\n      case \"snow_light\":\n        return \"snowy\";\n        break;\n      case \"snow\":\n        return \"snowy\";\n        break;\n      case \"snow_heavy\":\n        return \"snowy\";\n        break;\n      case \"ice_pallets_light\":\n        return \"rainy\";\n        break;\n      case \"ice_pallets_heavy\":\n        return \"rainy\";\n        break;\n      case \"ice_pallets\":\n        return \"rainy\";\n        break;\n      case \"freezing_drizzle\":\n        return \"snowy\";\n        break;\n      case \"freezing_rain_light\":\n        return \"rainy\";\n        break;\n      case \"freezing_rain\":\n        return \"rainy\";\n        break;\n      case \"freezing_rain_heavy\":\n        return \"rainy\";\n        break;\n      default:\n        return \"cloudy\";\n    }\n  }\n\n  useEffect(()=> {\n    // getWeatherData(latlng.lat, latlng.lon);\n    // get_WeatherIcon(weatherIcons, weatherData && weatherData.weatherId);\n    \n    !DetailWeather && getWeatherData(latlng.lat, latlng.lon, polygon)\n\n  \n  }, []);\n  \n  // convert to celsius func\n  const calCelsius = (temp) => {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  };\n\n  // const { icon } = iconState;\n  // if (!weatherData) {\n  //   console.log('yes')\n  // }\n  \n  \n  // const precipIntensity = weatherData.precipitation ? weatherData.precipitation.value : weatherData.precipitation;\n  // const humidity = weatherData.humidity ? weatherData.precipitation.value : weatherData.humidity;\n  // const visibility = weatherData.visibility ? weatherData.visibility.value : weatherData.visibility;\n  const temp = weatherData.temp ? weatherData.temp.value : weatherData.temp;\n  // const wind_direction = weatherData.wind_direction ? weatherData.wind_direction.value : weatherData.wind_direction;\n  // const wind_speed = weatherData.wind_speed ? weatherData.wind_speed.value : weatherData.wind_speed;\n  const weatherDesc = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n  const main = weatherData.weather_code ? weatherData.weather_code.value : weatherData.weather_code;\n\n\n  // if (!weatherData) {\n  //   return <p>no data found</p>;\n  //   // return <Loader active inline=\"centered\" className=\"mt-4\" />;\n  // }\n\n\n  \n  \n  //weather icon func\n  // get_WeatherIcon(weatherIcons, weatherId);\n  // const UrlID = match.params.id;\n\n  return weatherData ? (\n    <div className = {gisclassName ? gisclassName : \"\"}>\n      <Grid className = {className ? className : `mx-0 weather-det`}>\n        <Grid.Row className=\"ml-0\">\n          <Grid.Column className=\"ml-0\" textAlign = \"center\">\n            <Container textAlign=\"center\" className=\"\">\n              <div className=\"PublicData\">\n                <h5>{t(\"Public Weather Data\")}</h5>  \n                <div className=\"weather\">\n                  <div className=\"weather-details\">\n                    <div className = \"weather-desc\">\n                      <h6>\n                        {weatherDesc}\n                      </h6>\n                      <h6>\n                        {t(\"temp\")}{` ${temp}`}&deg;C\n                      </h6>\n                    </div>\n                    <div>\n                      <i className=\"weatherIcon\">\n                        <WeatherDisplay \n                          height={140}\n                          width={140}\n                          currentCondition={changeLogo(main)}\n                          currentTemperature={temp}\n                        />\n                      </i>\n                    </div>\n                  </div>\n                  \n                  <div className = \"crop-weather\">\n                    <div className = \"\">\n                      Air Temp: <span className = \"air-temp\">{ Min_Air_Temp} to {Max_Air_Temp}\n                      </span>\n                    </div>\n                    <div>\n                      <div>\n                        Humidity: <span className = \"air-temp\">{Rel_Humidity}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <div>\n                        Snow Depth: <span className = \"air-temp\">{snow_depth}</span>\n                      </div>\n                    </div>\n                    <div>\n                      <div>\n                        Land Temp: <span className = \"air-temp\">{Min_Land_Temp} to {Max_Land_Temp}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row className = \"ml-0\">\n          <Grid.Column width = {8} className = \"ml-0\">\n            <Container> \n              <div>\n                <div>\n                  <h6 className = \"mb-2\" style = {{fontWeight: \"600\"}}>\n                    RAIN\n                  </h6>\n                </div>\n                <div>\n                  <p>\n                    \"02H\" : {Rain_det ? Rain_det['02h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"05H\" : {Rain_det ? Rain_det['05h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"08H\" : {Rain_det ? Rain_det['08h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"11H\" : {Rain_det ? Rain_det['11h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"14H\" : {Rain_det ? Rain_det['14h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"17H\" : {Rain_det ? Rain_det['17h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"20H\" : {Rain_det ? Rain_det['20h'].toFixed(4) : Rain_det} \n                  </p>\n                  <p>\n                    \"23H\" : {Rain_det ? Rain_det['23h'].toFixed(4) : Rain_det}\n                  </p>  \n                </div>\n              </div>\n            </Container>\n          </Grid.Column>\n          <Grid.Column width = {8}> \n            <Container>\n              <div>\n                <div>\n                  <h5 className = \"mb-2\" style = {{fontWeight: \"600\"}}>\n                    WINDSPEED\n                  </h5>\n                </div>\n                <div>\n                  <p>\n                    \"02H\" : {Wind_det ? Wind_det['02h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"05H\" : {Wind_det ? Rain_det['05h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"08H\" : {Wind_det ? Rain_det['08h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"11H\" : {Wind_det ? Rain_det['11h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"14H\" : {Wind_det ? Rain_det['14h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"17H\" : {Wind_det ? Rain_det['17h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"20H\" : {Wind_det ? Rain_det['20h'].toFixed(4) : Wind_det} \n                  </p>\n                  <p>\n                    \"23H\" : {Wind_det ? Wind_det['23h'].toFixed(4) : Wind_det}\n                  </p>  \n                </div>\n              </div>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  ) : (\n    // \"\"\n    <Loader active inline=\"centered\" className=\"mt-3\" />\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  \n  weatherData: state.weather.weatherData_sensor,\n  sensors: state.sensors.sensormeasures,\n});\n\nexport default connect(mapStateToProps, { getWeatherData })(PublicData);\n"]},"metadata":{},"sourceType":"module"}