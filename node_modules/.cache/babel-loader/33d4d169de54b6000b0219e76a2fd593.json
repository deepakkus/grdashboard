{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import\"antd/dist/antd.css\";import styles from\"./TimelineLabel.module.css\";import{Timeline,Typography,Space,Row,Col}from\"antd\";import{CheckCircleTwoTone}from\"@ant-design/icons\";import TimelineHeading from\"../TimelineHeading/TimelineHeading\";import{Container,Grid,Icon}from\"semantic-ui-react\";var TimelineLabel=function TimelineLabel(props){var Text=Typography.Text;var dotColor=\"green\";var textType=\"secondary\";var _useState=useState(),_useState2=_slicedToArray(_useState,2),cc=_useState2[0],setCC=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),activities=_useState4[0],setActivities=_useState4[1];function chosenCC(ccId){setCC(ccId);}useEffect(function(){if(cc){if(props){if(props.userActivities){if(props.userActivities.length>0){var ccActivities=props.userActivities.filter(function(act){return act.cropCycleId===cc;});ccActivities.sort(function(a,b){if(a.logDate<b.logDate)return-1;if(a.logDate>b.logDate)return 1;else return 0;});setActivities(ccActivities);}}}}},[cc]);return/*#__PURE__*/React.createElement(Grid,{columns:1},/*#__PURE__*/React.createElement(Grid.Row,{className:\"mx-0\"},/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(TimelineHeading,Object.assign({},props,{chosenCC:chosenCC})))),/*#__PURE__*/React.createElement(Grid.Row,{className:\"mx-0\"},/*#__PURE__*/React.createElement(Grid.Column,{width:16},/*#__PURE__*/React.createElement(Timeline,{mode:\"left\",className:styles.timelines},activities.map(function(activity){var log=new Date(activity.logDate);return/*#__PURE__*/React.createElement(Timeline.Item,{key:activity._id,color:dotColor,label:log.getDay()+log.toLocaleString('en-us',{month:'short'})},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelineHeading},props.activitytypes.find(function(type){return type._id===activity.activityId;}).name),/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelinesdesc},\"VIEW SOIL CONDITION | VIEW INFO\")));}),/*#__PURE__*/React.createElement(Timeline.Item,{color:dotColor,label:\"12 Jan\"},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelineHeading},\"Tilling\"),/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelinesdesc},\"VIEW SOIL CONDITION | VIEW INFO\"))),/*#__PURE__*/React.createElement(Timeline.Item,{color:dotColor,label:\"19 Jan\"},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelineHeading},\"1st Weekly Soil Report\"),/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelinesdesc},\"VIEW SOIL CONDITION \"))),/*#__PURE__*/React.createElement(Timeline.Item,{color:dotColor,label:\"22 Jan\"},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelineHeading},\"Seed sowing\"),/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelinesdesc},\"VIEW SOIL CONDITION | VIEW INFO\"))),/*#__PURE__*/React.createElement(Timeline.Item,{color:dotColor,label:\"10 Feb\"},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelineHeading},\"Irrigation\"),/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelinesdesc},\"VIEW SOIL CONDITION | VIEW INFO\"))),/*#__PURE__*/React.createElement(Timeline.Item,{color:dotColor,label:\"16 Feb\"},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelineHeading},\"Irrigation \",/*#__PURE__*/React.createElement(Icon,{name:\"check square\"}),\"Prescribed Action\"),/*#__PURE__*/React.createElement(Text,{type:textType,className:styles.timelinesdesc},\"VIEW SOIL CONDITION | VIEW INFO\")))))))// <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n// <Container fluid>\n//   <Container fluid>\n//     <TimelineHeading {...props} chosenCC={chosenCC}/>\n//   </Container>\n//   <Container textAlign=\"left\" fluid>\n//   <Row>\n//     <Col span={18}>\n//       <Timeline mode=\"left\">\n//         {\n//           activities.map(activity => {\n//             const log = new Date(activity.logDate)\n//             return (\n//             <Timeline.Item key={activity._id} color={dotColor} label={log.getDay() + log.toLocaleString('en-us', { month: 'short' })}>\n//             <Space direction=\"vertical\">\n//               <Text type={textType} className={styles.timelineHeading}>\n//                 {props.activitytypes.find(type => type._id === activity.activityId).name}\n//               </Text>\n//               <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n//             </Space>\n//           </Timeline.Item>\n//             );  \n//           })\n//         }\n//         <Timeline.Item color={dotColor} label=\"12 Jan\">\n//           <Space direction=\"vertical\">\n//             <Text type={textType} className={styles.timelineHeading}>\n//               Tilling\n//             </Text>\n//             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n//           </Space>\n//         </Timeline.Item>\n//         <Timeline.Item color={dotColor} label=\"19 Jan\">\n//           <Space direction=\"vertical\">\n//             <Text type={textType} className={styles.timelineHeading}>\n//               1st Weekly Soil Report\n//             </Text>\n//             <Text type={textType}>VIEW SOIL CONDITION </Text>\n//           </Space>\n//         </Timeline.Item>\n//         <Timeline.Item color={dotColor} label=\"22 Jan\">\n//           <Space direction=\"vertical\">\n//             <Text type={textType} className={styles.timelineHeading}>\n//               Seed sowing\n//             </Text>\n//             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n//           </Space>\n//         </Timeline.Item>\n//         <Timeline.Item color={dotColor} label=\"10 Feb\">\n//           <Space direction=\"vertical\">\n//             <Text type={textType} className={styles.timelineHeading}>\n//               Irrigation\n//             </Text>\n//             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n//           </Space>\n//         </Timeline.Item>\n//         <Timeline.Item color={dotColor} label=\"16 Feb\">\n//           <Space direction=\"vertical\">\n//             <Text type={textType} className={styles.timelineHeading}>\n//               Irrigation <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//               Prescribed Action\n//             </Text>\n//             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n//           </Space>\n//         </Timeline.Item>\n//       </Timeline>\n//     </Col>\n//   </Row>\n//   </Container>\n// </Container>\n;};export default TimelineLabel;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/TimelineLabel/TimelineLabel.js"],"names":["React","useEffect","useState","styles","Timeline","Typography","Space","Row","Col","CheckCircleTwoTone","TimelineHeading","Container","Grid","Icon","TimelineLabel","props","Text","dotColor","textType","cc","setCC","activities","setActivities","chosenCC","ccId","userActivities","length","ccActivities","filter","act","cropCycleId","sort","a","b","logDate","timelines","map","activity","log","Date","_id","getDay","toLocaleString","month","timelineHeading","activitytypes","find","type","activityId","name","timelinesdesc"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport \"antd/dist/antd.css\";\nimport styles from \"./TimelineLabel.module.css\";\nimport { Timeline, Typography, Space, Row, Col } from \"antd\";\nimport { CheckCircleTwoTone } from \"@ant-design/icons\";\nimport TimelineHeading from \"../TimelineHeading/TimelineHeading\";\nimport { Container, Grid, Icon } from \"semantic-ui-react\";\nconst TimelineLabel = (props) => {\n  const { Text } = Typography;\n  const dotColor = \"green\";\n  const textType = \"secondary\";\n  const [cc, setCC] = useState();\n  const [activities, setActivities] = useState([])\n  function chosenCC(ccId) {\n    setCC(ccId);\n  }\n  useEffect(() => {\n    if(cc){\n    if(props){\n      if(props.userActivities){\n        if(props.userActivities.length > 0){\n            const ccActivities = props.userActivities.filter(act => act.cropCycleId === cc)\n            ccActivities.sort(function(a,b){\n              \n              if(a.logDate < b.logDate)\n                return -1 \n              if(a.logDate > b.logDate)\n                return 1\n              else\n                return 0\n              \n            })\n            setActivities(ccActivities);  \n          }\n        }\n      }\n    }\n  }, [cc]);\n  return (\n    \n    <Grid columns={1}>\n      <Grid.Row  className=\"mx-0\">\n        <Grid.Column>\n          <TimelineHeading {...props} chosenCC={chosenCC}/>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className=\"mx-0\">\n        <Grid.Column width={16}>\n          <Timeline mode=\"left\" className={styles.timelines}>\n            {\n              activities.map(activity => {\n                const log = new Date(activity.logDate)\n                return (\n                  <Timeline.Item key={activity._id} color={dotColor} label={log.getDay() + log.toLocaleString('en-us', { month: 'short' })}>\n                    <Space direction=\"vertical\">\n                      <Text type={textType} className={styles.timelineHeading}>\n                        {props.activitytypes.find(type => type._id === activity.activityId).name}\n                      </Text>\n                      <Text type={textType} className={styles.timelinesdesc}>VIEW SOIL CONDITION | VIEW INFO</Text>\n                    </Space>\n                  </Timeline.Item>\n                );  \n              })\n            }\n            <Timeline.Item color={dotColor} label=\"12 Jan\">\n              <Space direction=\"vertical\">\n                <Text type={textType} className={styles.timelineHeading}>\n                  Tilling\n                </Text>\n                <Text type={textType} className={styles.timelinesdesc}>VIEW SOIL CONDITION | VIEW INFO</Text>\n              </Space>\n            </Timeline.Item>\n            <Timeline.Item color={dotColor} label=\"19 Jan\">\n              <Space direction=\"vertical\">\n                <Text type={textType} className={styles.timelineHeading}>\n                  1st Weekly Soil Report\n                </Text>\n                <Text type={textType} className={styles.timelinesdesc}>VIEW SOIL CONDITION </Text>\n              </Space>\n            </Timeline.Item>\n            <Timeline.Item color={dotColor} label=\"22 Jan\">\n              <Space direction=\"vertical\">\n                <Text type={textType} className={styles.timelineHeading}>\n                  Seed sowing\n                </Text>\n                <Text type={textType} className={styles.timelinesdesc}>VIEW SOIL CONDITION | VIEW INFO</Text>\n              </Space>\n            </Timeline.Item>\n            <Timeline.Item color={dotColor} label=\"10 Feb\">\n              <Space direction=\"vertical\">\n                <Text type={textType} className={styles.timelineHeading}>\n                  Irrigation\n                </Text>\n                <Text type={textType} className={styles.timelinesdesc}>VIEW SOIL CONDITION | VIEW INFO</Text>\n              </Space>\n            </Timeline.Item>\n            <Timeline.Item color={dotColor} label=\"16 Feb\">\n              <Space direction=\"vertical\">\n                <Text type={textType} className={styles.timelineHeading}>\n                  Irrigation <Icon name=\"check square\"/>\n                  Prescribed Action\n                </Text>\n                <Text type={textType} className={styles.timelinesdesc}>VIEW SOIL CONDITION | VIEW INFO</Text>\n              </Space>\n            </Timeline.Item>\n          </Timeline>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    \n    // <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n    \n    // <Container fluid>\n    //   <Container fluid>\n    //     <TimelineHeading {...props} chosenCC={chosenCC}/>\n    //   </Container>\n    //   <Container textAlign=\"left\" fluid>\n    //   <Row>\n    //     <Col span={18}>\n    //       <Timeline mode=\"left\">\n    //         {\n    //           activities.map(activity => {\n    //             const log = new Date(activity.logDate)\n    //             return (\n    //             <Timeline.Item key={activity._id} color={dotColor} label={log.getDay() + log.toLocaleString('en-us', { month: 'short' })}>\n    //             <Space direction=\"vertical\">\n    //               <Text type={textType} className={styles.timelineHeading}>\n    //                 {props.activitytypes.find(type => type._id === activity.activityId).name}\n    //               </Text>\n    //               <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n    //             </Space>\n    //           </Timeline.Item>\n    //             );  \n    //           })\n    //         }\n    //         <Timeline.Item color={dotColor} label=\"12 Jan\">\n    //           <Space direction=\"vertical\">\n    //             <Text type={textType} className={styles.timelineHeading}>\n    //               Tilling\n    //             </Text>\n    //             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n    //           </Space>\n    //         </Timeline.Item>\n    //         <Timeline.Item color={dotColor} label=\"19 Jan\">\n    //           <Space direction=\"vertical\">\n    //             <Text type={textType} className={styles.timelineHeading}>\n    //               1st Weekly Soil Report\n    //             </Text>\n    //             <Text type={textType}>VIEW SOIL CONDITION </Text>\n    //           </Space>\n    //         </Timeline.Item>\n    //         <Timeline.Item color={dotColor} label=\"22 Jan\">\n    //           <Space direction=\"vertical\">\n    //             <Text type={textType} className={styles.timelineHeading}>\n    //               Seed sowing\n    //             </Text>\n    //             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n    //           </Space>\n    //         </Timeline.Item>\n    //         <Timeline.Item color={dotColor} label=\"10 Feb\">\n    //           <Space direction=\"vertical\">\n    //             <Text type={textType} className={styles.timelineHeading}>\n    //               Irrigation\n    //             </Text>\n    //             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n    //           </Space>\n    //         </Timeline.Item>\n    //         <Timeline.Item color={dotColor} label=\"16 Feb\">\n    //           <Space direction=\"vertical\">\n    //             <Text type={textType} className={styles.timelineHeading}>\n    //               Irrigation <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n    //               Prescribed Action\n    //             </Text>\n\n    //             <Text type={textType}>VIEW SOIL CONDITION | VIEW INFO</Text>\n    //           </Space>\n    //         </Timeline.Item>\n    //       </Timeline>\n    //     </Col>\n    //   </Row>\n    //   </Container>\n    // </Container>\n  );\n};\n\nexport default TimelineLabel;\n"]},"metadata":{},"sourceType":"module"}