{"ast":null,"code":"import _regeneratorRuntime from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{ADD_ACTIVITY,ADD_ACTIVITY_ERROR,SET_ACTIVITIES,GET_ACTIVITIES_ERROR,SET_APP_LOADING}from\"../actions/types\";export var addActivity=function addActivity(activity,userId,token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\" \".concat(process.env.REACT_APP_API_URL,\"/cropcycleactivity\"),activity,{headers:{Authorization:\"Bearer \".concat(token,\" \").concat(userId)}});case 3:res=_context.sent;console.log(res.data);dispatch({type:ADD_ACTIVITY,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch({type:ADD_ACTIVITY_ERROR,payload:_context.t0.response});case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//Not Working To be checked\nexport var getUserActivities=function getUserActivities(currentCropCycles,userId,token){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var currentCropCyclesIds,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:currentCropCyclesIds=[];currentCropCycles.map(function(cc){cc?currentCropCyclesIds.find(function(c){return c===cc._id;})?console.log(\"duplicate\"):cc._id?currentCropCyclesIds.push(cc._id):console.log(\"_id not defined\",cc):console.log(\"fromaction\",cc);});if(!(currentCropCyclesIds.length>0)){_context2.next=14;break;}_context2.prev=3;_context2.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/cropcycleactivity/all\"),currentCropCyclesIds,{headers:{Authorization:\"Bearer \".concat(token,\" \").concat(userId)}});case 6:res=_context2.sent;dispatch({type:SET_ACTIVITIES,payload:res.data});dispatch({type:SET_APP_LOADING,payload:false});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](3);dispatch({type:GET_ACTIVITIES_ERROR,payload:{msg:_context2.t0.response}});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[3,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/actions/activities.js"],"names":["axios","ADD_ACTIVITY","ADD_ACTIVITY_ERROR","SET_ACTIVITIES","GET_ACTIVITIES_ERROR","SET_APP_LOADING","addActivity","activity","userId","token","dispatch","post","process","env","REACT_APP_API_URL","headers","Authorization","res","console","log","data","type","payload","response","getUserActivities","currentCropCycles","currentCropCyclesIds","map","cc","find","c","_id","push","length","msg"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,YAAT,CAAuBC,kBAAvB,CAA2CC,cAA3C,CAA2DC,oBAA3D,CAAiFC,eAAjF,KAAwG,kBAAxG,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAWC,MAAX,CAAmBC,KAAnB,iGAA6B,iBAAOC,QAAP,gKAElCV,CAAAA,KAAK,CAACW,IAAN,YACZC,OAAO,CAACC,GAAR,CAAYC,iBADA,uBAEhBP,QAFgB,CAGhB,CACEQ,OAAO,CAAE,CACPC,aAAa,kBAAYP,KAAZ,aAAqBD,MAArB,CADN,CADX,CAHgB,CAFkC,QAE9CS,GAF8C,eAWpDC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EACAV,QAAQ,CAAC,CACPW,IAAI,CAAEpB,YADC,CAEPqB,OAAO,CAAEL,GAAG,CAACG,IAFN,CAAD,CAAR,CAZoD,+EAiBpDV,QAAQ,CAAC,CACPW,IAAI,CAAEnB,kBADC,CAEPoB,OAAO,CAAE,YAAIC,QAFN,CAAD,CAAR,CAjBoD,oEAA7B,gEAApB,CAwBP;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,iBAAD,CAAoBjB,MAApB,CAA4BC,KAA5B,kGAAsC,kBAAOC,QAAP,mJAC7DgB,oBAD6D,CACtC,EADsC,CAEnED,iBAAiB,CAACE,GAAlB,CAAsB,SAAAC,EAAE,CAAI,CAC3BA,EAAE,CAAIF,oBAAoB,CAACG,IAArB,CAA0B,SAACC,CAAD,QAAOA,CAAAA,CAAC,GAAKF,EAAE,CAACG,GAAhB,EAA1B,EAAkDb,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAlD,CACLS,EAAE,CAACG,GAAH,CAAUL,oBAAoB,CAACM,IAArB,CAA0BJ,EAAE,CAACG,GAA7B,CAAV,CACEb,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BS,EAA/B,CAFD,CAIEV,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BS,EAA1B,CAJJ,CAKA,CAND,EAFmE,KAShEF,oBAAoB,CAACO,MAArB,CAA6B,CATmC,oEAW7CjC,CAAAA,KAAK,CAACW,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,2BAClBY,oBADkB,CAElB,CACIX,OAAO,CAAE,CACTC,aAAa,kBAAYP,KAAZ,aAAqBD,MAArB,CADJ,CADb,CAFkB,CAX6C,QAWzDS,GAXyD,gBAkB/DP,QAAQ,CAAC,CACLW,IAAI,CAAElB,cADD,CAELmB,OAAO,CAAEL,GAAG,CAACG,IAFR,CAAD,CAAR,CAIAV,QAAQ,CAAC,CACLW,IAAI,CAAEhB,eADD,CAELiB,OAAO,CAAE,KAFJ,CAAD,CAAR,CAtB+D,qFA2B/DZ,QAAQ,CAAC,CACLW,IAAI,CAAEjB,oBADD,CAELkB,OAAO,CAAE,CAAEY,GAAG,CAAE,aAAIX,QAAX,CAFJ,CAAD,CAAR,CA3B+D,uEAAtC,kEAA1B","sourcesContent":["import axios from \"axios\";\n\nimport { ADD_ACTIVITY, ADD_ACTIVITY_ERROR, SET_ACTIVITIES, GET_ACTIVITIES_ERROR, SET_APP_LOADING } from \"../actions/types\";\n\nexport const addActivity = (activity, userId, token) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      ` ${process.env.REACT_APP_API_URL}/cropcycleactivity`,\n      activity,\n      {\n        headers: {\n          Authorization: `Bearer ${token} ${userId}`,\n        }\n      }\n    );\n    console.log(res.data)\n    dispatch({\n      type: ADD_ACTIVITY,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: ADD_ACTIVITY_ERROR,\n      payload: err.response,\n    });\n  }\n};\n\n//Not Working To be checked\nexport const getUserActivities = (currentCropCycles, userId, token) => async (dispatch) => {\n    const currentCropCyclesIds = [];\n    currentCropCycles.map(cc => {\n     cc ? (currentCropCyclesIds.find((c) => c === cc._id) ? (console.log(\"duplicate\")) : \n     (cc._id ? (currentCropCyclesIds.push(cc._id))\n     : (console.log(\"_id not defined\", cc)))\n     )\n      : (console.log(\"fromaction\", cc))   \n    }); \n    if(currentCropCyclesIds.length >0){\n        try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/cropcycleactivity/all`,\n        currentCropCyclesIds,\n        {\n            headers: {\n            Authorization: `Bearer ${token} ${userId}`,\n            }\n        });\n        dispatch({\n            type: SET_ACTIVITIES,\n            payload: res.data,\n        });\n        dispatch({\n            type: SET_APP_LOADING,\n            payload: false,\n        });\n        } catch (err) {\n        dispatch({\n            type: GET_ACTIVITIES_ERROR,\n            payload: { msg: err.response },\n        });\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}