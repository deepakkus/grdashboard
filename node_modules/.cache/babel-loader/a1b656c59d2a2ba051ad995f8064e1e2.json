{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Suspense,useState,useEffect}from\"react\";import Navbar from\"../Navbar/navbar\";import SearchBar from\"../SearchBar/SearchBar\";import CropContainer from\"../CropManagement/cropcontainer\";import\"./tablet-view.scss\";import{Grid,Sidebar,Segment,Container,Button,Icon}from\"semantic-ui-react\";import CropSideSection from\"../../sections/CropSideSection/cropsidesection\";import MainButton from\"../MainButton/MainButton\";import Profile from\"../Profile/Profile\";import{useTranslation}from\"react-i18next\";var TabletViewCropPage=function TabletViewCropPage(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hidden=_useState2[0],setHidden=_useState2[1];var _useTranslation=useTranslation(\"common\"),t=_useTranslation.t;// const [flag, setFlag] = useState(true);\n// const changeFlag = () => {\n//     setFlag(false);\n//     setTimeout(() => {\n//       console.log(flag);\n//     }, 1000);\n//   };\n// useEffect(() => {\n//     document.title = t(props.title);\n//     if (props.userDevices && props.userDevices.length) {\n//       props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n//     }\n//   }, [props.title]);\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{columns:1,className:\"tablet-view-grid\"},/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",onClick:function onClick(){setHidden(!hidden);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})),/*#__PURE__*/React.createElement(Grid.Row,{className:\"test-row\"},/*#__PURE__*/React.createElement(Grid.Column,{width:16,className:\"px-0\"},/*#__PURE__*/React.createElement(Sidebar.Pushable,{as:Segment},/*#__PURE__*/React.createElement(Sidebar,{as:Grid,animation:\"overlay\",icon:\"labeled\",inverted:true// onHide={() => setVisible(false)}\n,vertical:true,visible:hidden,width:\"very wide\",direction:\"right\"},/*#__PURE__*/React.createElement(Grid.Column,{className:\"rightcontainer\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Profile,{className:\"Profile\"}),/*#__PURE__*/React.createElement(CropSideSection,null),/*#__PURE__*/React.createElement(MainButton,Object.assign({className:\"MainButton\"},props),t(\"ADD_ACTIVITY\"))))),/*#__PURE__*/React.createElement(Sidebar.Pusher,{dimmed:hidden},/*#__PURE__*/React.createElement(Grid,{columns:2,className:\"pusher-grid\"},/*#__PURE__*/React.createElement(Grid.Row,{className:\"ml-1\"},/*#__PURE__*/React.createElement(Grid.Column,{width:1},/*#__PURE__*/React.createElement(Navbar,{active:\"cropManagement\",defaultsensor:props.sensors&&props.sensors[0]?props.sensors[0].deviceId:undefined})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"loading\"},/*#__PURE__*/React.createElement(Grid.Column,{width:15},/*#__PURE__*/React.createElement(\"div\",{className:\"midcontainer\"},/*#__PURE__*/React.createElement(SearchBar,props),/*#__PURE__*/React.createElement(CropContainer,props))))))))))));};export default TabletViewCropPage;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-cropmanage.js"],"names":["React","Suspense","useState","useEffect","Navbar","SearchBar","CropContainer","Grid","Sidebar","Segment","Container","Button","Icon","CropSideSection","MainButton","Profile","useTranslation","TabletViewCropPage","props","hidden","setHidden","t","sensors","deviceId","undefined"],"mappings":"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","sourcesContent":["import React, {Suspense, useState, useEffect} from \"react\"\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport CropContainer from \"../CropManagement/cropcontainer\";\nimport \"./tablet-view.scss\"\nimport { Grid, Sidebar, Segment, Container, Button, Icon} from \"semantic-ui-react\";\nimport CropSideSection from \"../../sections/CropSideSection/cropsidesection\";\nimport MainButton from \"../MainButton/MainButton\";\nimport Profile from \"../Profile/Profile\";\nimport { useTranslation } from \"react-i18next\";\n\n\n\n\n\n\nconst TabletViewCropPage = (props) =>\n{\n    \n    const [hidden , setHidden] = useState(false)\n    const { t } = useTranslation(\"common\");\n    // const [flag, setFlag] = useState(true);\n    // const changeFlag = () => {\n    //     setFlag(false);\n    //     setTimeout(() => {\n    //       console.log(flag);\n    //     }, 1000);\n    //   };\n    // useEffect(() => {\n    //     document.title = t(props.title);\n    //     if (props.userDevices && props.userDevices.length) {\n    //       props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n    //     }\n    //   }, [props.title]);\n    \n    \n    return(\n        <div>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                <Button className=\"tablet-view-button\" onClick={()=>{setHidden(!hidden)}}>\n                    <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                </Button>\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"px-0\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                            >\n                                <Grid.Column className=\"rightcontainer\">\n                                    <Container>\n                                        <Profile className=\"Profile\" />\n                                        <CropSideSection />\n                                        <MainButton className=\"MainButton\" {...props}>{t(\"ADD_ACTIVITY\")}</MainButton>\n                                    </Container>\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden}>\n                                <Grid columns={2} className=\"pusher-grid\">\n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar active=\"cropManagement\" \n                                                defaultsensor={\n                                                    props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                                <div className=\"midcontainer\">\n                                                    <SearchBar {...props} />\n                                                    <CropContainer {...props}/>\n                                                </div>\n                                            </Grid.Column>\n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n                \n                \n\n            </Grid>\n\n        </div>\n        \n    )\n}\n\n\nexport default TabletViewCropPage;"]},"metadata":{},"sourceType":"module"}