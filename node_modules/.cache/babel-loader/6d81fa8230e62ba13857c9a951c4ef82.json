{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Suspense,useEffect}from\"react\";import\"./tablet-view.scss\";import{Button,Icon,Grid,Sidebar,Segment,Container}from'semantic-ui-react';import{useTranslation}from\"react-i18next\";import Profile from\"../Profile/Profile\";import MainButton from\"../MainButton/MainButton\";import DashSideSection from\"../../sections/DashSideSection/dashsidesection\";import DashMidGrids from\"../DashMidGrids/dashmidgrids\";import SearchBar from\"../SearchBar/SearchBar\";import Navbar from\"../Navbar/navbar\";import PublicData from\"../PublicData/PublicData\";var TabletView=function TabletView(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hidden=_useState2[0],setHidden=_useState2[1];var _useTranslation=useTranslation(\"common\"),t=_useTranslation.t;// const [flag, setFlag] = useState(true);\n// const changeFlag = () => {\n//     setFlag(false);\n//     setTimeout(() => {\n//       console.log(flag);\n//     }, 1000);\n//   };\n// useEffect(() => {\n//     document.title = t(props.title);\n//     if (props.userDevices && props.userDevices.length) {\n//       props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n//     }\n//   }, [props.title]);\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{columns:1,className:\"tablet-view-grid\"},!hidden?/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",style:{zIndex:1},onClick:function onClick(){setHidden(true);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})):/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",style:{zIndex:0},onClick:function onClick(){setHidden(true);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})),/*#__PURE__*/React.createElement(Grid.Row,{className:\"test-row\"},/*#__PURE__*/React.createElement(Grid.Column,{width:16,className:\"p-0 tablet-view-container\"},/*#__PURE__*/React.createElement(Sidebar.Pushable,{as:Segment},/*#__PURE__*/React.createElement(Sidebar,{as:Grid,animation:\"overlay\",icon:\"labeled\",inverted:true// onHide={() => setVisible(false)}\n,vertical:true,visible:hidden,width:\"very wide\",direction:\"right\"},/*#__PURE__*/React.createElement(Grid.Column,{className:\"rightcontainer\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Profile,{className:\"Profile\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DashSideSection,null)),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PublicData,Object.assign({},props,{latlng:props.latlng,className:\"weather-det-dashboard\"})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MainButton,Object.assign({className:\"MainButton\"},props),t(\"ADD_ACTIVITY\"))))),/*#__PURE__*/React.createElement(Sidebar.Pusher,{dimmed:hidden,onClick:function onClick(){return setHidden(false);}},/*#__PURE__*/React.createElement(Grid,{columns:2,className:\"pusher-grid\"},/*#__PURE__*/React.createElement(Grid.Row,{className:\"ml-1\"},/*#__PURE__*/React.createElement(Grid.Column,{width:1},/*#__PURE__*/React.createElement(Navbar,{active:\"dashboard\",defaultsensor:props.sensors&&props.sensors[0]?props.sensors[0].deviceId:undefined})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"loading\"},/*#__PURE__*/React.createElement(Grid.Column,{width:15},/*#__PURE__*/React.createElement(\"div\",{className:\"midcontainer\"},/*#__PURE__*/React.createElement(SearchBar,props),/*#__PURE__*/React.createElement(DashMidGrids,Object.assign({},props,{minWidth:768,maxWidth:1024})))))))))))));};export default TabletView;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view.js"],"names":["React","useState","Suspense","useEffect","Button","Icon","Grid","Sidebar","Segment","Container","useTranslation","Profile","MainButton","DashSideSection","DashMidGrids","SearchBar","Navbar","PublicData","TabletView","props","hidden","setHidden","t","zIndex","latlng","sensors","deviceId","undefined"],"mappings":"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","sourcesContent":["import React, {useState, Suspense, useEffect} from \"react\"\nimport \"./tablet-view.scss\"\nimport { Button, Icon, Grid, Sidebar, Segment, Container } from 'semantic-ui-react'\nimport { useTranslation } from \"react-i18next\";\nimport Profile from \"../Profile/Profile\";\nimport MainButton from \"../MainButton/MainButton\";\nimport DashSideSection from \"../../sections/DashSideSection/dashsidesection\";\nimport DashMidGrids from \"../DashMidGrids/dashmidgrids\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Navbar from \"../Navbar/navbar\";\nimport PublicData from \"../PublicData/PublicData\";\n\n\nconst TabletView = (props) =>\n{\n    const [hidden , setHidden] = useState(false)\n    const { t } = useTranslation(\"common\");\n    // const [flag, setFlag] = useState(true);\n    // const changeFlag = () => {\n    //     setFlag(false);\n    //     setTimeout(() => {\n    //       console.log(flag);\n    //     }, 1000);\n    //   };\n    // useEffect(() => {\n    //     document.title = t(props.title);\n    //     if (props.userDevices && props.userDevices.length) {\n    //       props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n    //     }\n    //   }, [props.title]);\n\n\n    return(\n\n        <div>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                {\n                    !hidden ? \n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 1}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                    :\n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 0}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                }\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"p-0 tablet-view-container\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                                \n                            >\n                                \n                                <Grid.Column className=\"rightcontainer\">\n                                    {/* <Container> */}\n                                    <div>\n                                        <Profile className=\"Profile\" />\n                                    </div>\n                                    <div>\n                                        <DashSideSection />\n                                    </div>\n                                    <Container>\n                                    <div>\n                                        <PublicData {...props} latlng={props.latlng} className = \"weather-det-dashboard\"/>\n                                    </div>\n                                    </Container>\n                                    <div>\n                                        <MainButton className=\"MainButton\" {...props}>{t(\"ADD_ACTIVITY\")}</MainButton>\n                                    </div>\n                                    {/* </Container> */}\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden} onClick={()=>setHidden(false)}>\n                                <Grid columns={2} className=\"pusher-grid\" >                \n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar active=\"dashboard\" \n                                                defaultsensor={\n                                                    props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                            <div className=\"midcontainer\" >\n                                                <SearchBar {...props} />\n                                                <DashMidGrids {...props} minWidth = {768} maxWidth = {1024}/>\n                                            </div>\n                                            </Grid.Column>    \n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n                \n                \n\n            </Grid>\n\n        </div>\n        \n    )\n}\n\n\nexport default TabletView"]},"metadata":{},"sourceType":"module"}