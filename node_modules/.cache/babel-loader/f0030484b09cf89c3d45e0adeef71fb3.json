{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/ChartCard/ChartCard.js\";\nimport React from \"react\";\nimport { Grid, Segment, Responsive } from \"semantic-ui-react\";\nimport { ComposedChart, AreaChart, Area, LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport \"./ChartCard.scss\";\nimport Stroke from \"ol/style/Stroke\";\nexport default function ChartCard({\n  card,\n  data\n}) {\n  console.log(card.info);\n  return card ? /*#__PURE__*/React.createElement(Segment, {\n    raised: true,\n    className: \"right-segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"spaceBetween\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, card ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \" pl-3 gray chartInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"green\",\n    style: {\n      fontSize: \"17px\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, card.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"size-standard-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Low \", card.name), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"size-s1-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, \"Apply limestone\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"size-standard-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, \"High \", card.name), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"size-s1-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Apply sulphur or gypsum\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"size-standard-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Normal \", card.name), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"size-s1-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Maintain\"))) : \"\", data.length && card ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 768,\n    maxWidth: 1023.98,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: 250,\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComposedChart, {\n    width: 300,\n    data: data,\n    margin: {\n      top: 50,\n      right: 30,\n      left: -10,\n      bottom: 0\n    },\n    className: \"line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"plotstyle\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: \"#1CB973\",\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: \"#1CB973\",\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"day\",\n    type: \"category\",\n    className: \"x-axis\",\n    tickLine: true,\n    minTickGap: 9,\n    tickMargin: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: \"#1CB973\",\n    strokeWidth: 4,\n    fillOpacity: 1,\n    fill: \"url(#plotstyle)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 1024,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: 400,\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComposedChart, {\n    width: 300,\n    data: data,\n    margin: {\n      top: 10,\n      right: 30,\n      left: -10,\n      bottom: 0\n    },\n    className: \"line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"plotstyle\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: \"#1CB973\",\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: \"#1CB973\",\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"day\",\n    type: \"category\",\n    className: \"x-axis\",\n    tickLine: true,\n    minTickGap: 9,\n    tickMargin: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: \"#1CB973\",\n    strokeWidth: 4,\n    fillOpacity: 1,\n    fill: \"url(#plotstyle)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \" auto  \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"No data found \"))) : \"\";\n}","map":{"version":3,"sources":["/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/ChartCard/ChartCard.js"],"names":["React","Grid","Segment","Responsive","ComposedChart","AreaChart","Area","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Stroke","ChartCard","card","data","console","log","info","fontSize","fontWeight","name","length","top","right","left","bottom","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Segment, Responsive } from \"semantic-ui-react\";\nimport { ComposedChart,  AreaChart, Area, LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport \"./ChartCard.scss\";\nimport Stroke from \"ol/style/Stroke\";\n\nexport default function ChartCard({ card, data }) {\n  console.log(card.info)\n  return card ? (\n    <Segment raised className=\"right-segment\">\n      <Grid.Row\n        className=\"spaceBetween\"\n      >\n        {/* <Grid.Column width={6}> */}\n        {card ? (\n          <div className=\" pl-3 gray chartInfo\" >\n            <h6 className=\"green\" style={{fontSize : \"17px\" , fontWeight : \"bold\"}}>{card.name} </h6>\n            <div className=\"\">\n              <h6 className=\"size-standard-chart\">Low {card.name}</h6>\n              {/* <h6 className=\"size-s1-chart\">{card.info && card.info.L} </h6> */}\n              <h6 className=\"size-s1-chart\">Apply limestone</h6>\n            </div>\n            <div className=\"pt-3\">\n              <h6 className=\"size-standard-chart\">High {card.name}</h6>\n              {/* <h6 className=\"size-s1-chart\">{card.info && card.info.H} </h6> */}\n              <h6 className=\"size-s1-chart\">Apply sulphur or gypsum</h6>\n\n            </div>\n            <div className=\"pt-3\">\n              <h6 className=\"size-standard-chart\">Normal {card.name}</h6>\n              <h6 className=\"size-s1-chart\">Maintain</h6>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      \n        {data.length && card ? (\n          <>\n          <Responsive minWidth = {768} maxWidth = {1023.98}>\n            <ResponsiveContainer width={250} height={200}>\n              <ComposedChart\n                width={300}\n                \n                data={data}\n                margin={{ top: 50, right: 30, left: -10, bottom: 0 }}\n                className=\"line-chart\"\n              >\n                <defs>\n                <linearGradient id=\"plotstyle\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"#1CB973\" stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor=\"#1CB973\" stopOpacity={0}/>\n                </linearGradient>\n                </defs>\n                <XAxis dataKey=\"day\" type=\"category\" className=\"x-axis\" tickLine={true} minTickGap={9} tickMargin={7}/>\n                <YAxis className=\"y-axis\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"value\" stroke=\"#1CB973\" strokeWidth={4} fillOpacity={1} fill=\"url(#plotstyle)\" />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Responsive>\n          <Responsive minWidth = {1024}>\n            <ResponsiveContainer width={400} height={200}>\n              <ComposedChart\n                width={300}\n                \n                data={data}\n                margin={{ top: 10, right: 30, left: -10, bottom: 0 }}\n                className=\"line-chart\"\n              >\n                <defs>\n                <linearGradient id=\"plotstyle\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"#1CB973\" stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor=\"#1CB973\" stopOpacity={0}/>\n                </linearGradient>\n                \n                </defs>\n                <XAxis dataKey=\"day\" type=\"category\" className=\"x-axis\" tickLine={true} minTickGap={9} tickMargin={7}/>\n                <YAxis className=\"y-axis\" />\n                \n                <Tooltip />\n                \n              \n\n                <Area type=\"monotone\" dataKey=\"value\" stroke=\"#1CB973\" strokeWidth={4} fillOpacity={1} fill=\"url(#plotstyle)\" />\n              </ComposedChart>\n\n\n            </ResponsiveContainer>\n          </Responsive>\n          </>\n        ) : (\n          <p style={{ margin: \" auto  \" }}>No data found </p>\n        )}\n        \n      </Grid.Row>\n    </Segment>\n  ) : (\n    \"\"\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}