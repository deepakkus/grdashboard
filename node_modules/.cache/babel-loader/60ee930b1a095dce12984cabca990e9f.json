{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/GisAnalysis.js\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Gis_Analysis from \"../GisAnalysis/GisAnalysis\";\nimport Profile from \"../Profile/Profile\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport PublicData from \"../PublicData/PublicData\";\n\nconst GisAnalysis = props => {\n  // const [flag,setFlag] = useState(true)\n  const {\n    t\n  } = useTranslation();\n\n  const getLatLong = () => {\n    const lat = props.userFarms ? props.userFarms[0].location[0][0] : 0;\n    const lon = props.userFarms ? props.userFarms[0].location[0][1] : 0; // console.log(\"Lattitude is \"+lat+\"--Longitude is \"+lon);\n\n    return {\n      lat,\n      lon\n    };\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n  }, [props.title]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 1366,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    defaultsensor: props.sensors && props.sensors[0] ? props.sensors[0].deviceId : undefined,\n    active: \"gisAnalysis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Gis_Analysis, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    className: \"rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(PublicData, Object.assign({}, props, {\n    latlng: getLatLong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(Responsive, {\n    minWidth: 768,\n    maxWidth: 1365,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GisAnalysis;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/GisAnalysis.js"],"names":["React","Suspense","useEffect","useState","Container","Grid","Responsive","Navbar","SearchBar","Gis_Analysis","Profile","MainButton","useTranslation","PublicData","GisAnalysis","props","t","getLatLong","lat","userFarms","location","lon","document","title","sensors","deviceId","undefined"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Gis_Analysis from \"../GisAnalysis/GisAnalysis\";\nimport Profile from \"../Profile/Profile\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport PublicData from \"../PublicData/PublicData\";\n\nconst GisAnalysis = (props) => {\n  // const [flag,setFlag] = useState(true)\n  const { t } = useTranslation();\n\n  const getLatLong = () => {\n    const lat = props.userFarms ? props.userFarms[0].location[0][0] : 0;\n    const lon = props.userFarms ? props.userFarms[0].location[0][1] : 0;\n    // console.log(\"Lattitude is \"+lat+\"--Longitude is \"+lon);\n    return { lat, lon };\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n  }, [props.title]);\n\n  return (\n    <>\n      <Responsive minWidth={1366}>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column width={1}>\n              {/* <Container className=\"leftcontainer\"> */}\n                <Navbar\n                  defaultsensor={\n                    props.sensors && props.sensors[0]\n                      ? props.sensors[0].deviceId\n                      : undefined\n                  }\n                  active=\"gisAnalysis\"\n                />\n              {/* </Container> */}\n            </Grid.Column>\n          \n            <Suspense fallback=\"loading\">\n              <Grid.Column width={11}>\n                <div className=\"midcontainer\">\n                  <SearchBar {...props} />\n\n                  <Gis_Analysis\n                    {...props}\n                    // getUserFarm = {props.getUserFarm}\n                    // match={props.match}\n                  />\n                </div>\n              </Grid.Column>\n              <Grid.Column width={4} className=\"rightcontainer\">\n                {/* <Container> */}\n                  <Profile className=\"Profile\" />\n                  <PublicData {...props} latlng={getLatLong} />\n                  {/* <MainButton className=\"gis\" {...props}>\n                    {t(\"ADD_ACTIVITY\")}\n                  </MainButton> */}\n                {/* </Container> */}\n              </Grid.Column>\n            </Suspense>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n      <Responsive minWidth={768} maxWidth={1365}>\n\n      </Responsive>\n    </>\n  );\n};\n\nexport default GisAnalysis;\n"]},"metadata":{},"sourceType":"module"}