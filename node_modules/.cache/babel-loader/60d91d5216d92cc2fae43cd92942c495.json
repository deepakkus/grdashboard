{"ast":null,"code":"import _regeneratorRuntime from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{GET_SENSORS_DATA,GET_SENSORS_DATA_ERROR}from\"./types\";// import prepareWeatherData from \"../../utils/prepareWeatherData\";\n// Get weatherData for dashboard\nexport var getSensorsData=function getSensorsData(ids){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"https://api.sensegrass.com/devices/records\",{ids:ids});case 3:res=_context.sent;dispatch({type:GET_SENSORS_DATA,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:GET_SENSORS_DATA_ERROR,payload:_context.t0.response// payload: { msg: err.response.statusText, status: err.response.status },\n});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/actions/sensors.js"],"names":["axios","GET_SENSORS_DATA","GET_SENSORS_DATA_ERROR","getSensorsData","ids","dispatch","post","res","type","payload","data","response"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,gBAAT,CAA2BC,sBAA3B,KAAyD,SAAzD,CAEA;AAEA;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,iGAAS,iBAAOC,QAAP,gKAEjBL,CAAAA,KAAK,CAACM,IAAN,CAAW,4CAAX,CAAyD,CACzEF,GAAG,CAAEA,GADoE,CAAzD,CAFiB,QAE7BG,GAF6B,eAKnCF,QAAQ,CAAC,CACPG,IAAI,CAAEP,gBADC,CAEPQ,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CALmC,+EAUnCL,QAAQ,CAAC,CACPG,IAAI,CAAEN,sBADC,CAEPO,OAAO,CAAE,YAAIE,QACb;AAHO,CAAD,CAAR,CAVmC,oEAAT,gEAAvB","sourcesContent":["import axios from \"axios\";\n\nimport { GET_SENSORS_DATA, GET_SENSORS_DATA_ERROR } from \"./types\";\n\n// import prepareWeatherData from \"../../utils/prepareWeatherData\";\n\n// Get weatherData for dashboard\nexport const getSensorsData = (ids) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"https://api.sensegrass.com/devices/records\", {\n      ids: ids,\n    });\n    dispatch({\n      type: GET_SENSORS_DATA,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_SENSORS_DATA_ERROR,\n      payload: err.response,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}