{"ast":null,"code":"import { connect } from \"react-redux\";\nimport CropManagement from \"../components/Page/CropManagement\";\nimport { editCropCycle, addCropCycle } from \"../actions/cropcycles\";\nimport { addActivity } from \"../actions/activities\";\nimport { getSensorsData } from \"../actions/sensors\";\n\nconst mapStateToProps = state => {\n  return {\n    title: \"crop-management-title\",\n    // key of translation, not the translated text\n    userId: state.user.userId,\n    token: state.user.token,\n    userFarms: state.farms.userFarms,\n    cultivationtypes: state.lookup.cultivationtypes,\n    croptypes: state.lookup.croptypes,\n    seedtypes: state.lookup.seedtypes,\n    activitytypes: state.lookup.activities,\n    userActivities: state.activities.userActivities,\n    //cropcycles: state.cropCycles.userCropCycles,\n    currentcropcycles: state.cropCycles.userCurrentCropCycles,\n    pastcropcycles: state.cropCycles.userPastCropCycles,\n    devices: state.devices,\n    sensors: state.sensors.sensormeasures\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editCropCycle,\n  addCropCycle,\n  addActivity,\n  getSensorsData\n})(CropManagement);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/containers/CropManagement.js"],"names":["connect","CropManagement","editCropCycle","addCropCycle","addActivity","getSensorsData","mapStateToProps","state","title","userId","user","token","userFarms","farms","cultivationtypes","lookup","croptypes","seedtypes","activitytypes","activities","userActivities","currentcropcycles","cropCycles","userCurrentCropCycles","pastcropcycles","userPastCropCycles","devices","sensors","sensormeasures"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,uBAA5C;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAE,uBADF;AAC2B;AAChCC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD,MAFd;AAGLE,IAAAA,KAAK,EAAEJ,KAAK,CAACG,IAAN,CAAWC,KAHb;AAILC,IAAAA,SAAS,EAAEL,KAAK,CAACM,KAAN,CAAYD,SAJlB;AAKLE,IAAAA,gBAAgB,EAAEP,KAAK,CAACQ,MAAN,CAAaD,gBAL1B;AAMLE,IAAAA,SAAS,EAAET,KAAK,CAACQ,MAAN,CAAaC,SANnB;AAOLC,IAAAA,SAAS,EAAEV,KAAK,CAACQ,MAAN,CAAaE,SAPnB;AAQLC,IAAAA,aAAa,EAAEX,KAAK,CAACQ,MAAN,CAAaI,UARvB;AASLC,IAAAA,cAAc,EAAEb,KAAK,CAACY,UAAN,CAAiBC,cAT5B;AAUL;AACAC,IAAAA,iBAAiB,EAAEd,KAAK,CAACe,UAAN,CAAiBC,qBAX/B;AAYLC,IAAAA,cAAc,EAAEjB,KAAK,CAACe,UAAN,CAAiBG,kBAZ5B;AAaLC,IAAAA,OAAO,EAAEnB,KAAK,CAACmB,OAbV;AAcLC,IAAAA,OAAO,EAAEpB,KAAK,CAACoB,OAAN,CAAcC;AAdlB,GAAP;AAgBD,CAjBD;;AAmBA,eAAe5B,OAAO,CAACM,eAAD,EAAkB;AACtCJ,EAAAA,aADsC;AAEtCC,EAAAA,YAFsC;AAGtCC,EAAAA,WAHsC;AAItCC,EAAAA;AAJsC,CAAlB,CAAP,CAKZJ,cALY,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport CropManagement from \"../components/Page/CropManagement\";\nimport { editCropCycle, addCropCycle } from \"../actions/cropcycles\";\nimport { addActivity } from \"../actions/activities\";\nimport { getSensorsData } from \"../actions/sensors\";\n\nconst mapStateToProps = (state) => {\n  return {\n    title: \"crop-management-title\", // key of translation, not the translated text\n    userId: state.user.userId,\n    token: state.user.token,\n    userFarms: state.farms.userFarms,\n    cultivationtypes: state.lookup.cultivationtypes,\n    croptypes: state.lookup.croptypes,\n    seedtypes: state.lookup.seedtypes,\n    activitytypes: state.lookup.activities,\n    userActivities: state.activities.userActivities,\n    //cropcycles: state.cropCycles.userCropCycles,\n    currentcropcycles: state.cropCycles.userCurrentCropCycles,\n    pastcropcycles: state.cropCycles.userPastCropCycles,\n    devices: state.devices,\n    sensors: state.sensors.sensormeasures,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editCropCycle,\n  addCropCycle,\n  addActivity,\n  getSensorsData,\n})(CropManagement);\n"]},"metadata":{},"sourceType":"module"}