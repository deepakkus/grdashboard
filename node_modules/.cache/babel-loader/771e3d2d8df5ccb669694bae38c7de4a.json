{"ast":null,"code":"import{connect}from\"react-redux\";import Sensors from\"../components/Page/Sensors\";import{getSensorsData}from\"../actions/sensors\";import{getIdealRange}from\"../actions/ranges\";import{addActivity}from\"../actions/activities\";var mapStateToProps=function mapStateToProps(state){return{sensors:state.sensors.sensormeasures,title:\"sensors\",devices:state.devices,currentcropcycles:state.cropCycles.userCurrentCropCycles,lookup:state.lookup,userFarms:state.farms.userFarms,ranges:state.ranges.ranges};};export default connect(mapStateToProps,{getSensorsData:getSensorsData,getIdealRange:getIdealRange,addActivity:addActivity})(Sensors);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/containers/Sensors.js"],"names":["connect","Sensors","getSensorsData","getIdealRange","addActivity","mapStateToProps","state","sensors","sensormeasures","title","devices","currentcropcycles","cropCycles","userCurrentCropCycles","lookup","userFarms","farms","ranges"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,aAAT,KAA8B,mBAA9B,CACA,OAASC,WAAT,KAA4B,uBAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,OAAO,CAAED,KAAK,CAACC,OAAN,CAAcC,cADlB,CAELC,KAAK,CAAE,SAFF,CAGLC,OAAO,CAAEJ,KAAK,CAACI,OAHV,CAILC,iBAAiB,CAAEL,KAAK,CAACM,UAAN,CAAiBC,qBAJ/B,CAKLC,MAAM,CAAER,KAAK,CAACQ,MALT,CAMLC,SAAS,CAAET,KAAK,CAACU,KAAN,CAAYD,SANlB,CAOLE,MAAM,CAAEX,KAAK,CAACW,MAAN,CAAaA,MAPhB,CAAP,CASD,CAVD,CAYA,cAAejB,CAAAA,OAAO,CAACK,eAAD,CAAkB,CACtCH,cAAc,CAAdA,cADsC,CAEtCC,aAAa,CAAbA,aAFsC,CAGtCC,WAAW,CAAXA,WAHsC,CAAlB,CAAP,CAIZH,OAJY,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Sensors from \"../components/Page/Sensors\";\nimport { getSensorsData } from \"../actions/sensors\";\nimport { getIdealRange } from \"../actions/ranges\";\nimport { addActivity } from \"../actions/activities\";\n\nconst mapStateToProps = (state) => {\n  return {\n    sensors: state.sensors.sensormeasures,\n    title: \"sensors\",\n    devices: state.devices,\n    currentcropcycles: state.cropCycles.userCurrentCropCycles,\n    lookup: state.lookup,\n    userFarms: state.farms.userFarms,\n    ranges: state.ranges.ranges,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSensorsData,\n  getIdealRange,\n  addActivity,\n})(Sensors);\n"]},"metadata":{},"sourceType":"module"}