{"ast":null,"code":"import _defineProperty from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";import{connect}from\"react-redux\";import Moment from\"react-moment\";import{withTranslation}from\"react-i18next\";import{Container,Grid,Dropdown}from\"semantic-ui-react\";import iconLocation from\"../../images/icons/iconlocation.svg\";import iconDate from\"../../images/icons/icontoday.svg\";import iconedit from\"../../images/icons/iconedit.svg\";import\"./sensorupper.scss\";var SensorUpper=/*#__PURE__*/function(_Component){_inherits(SensorUpper,_Component);var _super=_createSuper(SensorUpper);function SensorUpper(){var _this;_classCallCheck(this,SensorUpper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:[{name:\"Sensor1\",hw:\"ver v1.2019\",sw:\"ver v2.4\",upTime:\"188 hrs\",lastModified:\"Today At 13h00\"},{humidity:\"81\",airTemp:\"35\",solarRad:\"75\"}]};return _this;}_createClass(SensorUpper,[{key:\"render\",value:function render(){var _this$props=this.props,userDevices=_this$props.userDevices,sensor=_this$props.sensor;console.log({sensor:sensor});var deviceId=this.props.match&&this.props.match.params?this.props.match.params.id:\"\";// translation react-i18next\nvar t=this.props.t;// TODO use the real data, use deviceName from userDevices\nvar versionStyle={color:\"gray\",fontSize:10,margin:0};var upTimeStyle={color:\"gray\",fontSize:14};var paramStyle={fontSize:20,color:\"#535353\",fontWeight:\"bold\"};var paramsValStyle={fontSize:35,color:\"#0E7B3C\",fontWeight:\"600\",opacity:0.7,margin:0};var paramTitleStyle={fontSize:14,color:\"#535353\",fontWeight:\"bold\",marginBottom:\"12px\"};var children=[];userDevices.map(function(userDevice){children.push({key:userDevice.deviceId,text:userDevice.deviceName,value:userDevice.deviceId,content:/*#__PURE__*/React.createElement(Link,{className:\"link\",to:\"/sensors/\"+userDevice.deviceId},userDevice.deviceName)});});return/*#__PURE__*/React.createElement(Container,{fluid:true,className:\"sensorUpper m-0 p-0\"},/*#__PURE__*/React.createElement(Grid,{columns:2,divided:true},/*#__PURE__*/React.createElement(Grid.Column,_defineProperty({className:\"leftpart\",width:8},\"className\",\"pl-5\"),/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Row,{columns:2},/*#__PURE__*/React.createElement(Grid.Column,{width:9,style:{margin:0,padding:0}},/*#__PURE__*/React.createElement(Container,{textAlign:\"left\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"bold\",{style:{fontSize:24}},!userDevices.length?/*#__PURE__*/React.createElement(\"p\",{style:{fontSize:15}},\"no sensors found in dropdown please select device from upove dropdown\"):/*#__PURE__*/React.createElement(Dropdown,{inline:true,header:\"sensors\",options:children,defaultValue:deviceId// defaultValue={defaultOption}\n}))))),/*#__PURE__*/React.createElement(Grid.Column,{width:7,style:{margin:0,padding:0}},/*#__PURE__*/React.createElement(Container,{textAlign:\"right\"},/*#__PURE__*/React.createElement(\"p\",{style:upTimeStyle},t(\"common:uptime\"),\":\",\" \",sensor?sensor.device.uptime:\"_\")))),/*#__PURE__*/React.createElement(\"p\",{style:versionStyle,className:\"p-0\"},\"HW: \",sensor?sensor.device.hw_version:\"_\",\" \"),\"\\xA0\",/*#__PURE__*/React.createElement(\"p\",{style:versionStyle,className:\"pl-2\"},\"SW: \",sensor?sensor.device.software_version:\"_\",\" \"),/*#__PURE__*/React.createElement(Grid.Row,{columns:3},/*#__PURE__*/React.createElement(Grid.Column,{width:9},/*#__PURE__*/React.createElement(\"img\",{src:iconDate,alt:\"date\"}),/*#__PURE__*/React.createElement(\"p\",{style:versionStyle},/*#__PURE__*/React.createElement(\"bold\",null,t(\"common:todayLastUpdate\"),/*#__PURE__*/React.createElement(Moment,{format:\" HH:mm\",unix:true},sensor?sensor.timestamp:\"_\")))),/*#__PURE__*/React.createElement(Grid.Column,{width:4,className:\"p-0\"},/*#__PURE__*/React.createElement(\"img\",{src:iconLocation,alt:\"location\"}),/*#__PURE__*/React.createElement(\"p\",{style:versionStyle},\" \",/*#__PURE__*/React.createElement(\"bold\",null,\" \",t(\"common:location\")),\" \")),/*#__PURE__*/React.createElement(Grid.Column,{width:3},/*#__PURE__*/React.createElement(\"img\",{src:iconedit,alt:\"edit\"}),/*#__PURE__*/React.createElement(\"p\",{style:versionStyle},\" \",/*#__PURE__*/React.createElement(\"bold\",null,t(\"common:edit\")),\" \"))))),/*#__PURE__*/React.createElement(Grid.Column,{className:\"rightpart\",width:8},/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Row,{className:\" p-2\"},/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(Container,{textAlign:\"left\"},/*#__PURE__*/React.createElement(\"p\",{style:paramStyle},/*#__PURE__*/React.createElement(\"bold\",null,t(\"common:SurfaceParameters\")))))),/*#__PURE__*/React.createElement(Grid.Row,{columns:3,centered:true,className:\"m-2 p-0\",style:{display:\"flex\",justifyContent:\"space-between\"}},/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(\"p\",{style:paramsValStyle},sensor?Math.round(sensor.level0.humidity):\"0\",\"%\"),/*#__PURE__*/React.createElement(\"p\",{style:paramTitleStyle},/*#__PURE__*/React.createElement(\"bold\",{className:\"f-xs\"},\" \",t(\"common:Humidity\"),\" \"))),/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(\"p\",{style:paramsValStyle},sensor?Math.round(sensor.level0.airTemp):\"0\",\"\\u2103\"),/*#__PURE__*/React.createElement(\"p\",{style:paramTitleStyle},/*#__PURE__*/React.createElement(\"bold\",{className:\"f-xs\"},\" \",t(\"common:AirTemp\"),\" \"))),/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(\"p\",{style:paramsValStyle},sensor?Math.round(sensor.level0.solarRad/100):\"0\",\"lux\"),/*#__PURE__*/React.createElement(\"p\",{style:paramTitleStyle},/*#__PURE__*/React.createElement(\"bold\",{className:\"f-xs\"},t(\"common:SolarRadiation\"))))))),!sensor&&/*#__PURE__*/React.createElement(Grid.Column,{width:8},/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},\"No data found for this sensor , please change selected sensor from sensor dropdown\"))));}}]);return SensorUpper;}(Component);var mapStateToProps=function mapStateToProps(state){return{sensors:state.devices.userDevices};};var SensorUpperComponent=withTranslation()(SensorUpper);export default connect(mapStateToProps)(SensorUpperComponent);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/SensorUpper/sensorupper.js"],"names":["React","Component","Link","connect","Moment","withTranslation","Container","Grid","Dropdown","SensorUpper","state","data","name","hw","sw","upTime","lastModified","humidity","airTemp","solarRad","props","userDevices","sensor","console","log","deviceId","match","params","id","t","versionStyle","color","fontSize","margin","upTimeStyle","paramStyle","fontWeight","paramsValStyle","opacity","paramTitleStyle","marginBottom","children","map","userDevice","push","key","text","deviceName","value","content","padding","length","device","uptime","hw_version","software_version","iconDate","timestamp","iconLocation","iconedit","display","justifyContent","Math","round","level0","mapStateToProps","sensors","devices","SensorUpperComponent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\n\nimport { withTranslation } from \"react-i18next\";\n\nimport { Container, Grid, Dropdown } from \"semantic-ui-react\";\nimport iconLocation from \"../../images/icons/iconlocation.svg\";\nimport iconDate from \"../../images/icons/icontoday.svg\";\nimport iconedit from \"../../images/icons/iconedit.svg\";\nimport \"./sensorupper.scss\";\n\nclass SensorUpper extends Component {\n  state = {\n    data: [\n      {\n        name: \"Sensor1\",\n        hw: \"ver v1.2019\",\n        sw: \"ver v2.4\",\n        upTime: \"188 hrs\",\n        lastModified: \"Today At 13h00\",\n      },\n      { humidity: \"81\", airTemp: \"35\", solarRad: \"75\" },\n    ],\n  };\n\n  render() {\n    const { userDevices, sensor } = this.props;\n    console.log({ sensor });\n    const deviceId =\n      this.props.match && this.props.match.params\n        ? this.props.match.params.id\n        : \"\";\n    // translation react-i18next\n    const { t } = this.props;\n    // TODO use the real data, use deviceName from userDevices\n\n    const versionStyle = {\n      color: \"gray\",\n      fontSize: 10,\n      margin: 0,\n    };\n    const upTimeStyle = {\n      color: \"gray\",\n      fontSize: 14,\n    };\n    const paramStyle = {\n      fontSize: 20,\n      color: \"#535353\",\n      fontWeight: \"bold\"\n    };\n    const paramsValStyle = {\n      fontSize: 35,\n      color: \"#0E7B3C\",\n      fontWeight: \"600\",\n      opacity: 0.7,\n      margin: 0\n    };\n    const paramTitleStyle = {\n      fontSize: 14,\n      color: \"#535353\",\n      fontWeight: \"bold\",\n      marginBottom: \"12px\"\n    };\n\n    const children = [];\n    userDevices.map((userDevice) => {\n      children.push({\n        key: userDevice.deviceId,\n        text: userDevice.deviceName,\n        value: userDevice.deviceId,\n        content: (\n          <Link className=\"link\" to={\"/sensors/\" + userDevice.deviceId}>\n            {userDevice.deviceName}\n          </Link>\n        ),\n      });\n    });\n    return (\n      <Container fluid className=\"sensorUpper m-0 p-0\">\n        <Grid columns={2} divided>\n          <Grid.Column className=\"leftpart\" width={8} className=\"pl-5\">\n            <Grid>\n              <Grid.Row columns={2}>\n                <Grid.Column width={9} style={{ margin: 0, padding: 0 }}>\n                  <Container textAlign=\"left\">\n                    <p>\n                      <bold style={{ fontSize: 24 }}>\n                        {!userDevices.length ? (\n                          <p style={{ fontSize: 15 }}>\n                            no sensors found in dropdown please select device\n                            from upove dropdown\n                            {/* sensor */}\n                          </p>\n                        ) : (\n                          <Dropdown\n                            inline\n                            header=\"sensors\"\n                            options={children}\n                            defaultValue={deviceId}\n                            // defaultValue={defaultOption}\n                          />\n                        )}\n                      </bold>\n                    </p>\n                  </Container>\n                </Grid.Column>\n\n                <Grid.Column width={7} style={{ margin: 0, padding: 0 }}>\n                  <Container textAlign=\"right\">\n                    <p style={upTimeStyle}>\n                      {t(\"common:uptime\")}:{\" \"}\n                      {sensor ? sensor.device.uptime : \"_\"}\n                    </p>\n                  </Container>\n                </Grid.Column>\n              </Grid.Row>\n              <p style={versionStyle} className=\"p-0\">\n                HW: {sensor ? sensor.device.hw_version : \"_\"}{\" \"}\n              </p>\n              &nbsp;\n              <p style={versionStyle} className=\"pl-2\">\n                SW: {sensor ? sensor.device.software_version : \"_\"}{\" \"}\n              </p>\n              <Grid.Row columns={3}>\n                <Grid.Column width={9}>\n                  <img src={iconDate} alt=\"date\" />\n                  <p style={versionStyle}>\n                    <bold>\n                      {t(\"common:todayLastUpdate\")}\n                      {/* parse=\"YYYY-MM-DD HH:mm\" */}\n                      <Moment format=\" HH:mm\" unix>\n                        {sensor ? sensor.timestamp : \"_\"}\n                      </Moment>\n                    </bold>\n                  </p>\n                </Grid.Column>\n                <Grid.Column width={4} className=\"p-0\">\n                  <img src={iconLocation} alt=\"location\" />\n                  <p style={versionStyle}>\n                    {\" \"}\n                    <bold> {t(\"common:location\")}</bold>{\" \"}\n                  </p>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <img src={iconedit} alt=\"edit\" />\n                  <p style={versionStyle}>\n                    {\" \"}\n                    <bold>{t(\"common:edit\")}</bold>{\" \"}\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Grid.Column>\n          <Grid.Column className=\"rightpart\" width={8}>\n            <Grid>\n              <Grid.Row className=\" p-2\">\n                <Grid.Column>\n                  <Container textAlign=\"left\">\n                    <p style={paramStyle}>\n                      <bold>{t(\"common:SurfaceParameters\")}</bold>\n                    </p>\n                  </Container>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row\n                columns={3}\n                centered\n                className=\"m-2 p-0\"\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\n              >\n                <Grid.Column width={4}>\n                  <p style={paramsValStyle}>\n                    {sensor ? Math.round(sensor.level0.humidity) : \"0\"}\n                    &#37;\n                  </p>\n                  <p style={paramTitleStyle}>\n                    <bold className=\"f-xs\"> {t(\"common:Humidity\")} </bold>\n                  </p>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                  <p style={paramsValStyle}>\n                    {sensor ? Math.round(sensor.level0.airTemp) : \"0\"}\n                    &#8451;\n                  </p>\n                  <p style={paramTitleStyle}>\n                    <bold className=\"f-xs\"> {t(\"common:AirTemp\")} </bold>\n                  </p>\n                </Grid.Column>\n                <Grid.Column>\n                  {/* To fix Units */}\n                  <p style={paramsValStyle}>\n                    {sensor ? Math.round(sensor.level0.solarRad / 100) : \"0\"}\n                    lux\n                  </p>\n                  <p style={paramTitleStyle}>\n                    <bold className=\"f-xs\">{t(\"common:SolarRadiation\")}</bold>\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Grid.Column>\n          {!sensor && (\n            <Grid.Column width={8}>\n              <p style={{ color: \"red\" }}>\n                No data found for this sensor , please change selected sensor\n                from sensor dropdown\n              </p>\n            </Grid.Column>\n          )}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensors: state.devices.userDevices,\n  };\n};\nconst SensorUpperComponent = withTranslation()(SensorUpper);\n\nexport default connect(mapStateToProps)(SensorUpperComponent);\n"]},"metadata":{},"sourceType":"module"}