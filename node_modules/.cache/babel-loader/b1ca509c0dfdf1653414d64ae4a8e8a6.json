{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-gisanalysis.js\";\nimport React, { Suspense, useState } from \"react\";\nimport { Container, Grid, Responsive, Sidebar, Segment, Button, Icon } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Gis_Analysis from \"../GisAnalysis/GisAnalysis\";\nimport Profile from \"../Profile/Profile\";\nimport PublicData from \"../PublicData/PublicData\";\nimport MainButton from \"../MainButton/MainButton\";\n\nconst TabletGisAnalysis = props => {\n  const [hidden, setHidden] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    className: \"tablet-view-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, !hidden ? /*#__PURE__*/React.createElement(Button, {\n    className: \"tablet-view-button\",\n    style: {\n      zIndex: 1\n    },\n    onClick: () => {\n      setHidden(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"sidebar\",\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    className: \"tablet-view-button\",\n    style: {\n      zIndex: 0\n    },\n    onClick: () => {\n      setHidden(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"sidebar\",\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"test-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    className: \"px-0 tablet-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n    as: Segment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    as: Grid,\n    animation: \"overlay\",\n    icon: \"labeled\",\n    inverted: true // onHide={() => setVisible(false)}\n    ,\n    vertical: true,\n    visible: hidden,\n    width: \"very wide\",\n    direction: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"gis-rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(PublicData, Object.assign({}, props, {\n    latlng: props.latlng,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MainButton, Object.assign({\n    className: \"MainButton\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }\n  }), \"ADD ACTIVITY\"))))), /*#__PURE__*/React.createElement(Sidebar.Pusher, {\n    dimmed: hidden,\n    onClick: () => setHidden(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    className: \"pusher-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    defaultsensor: props.sensors && props.sensors[0] ? props.sensors[0].deviceId : undefined,\n    active: \"gisAnalysis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Gis_Analysis, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 53\n    }\n  })))))))))))));\n};\n\nexport default TabletGisAnalysis;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-gisanalysis.js"],"names":["React","Suspense","useState","Container","Grid","Responsive","Sidebar","Segment","Button","Icon","Navbar","SearchBar","Gis_Analysis","Profile","PublicData","MainButton","TabletGisAnalysis","props","hidden","setHidden","zIndex","latlng","sensors","deviceId","undefined"],"mappings":"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","sourcesContent":["import React, { Suspense, useState } from \"react\";\nimport { Container, Grid, Responsive, Sidebar, Segment, Button, Icon} from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Gis_Analysis from \"../GisAnalysis/GisAnalysis\";\nimport Profile from \"../Profile/Profile\";\nimport PublicData from \"../PublicData/PublicData\";\nimport MainButton from \"../MainButton/MainButton\";\n\n\n\nconst TabletGisAnalysis = (props) =>\n{\n\n    const [hidden, setHidden] = useState(false)\n\n    return(\n        <>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                {\n                    !hidden ? \n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 1}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                    :\n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 0}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                }\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"px-0 tablet-view-container\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                            >\n                                <Grid.Column className=\"gis-rightcontainer\">\n                                    <Container>\n                                        <div>\n                                            <Profile className=\"Profile\" />\n                                        </div>\n                                        <div>\n                                            <PublicData {...props} latlng={props.latlng}/>\n                                        </div>\n                                        <div>\n                                            <MainButton className=\"MainButton\" {...props}>\n                                                ADD ACTIVITY\n                                            </MainButton>\n                                        </div>\n                                        \n                                    </Container>\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden} onClick={()=>setHidden(false)}>\n                                <Grid columns={2} className=\"pusher-grid\">\n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar\n                                                defaultsensor={\n                                                    props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                                active=\"gisAnalysis\"\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                                <div className=\"midcontainer\">\n                                                    <SearchBar {...props} />\n                                                    <Gis_Analysis\n                                                        {...props}\n                                                    />\n                                                </div>\n                                            </Grid.Column>\n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n                \n                \n\n            </Grid>\n        </>\n\n    )\n\n}\n\n\nexport default TabletGisAnalysis"]},"metadata":{},"sourceType":"module"}