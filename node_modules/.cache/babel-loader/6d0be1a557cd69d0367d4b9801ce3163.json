{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/Settings.js\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Profile from \"../Profile/Profile\";\nimport PublicData from \"../PublicData/PublicData\";\nimport SettingsMidGrids from \"../SettingsMidGrids/settingsmidgrids\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Settings = props => {\n  const [flag, setFlag] = useState(true);\n  const {\n    t\n  } = useTranslation(\"common\");\n\n  const changeFlag = () => {\n    setFlag(false);\n    setTimeout(() => {\n      console.log(flag);\n    }, 1000);\n  };\n\n  const getLatLong = () => {\n    const lat = props.userFarms ? props.userFarms[0].location[0][0] : 0;\n    const lon = props.userFarms ? props.userFarms[0].location[0][1] : 0;\n    return {\n      lat,\n      lon\n    };\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n\n    if (props.userDevices && props.userDevices.length) {\n      props.getSensorsData(props.userDevices.map(d => d.deviceId).join());\n    }\n  }, [props.title]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Responsive, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    active: \"settings\",\n    defaultsensor: props.sensors && props.sensors[0] ? props.sensors[0].deviceId : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(SettingsMidGrids, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    className: \"rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(PublicData, Object.assign({}, props, {\n    latlng: getLatLong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }))))))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/Settings.js"],"names":["React","Suspense","useEffect","useState","Grid","Responsive","Navbar","SearchBar","Profile","PublicData","SettingsMidGrids","useTranslation","Settings","props","flag","setFlag","t","changeFlag","setTimeout","console","log","getLatLong","lat","userFarms","location","lon","document","title","userDevices","length","getSensorsData","map","d","deviceId","join","sensors","undefined"],"mappings":"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","sourcesContent":["import React, {Suspense, useEffect, useState} from \"react\";\nimport {Grid, Responsive} from \"semantic-ui-react\"\nimport Navbar from \"../Navbar/navbar\"\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Profile from \"../Profile/Profile\"\nimport PublicData from \"../PublicData/PublicData\";\nimport SettingsMidGrids from \"../SettingsMidGrids/settingsmidgrids\"\nimport {useTranslation} from \"react-i18next\"\n\n\nconst Settings = (props) =>\n{\n    const [flag, setFlag] = useState(true)\n    const {t} = useTranslation(\"common\")\n\n    const changeFlag = () =>\n    {\n        setFlag(false)\n        setTimeout(() => {\n            console.log(flag)\n        }, 1000);\n    }\n\n    const getLatLong = () =>\n    {\n        const lat = props.userFarms ? props.userFarms[0].location[0][0] : 0;\n        const lon = props.userFarms ? props.userFarms[0].location[0][1] : 0;\n        return { lat, lon}\n    }\n\n    useEffect(() => {\n        document.title = t(props.title);\n        if (props.userDevices && props.userDevices.length) {\n          props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n        }\n      }, [props.title]);\n\n\n    return(\n        <div>\n            <Responsive>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Navbar \n                            \n                                active = \"settings\"\n                                defaultsensor = \n                                {\n                                    props.sensors && props.sensors[0]\n                                        ? props.sensors[0].deviceId\n                                        : undefined\n                                }\n                            \n                            />\n                        </Grid.Column>\n                        <Suspense fallback=\"loading\">\n                            <Grid.Column width={11}>\n                                <div className=\"midcontainer\">\n                                    <SearchBar {...props}/>\n                                    <SettingsMidGrids {...props}/>\n                                </div>\n                            </Grid.Column>\n\n                            <Grid.Column width={4} className=\"rightcontainer\">\n                                <Profile className=\"Profile\"/>\n                                <PublicData {...props} latlng = {getLatLong}/>\n                            </Grid.Column>\n\n                        </Suspense>\n                    </Grid.Row>\n                </Grid>\n            </Responsive>\n        </div>\n    )\n}\n\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}