{"ast":null,"code":"import { ADD_ACTIVITY, ADD_ACTIVITY_ERROR, SET_ACTIVITIES, GET_ACTIVITIES_ERROR } from \"../actions/types\";\nconst initialState = {\n  userActivities: [],\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_ACTIVITY:\n      return { ...state,\n        userActivities: state.userActivities.find(f => f._id === payload._id) ? state.userActivities.map(f => f._id === payload._id ? payload : f) : [...state.userActivities, payload],\n        loading: false\n      };\n\n    case ADD_ACTIVITY_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case SET_ACTIVITIES:\n      return { ...state,\n        userActivities: payload[0]\n      };\n\n    case GET_ACTIVITIES_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/reducers/activities.js"],"names":["ADD_ACTIVITY","ADD_ACTIVITY_ERROR","SET_ACTIVITIES","GET_ACTIVITIES_ERROR","initialState","userActivities","error","state","action","type","payload","find","f","_id","map","loading"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,EAA2CC,cAA3C,EAA2DC,oBAA3D,QAAuF,kBAAvF;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,EADG;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKT,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,cAAc,EAAEE,KAAK,CAACF,cAAN,CAAqBM,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAnD,IACZN,KAAK,CAACF,cAAN,CAAqBS,GAArB,CAA0BF,CAAD,IAAQA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAlB,GAAwBH,OAAxB,GAAkCE,CAAnE,CADY,GAEZ,CAAC,GAAGL,KAAK,CAACF,cAAV,EAA0BK,OAA1B,CAJC;AAKLK,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKd,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,cAAc,EAAEK,OAAO,CAAC,CAAD;AAFlB,OAAP;;AAIF,SAAKP,oBAAL;AACE,aAAM,EACJ,GAAGI,KADC;AAEJD,QAAAA,KAAK,EAAEI,OAFH;AAGJK,QAAAA,OAAO,EAAE;AAHL,OAAN;;AAKF;AACE,aAAOR,KAAP;AA3BJ;AA6BD","sourcesContent":["import { ADD_ACTIVITY, ADD_ACTIVITY_ERROR, SET_ACTIVITIES, GET_ACTIVITIES_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  userActivities: [],\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_ACTIVITY:\n      return {\n        ...state,\n        userActivities: state.userActivities.find((f) => f._id === payload._id)\n          ? state.userActivities.map((f) => (f._id === payload._id ? payload : f))\n          : [...state.userActivities, payload],\n        loading: false,\n      };\n    case ADD_ACTIVITY_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case SET_ACTIVITIES:\n      return {\n        ...state,\n        userActivities: payload[0],\n      };\n    case GET_ACTIVITIES_ERROR:\n      return{\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}