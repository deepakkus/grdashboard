{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Suspense,useState}from\"react\";import Navbar from\"../Navbar/navbar\";import SearchBar from\"../SearchBar/SearchBar\";import{Grid,Sidebar,Segment,Container,Button,Icon}from\"semantic-ui-react\";import Profile from\"../Profile/Profile\";import MapCard from\"../MapCard/MapCard\";import AddSensorLink from\"../AddSensorLink/AddSensorLink\";import PublicData from\"../PublicData/PublicData\";import SensorTable from\"../../components/SensorTable/sensortable\";import MainButton from\"../MainButton/MainButton\";import{useTranslation}from\"react-i18next\";import\"./tablet-view-sensors.scss\";var TabletViewSensorsPage=function TabletViewSensorsPage(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hidden=_useState2[0],setHidden=_useState2[1];var _useTranslation=useTranslation(\"common\"),t=_useTranslation.t;var selected=function selected(id){var sensors=props.sensors;var sensor=sensors.filter(function(sensor){return sensor.deviceId===id;});if(sensor[0]){return sensor[0];}else{return;}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{columns:1,className:\"tablet-view-grid\"},!hidden?/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",style:{zIndex:1},onClick:function onClick(){setHidden(true);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})):/*#__PURE__*/React.createElement(Button,{className:\"tablet-view-button\",style:{zIndex:0},onClick:function onClick(){setHidden(true);}},/*#__PURE__*/React.createElement(Icon,{name:\"sidebar\",className:\"mx-auto\"})),/*#__PURE__*/React.createElement(Grid.Row,{className:\"test-row\"},/*#__PURE__*/React.createElement(Grid.Column,{width:16,className:\"px-0 tablet-view-container\"},/*#__PURE__*/React.createElement(Sidebar.Pushable,{as:Segment},/*#__PURE__*/React.createElement(Sidebar,{as:Grid,animation:\"overlay\",icon:\"labeled\",inverted:true// onHide={() => setVisible(false)}\n,vertical:true,visible:hidden,width:\"very wide\",direction:\"right\"},/*#__PURE__*/React.createElement(Grid.Column,{className:\"sensors-rightcontainer\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Profile,{className:\"Profile\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MapCard,props)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddSensorLink,props)),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PublicData,Object.assign({},props,{latlng:props.latlng,className:\"weather-det-sensors\"})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MainButton,Object.assign({className:\"MainButton\"},props),t(\"ADD_ACTIVITY\"))))),/*#__PURE__*/React.createElement(Sidebar.Pusher,{dimmed:hidden,onClick:function onClick(){return setHidden(false);}},/*#__PURE__*/React.createElement(Grid,{columns:2,className:\"pusher-grid\"},/*#__PURE__*/React.createElement(Grid.Row,{className:\"ml-1\"},/*#__PURE__*/React.createElement(Grid.Column,{width:1},/*#__PURE__*/React.createElement(Navbar,{active:\"sensors\",defaultsensor:props.sensors&&props.sensors[0]?props.sensors[0].deviceId:undefined})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"loading\"},/*#__PURE__*/React.createElement(Grid.Column,{width:15},/*#__PURE__*/React.createElement(\"div\",{className:\"midcontainer\"},/*#__PURE__*/React.createElement(SearchBar,props),/*#__PURE__*/React.createElement(Grid,{columns:1},/*#__PURE__*/React.createElement(Grid.Column,{className:\"p-0 m-0\",tablet:16},/*#__PURE__*/React.createElement(SensorTable,Object.assign({ranges:props.ranges,sensor:selected(props.match.params.id),firstSensor:props.sensors[0]&&props.sensors[0],match:props.match},props)))))))))))))));};export default TabletViewSensorsPage;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-sensors.js"],"names":["React","Suspense","useState","Navbar","SearchBar","Grid","Sidebar","Segment","Container","Button","Icon","Profile","MapCard","AddSensorLink","PublicData","SensorTable","MainButton","useTranslation","TabletViewSensorsPage","props","hidden","setHidden","t","selected","id","sensors","sensor","filter","deviceId","zIndex","latlng","undefined","ranges","match","params"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,QAAzB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,OAAxB,CAAiCC,SAAjC,CAA4CC,MAA5C,CAAoDC,IAApD,KAA+D,mBAA/D,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0CAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CAEA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAO,4BAAP,CAGA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAC9B,eACiCjB,QAAQ,CAAC,KAAD,CADzC,wCACWkB,MADX,eACoBC,SADpB,mCAEkBJ,cAAc,CAAC,QAAD,CAFhC,CAEYK,CAFZ,iBAEYA,CAFZ,CAII,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,EAAD,CAAQ,CACrB,GAAIC,CAAAA,OAAO,CAAGN,KAAK,CAACM,OAApB,CACA,GAAMC,CAAAA,MAAM,CAAGD,OAAO,CAACE,MAAR,CAAe,SAACD,MAAD,CAAY,CACtC,MAAOA,CAAAA,MAAM,CAACE,QAAP,GAAoBJ,EAA3B,CACH,CAFc,CAAf,CAGA,GAAIE,MAAM,CAAC,CAAD,CAAV,CAAe,CACX,MAAOA,CAAAA,MAAM,CAAC,CAAD,CAAb,CACH,CAFD,IAEO,CACH,OACH,CACJ,CAVD,CAYA,mBACI,qDACI,oBAAC,IAAD,EAAM,OAAO,CAAE,CAAf,CAAkB,SAAS,CAAC,kBAA5B,EAEQ,CAACN,MAAD,cAEI,oBAAC,MAAD,EAAQ,SAAS,CAAC,oBAAlB,CAAuC,KAAK,CAAI,CAACS,MAAM,CAAE,CAAT,CAAhD,CAA6D,OAAO,CAAE,kBAAI,CAACR,SAAS,CAAC,IAAD,CAAT,CAAgB,CAA3F,eACI,oBAAC,IAAD,EAAM,IAAI,CAAC,SAAX,CAAqB,SAAS,CAAC,SAA/B,EADJ,CAFJ,cAQI,oBAAC,MAAD,EAAQ,SAAS,CAAC,oBAAlB,CAAuC,KAAK,CAAI,CAACQ,MAAM,CAAE,CAAT,CAAhD,CAA6D,OAAO,CAAE,kBAAI,CAACR,SAAS,CAAC,IAAD,CAAT,CAAgB,CAA3F,eACI,oBAAC,IAAD,EAAM,IAAI,CAAC,SAAX,CAAqB,SAAS,CAAC,SAA/B,EADJ,CAVZ,cAeI,oBAAC,IAAD,CAAM,GAAN,EAAU,SAAS,CAAC,UAApB,eACI,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,CAAwB,SAAS,CAAC,4BAAlC,eACI,oBAAC,OAAD,CAAS,QAAT,EAAkB,EAAE,CAAEd,OAAtB,eACI,oBAAC,OAAD,EACI,EAAE,CAAEF,IADR,CAEI,SAAS,CAAC,SAFd,CAGI,IAAI,CAAC,SAHT,CAII,QAAQ,KACR;AALJ,CAMI,QAAQ,KANZ,CAOI,OAAO,CAAEe,MAPb,CAQI,KAAK,CAAC,WARV,CASI,SAAS,CAAC,OATd,eAWI,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,wBAAvB,eAEI,4CACI,oBAAC,OAAD,EAAS,SAAS,CAAC,SAAnB,EADJ,CAFJ,cAKI,4CACI,oBAAC,OAAD,CAAaD,KAAb,CADJ,CALJ,cAQI,4CACI,oBAAC,aAAD,CAAmBA,KAAnB,CADJ,CARJ,cAWI,oBAAC,SAAD,mBACA,4CACI,oBAAC,UAAD,kBAAgBA,KAAhB,EAAuB,MAAM,CAAEA,KAAK,CAACW,MAArC,CAA6C,SAAS,CAAG,qBAAzD,GADJ,CADA,CAXJ,cAgBI,4CACI,oBAAC,UAAD,gBAAY,SAAS,CAAC,YAAtB,EAAuCX,KAAvC,EACKG,CAAC,CAAC,cAAD,CADN,CADJ,CAhBJ,CAXJ,CADJ,cAoCI,oBAAC,OAAD,CAAS,MAAT,EAAgB,MAAM,CAAEF,MAAxB,CAAgC,OAAO,CAAE,yBAAIC,CAAAA,SAAS,CAAC,KAAD,CAAb,EAAzC,eACI,oBAAC,IAAD,EAAM,OAAO,CAAE,CAAf,CAAkB,SAAS,CAAC,aAA5B,eACI,oBAAC,IAAD,CAAM,GAAN,EAAU,SAAS,CAAC,MAApB,eACI,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,eACI,oBAAC,MAAD,EACI,MAAM,CAAC,SADX,CAEI,aAAa,CACbF,KAAK,CAACM,OAAN,EAAiBN,KAAK,CAACM,OAAN,CAAc,CAAd,CAAjB,CACMN,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiBG,QADvB,CAEMG,SALV,EADJ,CADJ,cAWI,oBAAC,QAAD,EAAU,QAAQ,CAAC,SAAnB,eACI,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,oBAAC,SAAD,CAAeZ,KAAf,CADJ,cAGQ,oBAAC,IAAD,EAAM,OAAO,CAAI,CAAjB,eACA,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,SAAvB,CAAiC,MAAM,CAAI,EAA3C,eACI,oBAAC,WAAD,gBACA,MAAM,CAAEA,KAAK,CAACa,MADd,CAEA,MAAM,CAAET,QAAQ,CAACJ,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBV,EAApB,CAFhB,CAGA,WAAW,CAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,GAAoBN,KAAK,CAACM,OAAN,CAAc,CAAd,CAHjC,CAIA,KAAK,CAAEN,KAAK,CAACc,KAJb,EAKId,KALJ,EADJ,CADA,CAHR,CADJ,CADJ,CAXJ,CADJ,CADJ,CApCJ,CADJ,CADJ,CAfJ,CADJ,CADJ,CAiGH,CAlHD,CAqHA,cAAeD,CAAAA,qBAAf","sourcesContent":["import React, {Suspense, useState} from \"react\"\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Grid, Sidebar, Segment, Container, Button, Icon} from \"semantic-ui-react\";\nimport Profile from \"../Profile/Profile\";\nimport MapCard from \"../MapCard/MapCard\";\nimport AddSensorLink from \"../AddSensorLink/AddSensorLink\";\nimport PublicData from \"../PublicData/PublicData\";\nimport SensorTable from \"../../components/SensorTable/sensortable\";\nimport MainButton from \"../MainButton/MainButton\";\n\nimport { useTranslation } from \"react-i18next\";\nimport \"./tablet-view-sensors.scss\"\n\n\nconst TabletViewSensorsPage = (props) =>\n{\n    const [hidden , setHidden] = useState(false)\n    const { t } = useTranslation(\"common\");\n\n    const selected = (id) => {\n        let sensors = props.sensors;\n        const sensor = sensors.filter((sensor) => {\n            return sensor.deviceId === id;\n        });\n        if (sensor[0]) {\n            return sensor[0];\n        } else {\n            return;\n        }\n    };\n\n    return (\n        <>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                {\n                    !hidden ? \n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 1}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                    :\n                    (\n                        <Button className=\"tablet-view-button\" style = {{zIndex: 0}} onClick={()=>{setHidden(true)}}>\n                            <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                        </Button>\n                    )\n                }\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"px-0 tablet-view-container\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                            >\n                                <Grid.Column className=\"sensors-rightcontainer\">\n                                    {/* <Container> */}\n                                    <div>\n                                        <Profile className=\"Profile\" />\n                                    </div>\n                                    <div>\n                                        <MapCard {...props} />\n                                    </div>\n                                    <div>\n                                        <AddSensorLink {...props} />\n                                    </div>\n                                    <Container>\n                                    <div>\n                                        <PublicData {...props} latlng={props.latlng} className = \"weather-det-sensors\"/>\n                                    </div>\n                                    </Container>\n                                    <div>\n                                        <MainButton className=\"MainButton\" {...props}>\n                                            {t(\"ADD_ACTIVITY\")}\n                                        </MainButton> \n                                    </div>  \n                                    {/* </Container> */}\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden} onClick={()=>setHidden(false)}>\n                                <Grid columns={2} className=\"pusher-grid\">\n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar\n                                                active=\"sensors\"\n                                                defaultsensor={\n                                                props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                                <div className=\"midcontainer\">\n                                                    <SearchBar {...props} />\n                                                    {/* <Segment raised className=\"SenseMidSection\"> */}\n                                                        <Grid columns = {1}>\n                                                        <Grid.Column className=\"p-0 m-0\" tablet = {16}>\n                                                            <SensorTable\n                                                            ranges={props.ranges}\n                                                            sensor={selected(props.match.params.id)}\n                                                            firstSensor={props.sensors[0] && props.sensors[0]}\n                                                            match={props.match}\n                                                            {...props}\n                                                            />\n                                                        </Grid.Column>\n                                                        </Grid>\n                                                    {/* </Segment> */}\n                                                </div>\n                                            </Grid.Column>\n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </>\n    )\n}\n\n\nexport default TabletViewSensorsPage\n\n\n"]},"metadata":{},"sourceType":"module"}