{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/Page/AddDevice/AddDevice.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./AddDevice.scss\";\nimport { Button, Form, Grid, Header } from \"semantic-ui-react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport addDeviceImg from \"../../../images/addDevice.png\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { useTranslation } from \"react-i18next\";\nimport TextField from \"@material-ui/core/TextField\"; // import Input from \"../common/Input\";\n\nimport Logo from \"../../common/Logo\";\nimport AlertBar from \"../../AlertBar/AlertBar\";\nimport { updateUserFarmDevice } from \"../../../services/farm\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#fff\",\n      main: \"#67bc46\",\n      dark: \"#000\"\n    },\n    secondary: {\n      main: \"#fff\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst AddDevice = props => {\n  const {\n    t\n  } = useTranslation(\"add-device\"); // console.log(props);\n\n  const {\n    saveDevice\n  } = props;\n  const [values, setValues] = useState({\n    deviceID: \"\",\n    validationMsg: false,\n    isOpen: false,\n    msg: \"\",\n    verticalInput: \"\",\n    horizontalInput: \"\",\n    severity: \"\",\n    errMsg: \"\"\n  });\n  console.log({\n    values\n  });\n  const emailLabel = React.createRef(); //  ^[0-9]+$    \n\n  const handleChange = (name, value) => {\n    //if(/^[0-9]+$|^$/.test(value)){\n    //  setValues({...values, validationMsg: false, [name]: value});\n    //}\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleBack = () => {\n    props.history.push(\"/\" + props.history.location.search);\n  };\n\n  let {\n    userDevices,\n    error\n  } = props.devices; // let errorMsg = error.data ? error.data.message : \"\";\n  // console.log({ errorMsg });\n\n  const handleNext = () => {\n    props.history.push(`/sensors/${values.deviceID ? values.deviceID : \"\"}` // `/sensors/${userDevices.length ? userDevices[0].deviceId : \"\"}`\n    );\n  };\n\n  const handleEmailFocus = e => emailLabel.current.innerText = t(\"place-holder\");\n\n  const handleEmailBlur = e => emailLabel.current.innerText = \"\";\n\n  const saveHandler = async () => {\n    const {\n      deviceID,\n      validationMsg\n    } = values; // TODO for now it is only soil sensor\n\n    const deviceType = props.devicetypes.find(d => d.name === \"Soil Sensor\");\n    const deviceTypeId = deviceType._id;\n    const deviceId = values.deviceID;\n    const userId = props.userId;\n    const deviceName = `${deviceType.name} ${userDevices.length + 1}`;\n    const device = {\n      deviceTypeId,\n      deviceId,\n      userId,\n      deviceName\n    };\n    let res = await saveDevice(device, props.token);\n    updateUserFarmDevice(userId);\n    console.log({\n      res\n    });\n\n    if (res == undefined && !res.data) {\n      setValues({ ...values,\n        validationMsg: true,\n        isOpen: true,\n        msg: t(\"network-error-msg\"),\n        severity: \"error\"\n      });\n      setTimeout(() => {\n        setValues({ ...values,\n          validationMsg: true,\n          isOpen: false,\n          msg: t(\"network-error-msg\"),\n          severity: \"error\"\n        });\n      }, 3001);\n    } else if (!res.data) {\n      setValues({ ...values,\n        validationMsg: false,\n        isOpen: true,\n        msg: t(\"success-msg\"),\n        severity: \"success\"\n      });\n      setTimeout(() => {\n        setValues({ ...values,\n          validationMsg: \"\",\n          isOpen: false,\n          msg: t(\"success-msg\"),\n          severity: \"success\"\n        });\n      }, 3001);\n    } else if (res.data.message === \"Device ID is already added\") {\n      setValues({ ...values,\n        validationMsg: true,\n        isOpen: true,\n        msg: t(\"error-msg-added-already\"),\n        severity: \"error\"\n      });\n      setTimeout(() => {\n        setValues({ ...values,\n          validationMsg: true,\n          isOpen: false,\n          msg: t(\"error-msg-added-already\"),\n          severity: \"error\"\n        });\n      }, 3001);\n    } else {\n      setValues({ ...values,\n        validationMsg: true,\n        isOpen: true,\n        msg: t(\"error-msg\"),\n        severity: \"error\"\n      });\n      setTimeout(() => {\n        setValues({ ...values,\n          validationMsg: true,\n          isOpen: false,\n          msg: t(\"error-msg\"),\n          severity: \"error\"\n        });\n      }, 3001);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"device-container addDeviceContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"left-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      marginTop: \"6rem\"\n    },\n    verticalAlign: \"middle\",\n    className: \"padit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 350\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h3\",\n    color: \"grey\",\n    textAlign: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, t(\"enter-sensor\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: addDeviceImg,\n    alt: \"addDevice\",\n    className: \"addDeviceImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"buttonInside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-flexible\",\n    label: t(\"device-id\"),\n    variant: \"outlined\",\n    onFocus: handleEmailFocus,\n    onBlur: handleEmailBlur,\n    fullWidth: true,\n    placeholder: \"14253614\",\n    name: \"deviceID\",\n    value: values.deviceID,\n    onChange: e => handleChange(e.target.name, e.target.value),\n    autoComplete: \"off\",\n    error: values.validationMsg,\n    helperText: values.validationMsg ? // t(\"plaese enter differnt device-id\")\n    t(\"validation-msg\") : \"Find Device ID on Box  or below QR code on your Device \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    ref: emailLabel,\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      marginTop: \"1rem  \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fluid: true,\n    size: \"large\",\n    className: \"white\",\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 23\n    }\n  }, t(\"back\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    fluid: true,\n    size: \"large\",\n    className: \"pr-3  pl-3\",\n    onClick: () => {\n      saveHandler();\n    },\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlinePlus, {\n    style: {\n      color: \"white\",\n      fontSize: \"1.rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), t(\"add-device\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fluid: true,\n    size: \"large\",\n    className: \"white\",\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 23\n    }\n  }, t(\"next\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AlertBar, {\n    isOpen: values.isOpen // isOpen={true}\n    ,\n    msg: values.msg,\n    verticalInput: \"top\",\n    horizontalInput: \"left\",\n    severity: values.severity // errorMsg={errorMsg}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(Grid, {\n    className: \"right-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imagesection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default AddDevice;","map":{"version":3,"sources":["/Users/deepakkumarsingh/Downloads/banao_lg/sensegrass/src/components/Page/AddDevice/AddDevice.js"],"names":["React","useState","useEffect","Button","Form","Grid","Header","MuiThemeProvider","createMuiTheme","addDeviceImg","AiOutlinePlus","useTranslation","TextField","Logo","AlertBar","updateUserFarmDevice","theme","palette","primary","light","main","dark","secondary","typography","useNextVariants","AddDevice","props","t","saveDevice","values","setValues","deviceID","validationMsg","isOpen","msg","verticalInput","horizontalInput","severity","errMsg","console","log","emailLabel","createRef","handleChange","name","value","handleBack","history","push","location","search","userDevices","error","devices","handleNext","handleEmailFocus","e","current","innerText","handleEmailBlur","saveHandler","deviceType","devicetypes","find","d","deviceTypeId","_id","deviceId","userId","deviceName","length","device","res","token","undefined","data","setTimeout","message","marginTop","maxWidth","target","display","justifyContent","width","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./AddDevice.scss\";\nimport { Button, Form, Grid, Header } from \"semantic-ui-react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport addDeviceImg from \"../../../images/addDevice.png\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { useTranslation } from \"react-i18next\";\nimport TextField from \"@material-ui/core/TextField\";\n// import Input from \"../common/Input\";\nimport Logo from \"../../common/Logo\";\nimport AlertBar from \"../../AlertBar/AlertBar\";\nimport { updateUserFarmDevice } from \"../../../services/farm\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#fff\",\n      main: \"#67bc46\",\n      dark: \"#000\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst AddDevice = (props) => {\n  const { t } = useTranslation(\"add-device\");\n  // console.log(props);\n  const { saveDevice } = props;\n  const [values, setValues] = useState({\n    deviceID: \"\",\n    validationMsg: false,\n    isOpen: false,\n    msg: \"\",\n    verticalInput: \"\",\n    horizontalInput: \"\",\n    severity: \"\",\n    errMsg: \"\",\n  });\n  console.log({ values });\n\n  const emailLabel = React.createRef();\n  //  ^[0-9]+$    \n  const handleChange = (name, value) => {\n    //if(/^[0-9]+$|^$/.test(value)){\n    //  setValues({...values, validationMsg: false, [name]: value});\n    //}\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleBack = () => {\n    props.history.push(\"/\" + props.history.location.search);\n  };\n\n  let { userDevices, error } = props.devices;\n  // let errorMsg = error.data ? error.data.message : \"\";\n\n  // console.log({ errorMsg });\n\n  const handleNext = () => {\n    props.history.push(\n      `/sensors/${values.deviceID ? values.deviceID : \"\"}`\n      // `/sensors/${userDevices.length ? userDevices[0].deviceId : \"\"}`\n    );\n  };\n\n  const handleEmailFocus = (e) =>\n    (emailLabel.current.innerText = t(\"place-holder\"));\n\n  const handleEmailBlur = (e) => (emailLabel.current.innerText = \"\");\n\n  const saveHandler = async () => {\n    const { deviceID, validationMsg } = values;\n\n    // TODO for now it is only soil sensor\n    const deviceType = props.devicetypes.find((d) => d.name === \"Soil Sensor\");\n    const deviceTypeId = deviceType._id;\n    const deviceId = values.deviceID;\n    const userId = props.userId;\n    const deviceName = `${deviceType.name} ${userDevices.length + 1}`;\n    const device = {\n      deviceTypeId,\n      deviceId,\n      userId,\n      deviceName,\n    };\n\n    let res = await saveDevice(device, props.token);\n    updateUserFarmDevice(userId);\n    console.log({ res });\n    if (res == undefined && !res.data) {\n      setValues({\n        ...values,\n        validationMsg: true,\n        isOpen: true,\n        msg: t(\"network-error-msg\"),\n        severity: \"error\",\n      });\n      setTimeout(() => {\n        setValues({\n          ...values,\n          validationMsg: true,\n          isOpen: false,\n          msg: t(\"network-error-msg\"),\n          severity: \"error\",\n        });\n      }, 3001);\n    } else if (!res.data) {\n      setValues({\n        ...values,\n        validationMsg: false,\n        isOpen: true,\n        msg: t(\"success-msg\"),\n        severity: \"success\",\n      });\n      setTimeout(() => {\n        setValues({\n          ...values,\n          validationMsg: \"\",\n          isOpen: false,\n          msg: t(\"success-msg\"),\n          severity: \"success\",\n        });\n      }, 3001);\n    } else if (res.data.message === \"Device ID is already added\") {\n      setValues({\n        ...values,\n        validationMsg: true,\n        isOpen: true,\n        msg: t(\"error-msg-added-already\"),\n        severity: \"error\",\n      });\n      setTimeout(() => {\n        setValues({\n          ...values,\n          validationMsg: true,\n          isOpen: false,\n          msg: t(\"error-msg-added-already\"),\n          severity: \"error\",\n        });\n      }, 3001);\n    } else {\n      setValues({\n        ...values,\n        validationMsg: true,\n        isOpen: true,\n        msg: t(\"error-msg\"),\n        severity: \"error\",\n      });\n      setTimeout(() => {\n        setValues({\n          ...values,\n          validationMsg: true,\n          isOpen: false,\n          msg: t(\"error-msg\"),\n          severity: \"error\",\n        });\n      }, 3001);\n    }\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"device-container addDeviceContainer\">\n        <Grid className=\"left-col\">\n          <Grid.Column>\n            <Logo />\n            <Grid\n              textAlign=\"center\"\n              style={{ marginTop: \"6rem\" }}\n              verticalAlign=\"middle\"\n              className=\"padit\"\n            >\n              <Grid.Column style={{ maxWidth: 350 }}>\n                <Header as=\"h3\" color=\"grey\" textAlign=\"left\">\n                  {t(\"enter-sensor\")}\n                </Header>\n                <img\n                  src={addDeviceImg}\n                  alt=\"addDevice\"\n                  className=\"addDeviceImg\"\n                />\n                <Form size=\"large\">\n                  <div class=\"buttonInside\">\n                    <TextField\n                      id=\"outlined-multiline-flexible\"\n                      label={t(\"device-id\")}\n                      variant=\"outlined\"\n                      onFocus={handleEmailFocus}\n                      onBlur={handleEmailBlur}\n                      fullWidth\n                      placeholder=\"14253614\"\n                      name=\"deviceID\"\n                      value={values.deviceID}\n                      onChange={(e) =>\n                        handleChange(e.target.name, e.target.value)\n                      }\n                      autoComplete=\"off\"\n                      error={values.validationMsg}\n                      helperText={\n                        values.validationMsg\n                          ? // t(\"plaese enter differnt device-id\")\n                            t(\"validation-msg\")\n                          : \"Find Device ID on Box  or below QR code on your Device \"\n                      }\n                    />\n                    <p ref={emailLabel} className=\"label\"></p>\n                  </div>\n                  <Grid.Row\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      width: \"100%\",\n                      marginTop: \"1rem  \",\n                    }}\n                  >\n                    <Grid.Column>\n                      <Button\n                        fluid\n                        size=\"large\"\n                        className=\"white\"\n                        onClick={handleBack}\n                      >\n                        {t(\"back\")}\n                      </Button>\n                    </Grid.Column>\n\n                    <Grid.Column>\n                      <Button\n                        color=\"green\"\n                        fluid\n                        size=\"large\"\n                        className=\"pr-3  pl-3\"\n                        onClick={() => {\n                          saveHandler();\n                        }}\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <AiOutlinePlus\n                          style={{\n                            color: \"white\",\n                            fontSize: \"1.rem\",\n                          }}\n                        />\n\n                        {t(\"add-device\")}\n                      </Button>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Button\n                        fluid\n                        size=\"large\"\n                        className=\"white\"\n                        onClick={handleNext}\n                      >\n                        {t(\"next\")}\n                      </Button>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <AlertBar\n                        isOpen={values.isOpen}\n                        // isOpen={true}\n                        msg={values.msg}\n                        verticalInput=\"top\"\n                        horizontalInput=\"left\"\n                        severity={values.severity}\n                        // errorMsg={errorMsg}\n                      />\n                    </Grid.Column>\n                  </Grid.Row>\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </Grid.Column>\n        </Grid>\n        <Grid className=\"right-col\">\n          <Grid.Column>\n            <div className=\"imagesection\"></div>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default AddDevice;\n"]},"metadata":{},"sourceType":"module"}