{"ast":null,"code":"var _jsxFileName = \"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-cropmanage.js\";\nimport React, { Suspense, useState, useEffect } from \"react\";\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport CropContainer from \"../CropManagement/cropcontainer\";\nimport \"./tablet-view.scss\";\nimport { Grid, Sidebar, Segment, Container, Button, Icon } from \"semantic-ui-react\";\nimport CropSideSection from \"../../sections/CropSideSection/cropsidesection\";\nimport MainButton from \"../MainButton/MainButton\";\nimport Profile from \"../Profile/Profile\";\nimport { useTranslation } from \"react-i18next\";\n\nconst TabletViewCropPage = props => {\n  const [hidden, setHidden] = useState(false);\n  const {\n    t\n  } = useTranslation(\"common\"); // const [flag, setFlag] = useState(true);\n  // const changeFlag = () => {\n  //     setFlag(false);\n  //     setTimeout(() => {\n  //       console.log(flag);\n  //     }, 1000);\n  //   };\n  // useEffect(() => {\n  //     document.title = t(props.title);\n  //     if (props.userDevices && props.userDevices.length) {\n  //       props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n  //     }\n  //   }, [props.title]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 1,\n    className: \"tablet-view-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"tablet-view-button\",\n    onClick: () => {\n      setHidden(!hidden);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"sidebar\",\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"test-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    className: \"px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n    as: Segment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    as: Grid,\n    animation: \"overlay\",\n    icon: \"labeled\",\n    inverted: true // onHide={() => setVisible(false)}\n    ,\n    vertical: true,\n    visible: hidden,\n    width: \"very wide\",\n    direction: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    className: \"rightcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    className: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(CropSideSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(MainButton, Object.assign({\n    className: \"MainButton\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }), t(\"ADD_ACTIVITY\"))))), /*#__PURE__*/React.createElement(Sidebar.Pusher, {\n    dimmed: hidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    className: \"pusher-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    active: \"cropManagement\",\n    defaultsensor: props.sensors && props.sensors[0] ? props.sensors[0].deviceId : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(CropContainer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 53\n    }\n  })))))))))))));\n};\n\nexport default TabletViewCropPage;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/tablet-view/tablet-view-cropmanage.js"],"names":["React","Suspense","useState","useEffect","Navbar","SearchBar","CropContainer","Grid","Sidebar","Segment","Container","Button","Icon","CropSideSection","MainButton","Profile","useTranslation","TabletViewCropPage","props","hidden","setHidden","t","sensors","deviceId","undefined"],"mappings":"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","sourcesContent":["import React, {Suspense, useState, useEffect} from \"react\"\nimport Navbar from \"../Navbar/navbar\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport CropContainer from \"../CropManagement/cropcontainer\";\nimport \"./tablet-view.scss\"\nimport { Grid, Sidebar, Segment, Container, Button, Icon} from \"semantic-ui-react\";\nimport CropSideSection from \"../../sections/CropSideSection/cropsidesection\";\nimport MainButton from \"../MainButton/MainButton\";\nimport Profile from \"../Profile/Profile\";\nimport { useTranslation } from \"react-i18next\";\n\n\n\n\n\n\nconst TabletViewCropPage = (props) =>\n{\n    \n    const [hidden , setHidden] = useState(false)\n    const { t } = useTranslation(\"common\");\n    // const [flag, setFlag] = useState(true);\n    // const changeFlag = () => {\n    //     setFlag(false);\n    //     setTimeout(() => {\n    //       console.log(flag);\n    //     }, 1000);\n    //   };\n    // useEffect(() => {\n    //     document.title = t(props.title);\n    //     if (props.userDevices && props.userDevices.length) {\n    //       props.getSensorsData(props.userDevices.map((d) => d.deviceId).join());\n    //     }\n    //   }, [props.title]);\n    \n    \n    return(\n        <div>\n            <Grid columns={1} className=\"tablet-view-grid\">\n                <Button className=\"tablet-view-button\" onClick={()=>{setHidden(!hidden)}}>\n                    <Icon name=\"sidebar\" className=\"mx-auto\"/>\n                </Button>\n                <Grid.Row className=\"test-row\">\n                    <Grid.Column width={16} className=\"px-0\">\n                        <Sidebar.Pushable as={Segment}>\n                            <Sidebar\n                                as={Grid}\n                                animation='overlay'\n                                icon='labeled'\n                                inverted\n                                // onHide={() => setVisible(false)}\n                                vertical\n                                visible={hidden}\n                                width=\"very wide\"\n                                direction=\"right\"\n                            >\n                                <Grid.Column className=\"rightcontainer\">\n                                    <Container>\n                                        <Profile className=\"Profile\" />\n                                        <CropSideSection />\n                                        <MainButton className=\"MainButton\" {...props}>{t(\"ADD_ACTIVITY\")}</MainButton>\n                                    </Container>\n                                </Grid.Column>\n                            </Sidebar>\n                            <Sidebar.Pusher dimmed={hidden}>\n                                <Grid columns={2} className=\"pusher-grid\">\n                                    <Grid.Row className=\"ml-1\">\n                                        <Grid.Column width={1}>\n                                            <Navbar active=\"cropManagement\" \n                                                defaultsensor={\n                                                    props.sensors && props.sensors[0]\n                                                    ? props.sensors[0].deviceId\n                                                    : undefined\n                                                }\n                                            />\n                                        </Grid.Column>\n                                        <Suspense fallback=\"loading\">\n                                            <Grid.Column width={15}>\n                                                <div className=\"midcontainer\">\n                                                    <SearchBar {...props} />\n                                                    <CropContainer {...props}/>\n                                                </div>\n                                            </Grid.Column>\n                                        </Suspense>\n                                    </Grid.Row>\n                                </Grid>\n                            </Sidebar.Pusher>\n                        </Sidebar.Pushable>\n                    </Grid.Column>\n                </Grid.Row>\n                \n                \n\n            </Grid>\n\n        </div>\n        \n    )\n}\n\n\nexport default TabletViewCropPage;"]},"metadata":{},"sourceType":"module"}