{"ast":null,"code":"import _slicedToArray from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Suspense,useEffect,useState}from\"react\";import{Container,Grid,Responsive}from\"semantic-ui-react\";import Navbar from\"../Navbar/navbar\";import Profile from\"../Profile/Profile\";import CropSideSection from\"../../sections/CropSideSection/cropsidesection\";import MainButton from\"../MainButton/MainButton\";import{useTranslation}from\"react-i18next\";import CropContainer from\"../CropManagement/cropcontainer\";import TimelineLabel from\"../TimelineLabel/TimelineLabel\";import SearchBar from\"../SearchBar/SearchBar\";import TabletViewCropPage from\"../tablet-view/tablet-view-cropmanage\";var CropManagement=function CropManagement(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),flag=_useState2[0],setFlag=_useState2[1];var _useTranslation=useTranslation(\"crop-management\"),t=_useTranslation.t;var changeFlag=function changeFlag(){setFlag(false);setTimeout(function(){console.log(flag);},1000);};useEffect(function(){document.title=t(props.title);if(props.devices.userDevices.length){props.getSensorsData(props.devices.userDevices.map(function(d){return d.deviceId;}).join());}},[props.title,props.devices]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Responsive,{minWidth:1366},/*#__PURE__*/React.createElement(Grid,{columns:3},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{width:1},/*#__PURE__*/React.createElement(Navbar,{active:\"cropManagement\",defaultsensor:props.sensors&&props.sensors[0]?props.sensors[0].deviceId:undefined})),/*#__PURE__*/React.createElement(Suspense,{fallback:\"loading\"},/*#__PURE__*/React.createElement(Grid.Column,{width:11},/*#__PURE__*/React.createElement(\"div\",{className:\"midcontainer\"},/*#__PURE__*/React.createElement(SearchBar,props),/*#__PURE__*/React.createElement(CropContainer,props))),/*#__PURE__*/React.createElement(Grid.Column,{width:4,className:\"rightcontainer crop-rightcontainer\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Profile,{className:\"Profile\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CropSideSection,props)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MainButton,Object.assign({},props,{className:\"MainButton\"}),t(\"ADD ACTIVITY\")))))))),/*#__PURE__*/React.createElement(Responsive,{minWidth:768,maxWidth:1365.98},/*#__PURE__*/React.createElement(TabletViewCropPage,props)));};export default CropManagement;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/Page/CropManagement.js"],"names":["React","Suspense","useEffect","useState","Container","Grid","Responsive","Navbar","Profile","CropSideSection","MainButton","useTranslation","CropContainer","TimelineLabel","SearchBar","TabletViewCropPage","CropManagement","props","flag","setFlag","t","changeFlag","setTimeout","console","log","document","title","devices","userDevices","length","getSensorsData","map","d","deviceId","join","sensors","undefined"],"mappings":"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","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\nimport { Container, Grid, Responsive } from \"semantic-ui-react\";\nimport Navbar from \"../Navbar/navbar\";\nimport Profile from \"../Profile/Profile\";\nimport CropSideSection from \"../../sections/CropSideSection/cropsidesection\";\nimport MainButton from \"../MainButton/MainButton\";\nimport { useTranslation } from \"react-i18next\";\nimport CropContainer from \"../CropManagement/cropcontainer\";\nimport TimelineLabel from \"../TimelineLabel/TimelineLabel\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport TabletViewCropPage from \"../tablet-view/tablet-view-cropmanage\"\nconst CropManagement = (props) => {\n  const [flag, setFlag] = useState(true);\n  const { t } = useTranslation(\"crop-management\");\n\n  const changeFlag = () => {\n    setFlag(false);\n    setTimeout(() => {\n      console.log(flag);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    document.title = t(props.title);\n    if (props.devices.userDevices.length) {\n      props.getSensorsData(\n        props.devices.userDevices.map((d) => d.deviceId).join()\n      );\n    }\n  }, [props.title, props.devices]);\n  return (\n\n\n    <div>\n      <Responsive minWidth = {1366}>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column width={1}>\n              {/* <Container className=\"leftcontainer\"> */}\n              <Navbar\n                active=\"cropManagement\"\n                defaultsensor={\n                  props.sensors && props.sensors[0]\n                    ? props.sensors[0].deviceId\n                    : undefined\n                }\n              />\n              {/* </Container> */}\n            </Grid.Column>\n\n            <Suspense fallback=\"loading\">\n              <Grid.Column width={11}>\n                <div className=\"midcontainer\">\n                  <SearchBar {...props} />\n                  <CropContainer {...props} />\n                </div>\n              </Grid.Column>\n              <Grid.Column width={4} className=\"rightcontainer crop-rightcontainer\">\n                {/* <Container> */}\n                  <div>\n                    <Profile className=\"Profile\" />\n                  </div>\n                  <div>\n                    <CropSideSection {... props}/>\n                  </div>\n                  <div>\n                    <MainButton {...props} className = \"MainButton\">\n                      {\n                        t(\"ADD ACTIVITY\")\n                      }\n                    </MainButton>\n                  </div>\n                {/* </Container> */}\n              </Grid.Column>\n            </Suspense>\n          </Grid.Row>\n        </Grid>\n      </Responsive>\n      <Responsive minWidth={768} maxWidth={1365.98}>\n        <TabletViewCropPage {...props} />\n      </Responsive>\n    </div>\n\n\n  );\n};\n\nexport default CropManagement;\n"]},"metadata":{},"sourceType":"module"}