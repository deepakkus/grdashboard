{"ast":null,"code":"import _defineProperty from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import TextField from'@material-ui/core/TextField';import MenuItem from\"@material-ui/core/MenuItem\";import{Modal,Button,Grid}from'semantic-ui-react';import Checkbox from'@material-ui/core/Checkbox';import FormControlLabel from'@material-ui/core/FormControlLabel';import Chip from'@material-ui/core/Chip';import Select from'@material-ui/core/Select';import MapPolygon from'../MapPolygon/MapPolygon';import{withTranslation}from'react-i18next';import{MuiThemeProvider,createMuiTheme}from\"@material-ui/core/styles\";import'./addcropform.scss';//import axios from 'axios';\nvar theme=createMuiTheme({palette:{primary:{light:\"#fff\",main:\"#67bc46\",dark:\"#000\"},secondary:{main:\"#1A960A\"}},typography:{useNextVariants:true},textField:{color:\"green\",'&:hover':{backgroundColor:'green'},'&$focused':{backgroundColor:'green',boxShadow:'green 0.25 0 0 0 2px',borderColor:'green'}},checkbox:{color:'green','&$checked':{color:'green'}}});var AddCropForm=/*#__PURE__*/function(_Component){_inherits(AddCropForm,_Component);var _super=_createSuper(AddCropForm);function AddCropForm(){var _this;_classCallCheck(this,AddCropForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={errorMsg:false,// snackbarOpen: false,\ncropType:_this.props.cropTypes?_this.props.croptypes[0]._id:null,seedType:_this.props.seedTypes?_this.props.seedtypes[0]._id:null,cultivationType:_this.props.cultivationTypes?_this.props.cultivationtypes[0]._id:null,startDate:null,endDate:null,confirmed:false,dateError:false,chips:[],field:_this.props.fieldId?_this.props.fieldId:null,polygon:null,//=  props.userFarms.location\ncenter:null//=  props.userFarms.address.location\n};_this.handleFieldChange=function(e){_this.setState({field:e.target.value,polygon:_this.props.fields.find(function(field){return e.target.value===field._id;}).location,center:_this.props.fields.find(function(field){return e.target.value===field._id;}).address.location});};_this.handleCropChange=function(e){_this.setState({cropType:e.target.value});};_this.handleSeedChange=function(e){_this.setState({seedType:e.target.value});};_this.handleStartDateChange=function(e){_this.setState({startDate:e.target.value});};_this.handleEndDateChange=function(e){_this.setState({endDate:e.target.value});};_this.handleCultivationChange=function(e){_this.setState({cultivationType:e.target.value});};_this.handleSnackbarClose=function(){// if (reason === 'clickaway') {\n//     return;\n//   }      \n_this.setstate({snackbarOpen:false});};_this.handleCheckBoxChange=function(){if(_this.state.startDate<_this.state.endDate){_this.setState({confirmed:true});}else{_this.setState({confirmed:false});}};_this.addChip=function(chip){var chips=_this.state.chips;chips.push(chip);_this.setState(chips);};_this.handleDeleteChip=function(chip){var chips=_this.state.chips.filter(function(item){return item!==chip;});_this.setState({chips:chips});};_this.handleAddCropSeed=function(){var chip={};if(_this.state.cropType&&_this.state.seedType){chip={id:_this.state.chips.length+1,crop:_this.props.croptypes.find(function(crop){return crop._id===_this.state.cropType;}).name,seed:_this.props.seedtypes.find(function(seed){return seed._id===_this.state.seedType;}).name};}var boolFound=_this.state.chips.find(function(item){return item.crop===chip.crop?item.seed===chip.seed?true:false:false;});if(!boolFound&&chip.id)_this.addChip(chip);};_this.handleClose=function(){_this.props.changeDialogDisp();_this.setState({errorMsg:false,// snackbarOpen: false,\ncropType:_this.props.cropTypes?_this.props.croptypes[0]._id:\"\",seedType:_this.props.seedTypes?_this.props.seedtypes[0]._id:\"\",cultivationType:_this.props.cultivationTypes?_this.props.cultivationtypes[0]._id:\"\",startDate:\"\",endDate:\"\",confirmed:false,dateError:false,chips:[],field:null,polygon:null,//=  props.userFarms.location\ncenter:null//=  props.userFarms.address.location        \n});};_this.handleSubmit=function(){if(_this.state.confirmed){_this.props.changeDialogDisp();var listCropSeed=[];_this.state.chips.map(function(chip){listCropSeed.push({cropId:_this.props.croptypes.find(function(crop){return crop.name===chip.crop;})._id,seedId:_this.props.seedtypes.find(function(seed){return seed.name===chip.seed;})._id});});var cropCycle={cropSeeds:listCropSeed,startDate:_this.state.startDate,endDate:_this.state.endDate,farmId:_this.state.field,cultivationId:_this.state.cultivationType,isPast:false};_this.props.onSubmit(cropCycle);_this.setState({errorMsg:false,// snackbarOpen: false,\ncropType:_this.props.cropTypes?_this.props.croptypes[0]._id:\"\",seedType:_this.props.seedTypes?_this.props.seedtypes[0]._id:\"\",cultivationType:_this.props.cultivationTypes?_this.props.cultivationtypes[0]._id:\"\",startDate:\"\",endDate:\"\",confirmed:false,dateError:false,chips:[],field:null,polygon:null,//=  props.userFarms.location\ncenter:null//=  props.userFarms.address.location        \n});}else{_this.setState({errorMsg:true});}};return _this;}_createClass(AddCropForm,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){var _this2=this;if(this.props.croptypes&&!this.state.cropType){this.setState({cropType:this.props.croptypes?this.props.croptypes[0]._id:''});}if(this.props.seedtypes&&!this.state.seedType){this.setState({seedType:this.props.seedtypes?this.props.seedtypes[0]._id:''});}if(this.props.cultivationtypes&&!this.state.cultivationType){this.setState({cultivationType:this.props.cultivationtypes?this.props.cultivationtypes[0]._id:''});}if(this.props.fields&&!this.state.field){this.setState({field:this.props.fields?this.props.fields[0]._id:''});}if(this.state.field&&!this.state.center&&!this.state.polygon){this.setState({polygon:this.props.fields.find(function(field){return field._id===_this2.state.field;}).location,center:this.props.fields.find(function(field){return field._id===_this2.state.field;}).address.location});}if(this.state.startDate&&this.state.endDate){if(this.state.endDate<this.state.startDate&&this.state.dateError===false){this.setState({dateError:true,confirmed:false});}if(this.state.endDate>this.state.startDate&&this.state.dateError===true){this.setState({dateError:false});}}}},{key:\"render\",value:function render(){var _this3=this,_React$createElement;var t=this.props.t;return/*#__PURE__*/React.createElement(MuiThemeProvider,{theme:theme},/*#__PURE__*/React.createElement(Modal,{open:this.props.open,onClose:this.handleClose,\"aria-labelledby\":\"form-dialog-title\",style:{position:\"relative\"}},/*#__PURE__*/React.createElement(Modal.Header,null,t('cc-form-title')),/*#__PURE__*/React.createElement(Modal.Content,null,/*#__PURE__*/React.createElement(Grid,{columns:2},/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Select,{className:\"farmFields mr-4 mt-2 w-50\",defaultValue:this.props.fieldId,onChange:this.handleFieldChange},this.props.fields?this.props.fields.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option._id,value:option._id},option.farmName);}):/*#__PURE__*/React.createElement(MenuItem,{disabled:true},t('empty-option'))),/*#__PURE__*/React.createElement(MapPolygon,{editable:false,polygon:this.state.polygon,center:this.state.center,className:\"mapCrop\"})),/*#__PURE__*/React.createElement(Grid.Column,{width:12},/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(TextField,{id:\"outlined-select-crop\",label:t('crop-label'),select:true,defaultValue:this.props.croptypes[0]?this.props.croptypes[0]._id:\"Select a Crop\",onChange:this.handleCropChange,variant:\"outlined\",className:\"mr-4 ml-4 mt-2 w-25\",helperText:t('crop-helper'),InputLabelProps:{shrink:true}},this.props.croptypes?this.props.croptypes.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option._id,value:option._id},option.name);}):/*#__PURE__*/React.createElement(MenuItem,{disabled:true},t('empty-option'))),/*#__PURE__*/React.createElement(TextField,{id:\"outlined-select-seed\",label:t('seed-label'),select:true,className:\"mr-4 ml-4 mt-2 w-25\",variant:\"outlined\",defaultValue:this.props.seedtypes[0]?this.props.seedtypes[0]._id:\"\",helperText:t('seed-helper'),onChange:this.handleSeedChange,InputLabelProps:{shrink:true}},this.props.seedtypes?this.props.seedtypes.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option._id,value:option._id},option.name);}):/*#__PURE__*/React.createElement(MenuItem,{disabled:true},t('empty-option'))),/*#__PURE__*/React.createElement(Button,{className:\"semantic-button\",color:\"green\",onClick:this.handleAddCropSeed},t('add-crop'))),/*#__PURE__*/React.createElement(Grid.Row,null,this.state.chips.map(function(chip){return/*#__PURE__*/React.createElement(Chip,{key:chip.id,className:\"ml-4 my-3\",size:\"small\"//icon={}\n,label:chip.crop+\": \"+chip.seed,onDelete:function onDelete(){return _this3.handleDeleteChip(chip);}});})),/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(TextField,{id:\"sdate\",label:t('starting-date-label'),type:\"date\",className:\"mr-4 ml-4 mt-2 w-25\"//defaultValue={new Date().toLocaleDateString()}\n,variant:\"outlined\",helperText:t('starting-date-helper'),onChange:this.handleStartDateChange,InputLabelProps:{shrink:true}}),/*#__PURE__*/React.createElement(TextField,(_React$createElement={error:true,id:\"edate\",label:t('endDatelabel'),type:\"date\",className:\"mr-4 ml-4 mt-2 w-25\"// defaultValue={new Date()}\n},_defineProperty(_React$createElement,\"error\",this.state.dateError),_defineProperty(_React$createElement,\"variant\",\"outlined\"),_defineProperty(_React$createElement,\"onChange\",this.handleEndDateChange),_defineProperty(_React$createElement,\"helperText\",t('ending-date-error')),_defineProperty(_React$createElement,\"InputLabelProps\",{shrink:true}),_React$createElement))),/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(TextField,{id:\"outlined-select-cultivation\",label:t('cultivationlabel'),select:true,variant:\"outlined\",className:\"mr-4 ml-4 mt-2 w-25\",defaultValue:this.props.cultivationtypes[0]?this.props.cultivationtypes[0]._id:\"\",helperText:t('cultivation-helper'),onChange:this.handleCultivationChange,InputLabelProps:{shrink:true}},this.props.cultivationtypes?this.props.cultivationtypes.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option._id,value:option._id},option.name);}):/*#__PURE__*/React.createElement(MenuItem,{disabled:true},t('empty-option'))),/*#__PURE__*/React.createElement(FormControlLabel,{className:\"mr-4 ml-4 w-50\",control:/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.confirmed,onChange:this.handleCheckBoxChange,name:\"checked\"}),label:t('cc-form-checkbox')})),/*#__PURE__*/React.createElement(Grid.Row,null,this.state.errorMsg?/*#__PURE__*/React.createElement(\"p\",{style:{position:'absolute',color:'red',left:'25%',right:'25%'}},\" \",t('ccuncheckederror'),\" \"):\"\")))),/*#__PURE__*/React.createElement(Modal.Actions,null,/*#__PURE__*/React.createElement(Button,{onClick:this.handleClose,color:\"gray\"},t('cancel')),/*#__PURE__*/React.createElement(Button,{onClick:this.handleSubmit,color:\"green\"},t('submit')))));}}]);return AddCropForm;}(Component);export default withTranslation(\"crop-management\")(AddCropForm);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/components/CropManagement/addcropform.js"],"names":["React","Component","TextField","MenuItem","Modal","Button","Grid","Checkbox","FormControlLabel","Chip","Select","MapPolygon","withTranslation","MuiThemeProvider","createMuiTheme","theme","palette","primary","light","main","dark","secondary","typography","useNextVariants","textField","color","backgroundColor","boxShadow","borderColor","checkbox","AddCropForm","state","errorMsg","cropType","props","cropTypes","croptypes","_id","seedType","seedTypes","seedtypes","cultivationType","cultivationTypes","cultivationtypes","startDate","endDate","confirmed","dateError","chips","field","fieldId","polygon","center","handleFieldChange","e","setState","target","value","fields","find","location","address","handleCropChange","handleSeedChange","handleStartDateChange","handleEndDateChange","handleCultivationChange","handleSnackbarClose","setstate","snackbarOpen","handleCheckBoxChange","addChip","chip","push","handleDeleteChip","filter","item","handleAddCropSeed","id","length","crop","name","seed","boolFound","handleClose","changeDialogDisp","handleSubmit","listCropSeed","map","cropId","seedId","cropCycle","cropSeeds","farmId","cultivationId","isPast","onSubmit","t","open","position","option","farmName","shrink","left","right"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Modal, Button, Grid} from 'semantic-ui-react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Chip from '@material-ui/core/Chip';\nimport Select from '@material-ui/core/Select';\nimport MapPolygon from '../MapPolygon/MapPolygon';\nimport { withTranslation } from 'react-i18next';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport './addcropform.scss';\n//import axios from 'axios';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        light: \"#fff\",\n        main: \"#67bc46\",\n        dark: \"#000\",\n      },\n      secondary: {\n        main: \"#1A960A\",\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n        textField: {\n        color: \"green\",    \n        '&:hover': {\n                backgroundColor: 'green',\n          },\n          '&$focused': {\n            backgroundColor: 'green',\n            boxShadow: 'green 0.25 0 0 0 2px',\n            borderColor: 'green',\n          }\n    },\n    checkbox: {\n        color: 'green',\n        '&$checked': {\n          color: 'green',\n        },\n      }\n  });\n\nclass AddCropForm extends Component {\n\n    state= {\n        errorMsg: false,\n        // snackbarOpen: false,\n        cropType: this.props.cropTypes ? (this.props.croptypes[0]._id) : null,\n        seedType: this.props.seedTypes ? (this.props.seedtypes[0]._id) : null,\n        cultivationType: this.props.cultivationTypes ? (this.props.cultivationtypes[0]._id) : null,\n        startDate: null,\n        endDate: null,\n        confirmed: false,\n        dateError: false,\n        chips: [],\n        field: this.props.fieldId ? this.props.fieldId : null,\n        polygon: null, //=  props.userFarms.location\n        center: null//=  props.userFarms.address.location\n    }\n\n    handleFieldChange = (e) => {\n        this.setState({field: e.target.value,\n            polygon: this.props.fields.find(field => e.target.value === field._id).location\n                ,center: this.props.fields.find(field => e.target.value === field._id).address.location\n        });\n    }\n    handleCropChange = (e) => {\n        this.setState({cropType: e.target.value});\n    }\n    handleSeedChange = (e) => {\n        this.setState({seedType: e.target.value});\n    }\n    handleStartDateChange = (e) => {\n        this.setState({startDate: e.target.value});\n    }\n    handleEndDateChange = (e) => {\n        this.setState({endDate: e.target.value});\n    }\n    handleCultivationChange = (e) => {\n        this.setState({cultivationType: e.target.value});\n    }\n    handleSnackbarClose = () => {\n        // if (reason === 'clickaway') {\n        //     return;\n        //   }      \n          this.setstate({snackbarOpen: false})\n    }\n    handleCheckBoxChange = () => {\n        if(this.state.startDate < this.state.endDate){\n            this.setState({confirmed: true})\n        }\n        else{\n            this.setState({confirmed: false})\n        }   \n    }\n    addChip = (chip) => {\n        const chips = this.state.chips;\n        chips.push(chip);\n        this.setState(chips);\n    }\n    handleDeleteChip = (chip) => {\n        const chips = this.state.chips.filter(item => {return item!==chip})\n        this.setState({chips});\n    }\n    handleAddCropSeed = () => {\n        let chip = {}\n        if(this.state.cropType && this.state.seedType){\n            chip = {id: this.state.chips.length+1,\n                crop: this.props.croptypes.find(crop => crop._id === this.state.cropType).name,\n                seed:this.props.seedtypes.find(seed => seed._id === this.state.seedType).name}\n        }\n        const boolFound = this.state.chips.find(item => item.crop === chip.crop ? (\n            item.seed === chip.seed ? (true) : (false)\n        ) \n        : (false))\n        if(!boolFound && chip.id)\n            this.addChip(chip)\n    }\n\n    handleClose = () => {\n        this.props.changeDialogDisp();\n        this.setState({\n            errorMsg: false,\n            // snackbarOpen: false,\n            cropType: this.props.cropTypes ? (this.props.croptypes[0]._id) : (\"\"),\n            seedType: this.props.seedTypes ? (this.props.seedtypes[0]._id) : (\"\"),\n            cultivationType: this.props.cultivationTypes ? (this.props.cultivationtypes[0]._id) : (\"\"),\n            startDate: \"\",\n            endDate: \"\",\n            confirmed: false,\n            dateError: false,\n            chips: [],\n            field: null,\n            polygon: null, //=  props.userFarms.location\n            center: null//=  props.userFarms.address.location        \n          });    \n    };\n\n    handleSubmit = () => {\n        if(this.state.confirmed){\n            this.props.changeDialogDisp();\n            const listCropSeed = []\n            this.state.chips.map(chip => {\n                listCropSeed.push({cropId: this.props.croptypes.find(crop => crop.name === chip.crop)._id\n                    , seedId: this.props.seedtypes.find(seed => seed.name === chip.seed)._id})\n            })\n            const cropCycle = {\n                    cropSeeds: listCropSeed,\n                    startDate: this.state.startDate,\n                    endDate: this.state.endDate,\n                    farmId: this.state.field,\n                    cultivationId: this.state.cultivationType,\n                    isPast: false\n            };\n            this.props.onSubmit(cropCycle);\n              this.setState({\n                errorMsg: false,\n                // snackbarOpen: false,\n                cropType: this.props.cropTypes ? (this.props.croptypes[0]._id) : (\"\"),\n                seedType: this.props.seedTypes ? (this.props.seedtypes[0]._id) : (\"\"),\n                cultivationType: this.props.cultivationTypes ? (this.props.cultivationtypes[0]._id) : (\"\"),\n                startDate: \"\",\n                endDate: \"\",\n                confirmed: false,\n                dateError: false,\n                chips: [],\n                field: null,\n                polygon: null, //=  props.userFarms.location\n                center: null//=  props.userFarms.address.location        \n              });    \n        }\n        else{\n            this.setState({errorMsg: true})\n        }\n    };\n\n    componentDidUpdate(){\n        if(this.props.croptypes && !this.state.cropType){\n            this.setState({cropType: this.props.croptypes ? this.props.croptypes[0]._id : ''})\n        }\n        if(this.props.seedtypes && !this.state.seedType){\n            this.setState({seedType: this.props.seedtypes ?  this.props.seedtypes[0]._id : ''})\n        }\n        if(this.props.cultivationtypes && !this.state.cultivationType){\n            this.setState({cultivationType: this.props.cultivationtypes ?  this.props.cultivationtypes[0]._id : ''})\n        }\n        if(this.props.fields && !this.state.field)\n        {\n            this.setState({field: this.props.fields ?  this.props.fields[0]._id : ''})\n        }\n        if(this.state.field && !this.state.center && !this.state.polygon)\n        {\n            this.setState({polygon: this.props.fields.find(field => field._id === this.state.field).location, \n                center: this.props.fields.find(field => field._id === this.state.field).address.location})\n        }\n        if(this.state.startDate && this.state.endDate){\n            if(this.state.endDate < this.state.startDate && this.state.dateError === false)\n            {\n                this.setState({dateError: true, confirmed: false});\n            }\n                \n            if(this.state.endDate > this.state.startDate && this.state.dateError === true){\n                this.setState({dateError: false});\n            }   \n        }\n    }\n    \n    render(){\n        const {t} = this.props\n    return (\n    <MuiThemeProvider theme={theme}>\n      <Modal open={this.props.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\" style = {{position : \"relative\"}}>\n        <Modal.Header>{t('cc-form-title')}</Modal.Header>\n        <Modal.Content>\n            <Grid columns={2}>\n                <Grid.Column width={4}>\n                    <Select \n                    className=\"farmFields mr-4 mt-2 w-50\"\n                    defaultValue= {this.props.fieldId}\n                    onChange={this.handleFieldChange}\n                    >\n                    {this.props.fields ? \n                        (this.props.fields.map((option) => (\n                        <MenuItem key={option._id} value={option._id}>\n                            {option.farmName}\n                        </MenuItem>\n                        ))) : (<MenuItem disabled>{t('empty-option')}</MenuItem>)}\n                    </Select>            \n            <MapPolygon editable={false} polygon={this.state.polygon} center={this.state.center} className=\"mapCrop\"/>\n            </Grid.Column>\n                <Grid.Column width={12}>\n                    <Grid.Row>\n                        <TextField\n                        id=\"outlined-select-crop\"\n                        label={t('crop-label')}\n                        select\n                        defaultValue={this.props.croptypes[0] ? (this.props.croptypes[0]._id) : (\"Select a Crop\")}\n                        onChange = {this.handleCropChange}\n                        variant=\"outlined\"\n                        className=\"mr-4 ml-4 mt-2 w-25\"\n                        helperText={t('crop-helper')}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        >\n                            {this.props.croptypes ? \n                            (this.props.croptypes.map((option) => (\n                            <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                            </MenuItem>\n                            ))) : (<MenuItem disabled>{t('empty-option')}</MenuItem>)}\n\n                        </TextField>\n                        <TextField\n                                id=\"outlined-select-seed\"\n                                label={t('seed-label')}\n                                select\n                                className=\"mr-4 ml-4 mt-2 w-25\"\n                                variant=\"outlined\"\n                                defaultValue={this.props.seedtypes[0] ? (this.props.seedtypes[0]._id) : (\"\")}\n                                helperText={t('seed-helper')}\n                                onChange={this.handleSeedChange}\n                                InputLabelProps={{\n                                shrink: true,\n                                }}\n                        >\n                            {this.props.seedtypes ? \n                            (this.props.seedtypes.map((option) => (\n                            <MenuItem key={option._id} value={option._id}>\n                                {option.name}\n                            </MenuItem>\n                            ))) : (<MenuItem disabled>{t('empty-option')}</MenuItem>)}\n                        </TextField>\n                        <Button className=\"semantic-button\" color='green' onClick={this.handleAddCropSeed}>\n                        {t('add-crop')}\n                        </Button>\n                    </Grid.Row>\n                <Grid.Row>\n                    {this.state.chips.map((chip) => (\n                        <Chip\n                            key= {chip.id}\n                            className= \"ml-4 my-3\"\n                            size=\"small\"\n                            //icon={}\n                            label={chip.crop + \": \"+ chip.seed}\n                            onDelete={() => this.handleDeleteChip(chip)}\n                        />\n                    ))}\n                </Grid.Row>\n                <Grid.Row>\n                    <TextField\n                        id=\"sdate\"\n                        label={t('starting-date-label')}\n                        type=\"date\"\n                        className=\"mr-4 ml-4 mt-2 w-25\"\n                        //defaultValue={new Date().toLocaleDateString()}\n                        variant=\"outlined\"\n                        helperText={t('starting-date-helper')}\n                        onChange={this.handleStartDateChange}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                    />\n                        <TextField error\n                            id=\"edate\"\n                            label={t('endDatelabel')}\n                            type=\"date\"\n                            className=\"mr-4 ml-4 mt-2 w-25\"\n                            // defaultValue={new Date()}\n                            error={this.state.dateError}\n                            variant=\"outlined\"\n                            onChange={this.handleEndDateChange}\n                            helperText={t('ending-date-error')}\n                            InputLabelProps={{\n                            shrink: true\n                            }}\n                        />\n                </Grid.Row>\n                <Grid.Row>\n                    <TextField\n                        id=\"outlined-select-cultivation\"\n                        label={t('cultivationlabel')}\n                        select\n                        variant=\"outlined\"\n                        className=\"mr-4 ml-4 mt-2 w-25\"\n                        defaultValue={this.props.cultivationtypes[0] ? (this.props.cultivationtypes[0]._id) : (\"\")}\n                        helperText={t('cultivation-helper')}\n                        onChange={this.handleCultivationChange}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                    >\n                        {this.props.cultivationtypes ? \n                        (this.props.cultivationtypes.map((option) => (\n                        <MenuItem key={option._id} value={option._id}>\n                        {option.name}\n                        </MenuItem>\n                        ))) : (<MenuItem disabled>{t('empty-option')}</MenuItem>)}\n                    </TextField>\n                    <FormControlLabel\n                        className=\"mr-4 ml-4 w-50\"\n                        control={<Checkbox checked={this.state.confirmed} \n                        onChange={this.handleCheckBoxChange} name=\"checked\" />}\n                        label={t('cc-form-checkbox')}\n                    />\n                </Grid.Row>\n                <Grid.Row>\n                    {this.state.errorMsg ? (<p style={{position: 'absolute', color: 'red', left:'25%', right:'25%'}}> {t('ccuncheckederror')} </p>) : (\"\")}\n                </Grid.Row>\n            </Grid.Column> \n            </Grid>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.handleClose} color=\"gray\">\n          {t('cancel')}\n          </Button>\n          <Button onClick={this.handleSubmit} color=\"green\">\n          {t('submit')}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </MuiThemeProvider>\n );\n}\n}\n\nexport default withTranslation(\"crop-management\")(AddCropForm);"]},"metadata":{},"sourceType":"module"}