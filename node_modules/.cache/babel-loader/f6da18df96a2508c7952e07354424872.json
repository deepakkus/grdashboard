{"ast":null,"code":"import{connect}from\"react-redux\";import GisAnalysis from\"../components/Page/GisAnalysis\";// import { getUserFarms, getHeatMapData } from \"../actions/farms\";\nimport{getHeatMapData,getLinkForImage}from\"../actions/heatmap\";import{getWeatherData}from\"../actions/weather\";var mapStateToProps=function mapStateToProps(state){return{title:\"gisAnalysis\",// key of translation, not the translated text\nuserId:state.user.userId,userFarms:state.farms.userFarms,heatMap:state.heatmap.heatMap,sensors:state.sensors.sensormeasures};};export default connect(mapStateToProps,{getHeatMapData:getHeatMapData,getWeatherData:getWeatherData,getLinkForImage:getLinkForImage})(GisAnalysis);","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/src/containers/GisAnalysis.js"],"names":["connect","GisAnalysis","getHeatMapData","getLinkForImage","getWeatherData","mapStateToProps","state","title","userId","user","userFarms","farms","heatMap","heatmap","sensors","sensormeasures"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA;AACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,oBAAhD,CACA,OAASC,cAAT,KAA+B,oBAA/B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,KAAK,CAAE,aADF,CACiB;AACtBC,MAAM,CAAEF,KAAK,CAACG,IAAN,CAAWD,MAFd,CAGLE,SAAS,CAAEJ,KAAK,CAACK,KAAN,CAAYD,SAHlB,CAILE,OAAO,CAAEN,KAAK,CAACO,OAAN,CAAcD,OAJlB,CAKLE,OAAO,CAAER,KAAK,CAACQ,OAAN,CAAcC,cALlB,CAAP,CAOD,CARD,CAUA,cAAef,CAAAA,OAAO,CAACK,eAAD,CAAkB,CAACH,cAAc,CAAdA,cAAD,CAAgBE,cAAc,CAAdA,cAAhB,CAAgCD,eAAe,CAAfA,eAAhC,CAAlB,CAAP,CACbF,WADa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport GisAnalysis from \"../components/Page/GisAnalysis\";\n// import { getUserFarms, getHeatMapData } from \"../actions/farms\";\nimport { getHeatMapData, getLinkForImage } from \"../actions/heatmap\";\nimport { getWeatherData } from \"../actions/weather\";\n\nconst mapStateToProps = (state) => {\n  return {\n    title: \"gisAnalysis\", // key of translation, not the translated text\n    userId: state.user.userId,\n    userFarms: state.farms.userFarms,\n    heatMap: state.heatmap.heatMap,\n    sensors: state.sensors.sensormeasures,\n  };\n};\n\nexport default connect(mapStateToProps, {getHeatMapData,getWeatherData, getLinkForImage})(\n  GisAnalysis\n);\n"]},"metadata":{},"sourceType":"module"}