{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar React = require('react');\n\nvar WeatherDisplay = /*#__PURE__*/function (_React$Component) {\n  _inherits(WeatherDisplay, _React$Component);\n\n  var _super = _createSuper(WeatherDisplay);\n\n  function WeatherDisplay() {\n    _classCallCheck(this, WeatherDisplay);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WeatherDisplay, [{\n    key: \"getStyles\",\n    value: function getStyles() {\n      return {\n        test: {\n          WebkitUserSelect: 'none',\n          MozUserSelect: 'none',\n          msUserSelect: 'none',\n          userSelect: 'none'\n        }\n      };\n    }\n  }, {\n    key: \"getForecastImage\",\n    value: function getForecastImage() {\n      switch (this.props.currentCondition) {\n        case 'sunny':\n          return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/sunny.png';\n\n        case 'cloudy':\n          return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/cloudy.png';\n\n        case 'rainy':\n          return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/rain.png';\n\n        case 'stormy':\n          return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/tstorms.png';\n\n        case 'snowy':\n          return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/snow.png';\n\n        default:\n          return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/mostlysunny.png';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var width = this.props.width * 0.6;\n      var fontsize = width * 0.25; // Piece it all together to form the weather display.\n\n      return React.createElement('div', {\n        style: {\n          width: this.props.width,\n          height: this.props.height,\n          position: 'relative'\n        }\n      }, React.createElement('img', {\n        id: 'weatherImage',\n        src: this.getForecastImage(),\n        style: {\n          width: width,\n          height: width,\n          position: 'absolute',\n          left: (this.props.width - width) / 2,\n          top: (this.props.height - width) / 2\n        }\n      }), React.createElement('h1', {\n        id: 'weatherValue',\n        style: {\n          width: width,\n          fontSize: fontsize,\n          position: 'absolute',\n          top: (this.props.height - fontsize) / 2,\n          left: (this.props.width - width) / 2,\n          margin: '0 0 0 0',\n          textAlign: 'center',\n          textShadow: \"\".concat(fontsize * 0.05, \"px \").concat(fontsize * 0.05, \"px #111111\"),\n          color: 'white'\n        }\n      }, this.props.currentTemperature, \"\\xB0\"));\n    }\n  }]);\n\n  return WeatherDisplay;\n}(React.Component);\n\nWeatherDisplay.propTypes = {\n  /* Width of component in pixels */\n  width: React.PropTypes.number,\n\n  /* Height of component in pixels */\n  height: React.PropTypes.number,\n\n  /* Actual temperature detected for the location */\n  currentTemperature: React.PropTypes.number,\n\n  /* The forcast to display */\n  currentCondition: React.PropTypes.oneOf(['sunny', 'cloudy', 'rainy', 'stormy', 'snowy'])\n};\nWeatherDisplay.defaultProps = {\n  width: 1280,\n  height: 720,\n  currentTemperature: 70,\n  currentCondition: 'sunny'\n};\nmodule.exports = WeatherDisplay;","map":{"version":3,"sources":["/Users/manish/Desktop/sensegrass/banao_lg/sensegrass/node_modules/react-weather-display/dist/react-weather-display.js"],"names":["React","require","WeatherDisplay","test","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","props","currentCondition","width","fontsize","createElement","style","height","position","id","src","getForecastImage","left","top","fontSize","margin","textAlign","textShadow","color","currentTemperature","Component","propTypes","PropTypes","number","oneOf","defaultProps","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst React = require('react');\n\nclass WeatherDisplay extends React.Component {\n  getStyles() {\n    return {\n      test: {\n        WebkitUserSelect: 'none',\n        MozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none'\n      }\n    };\n  }\n\n  getForecastImage() {\n    switch (this.props.currentCondition) {\n      case 'sunny':\n        return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/sunny.png';\n      case 'cloudy':\n        return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/cloudy.png';\n      case 'rainy':\n        return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/rain.png';\n      case 'stormy':\n        return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/tstorms.png';\n      case 'snowy':\n        return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/snow.png';\n      default:\n        return 'https://raw.githubusercontent.com/KevinMellott91/react-weather-display/master/images/mostlysunny.png';\n    }\n  }\n\n  render() {\n    const width = this.props.width * 0.6;\n    const fontsize = width * 0.25;\n    // Piece it all together to form the weather display.\n    return React.createElement(\n      'div',\n      { style: {\n          width: this.props.width,\n          height: this.props.height,\n          position: 'relative'\n        }\n      },\n      React.createElement('img', { id: 'weatherImage', src: this.getForecastImage(), style: {\n          width,\n          height: width,\n          position: 'absolute',\n          left: (this.props.width - width) / 2,\n          top: (this.props.height - width) / 2\n        }\n      }),\n      React.createElement(\n        'h1',\n        { id: 'weatherValue', style: {\n            width,\n            fontSize: fontsize,\n            position: 'absolute',\n            top: (this.props.height - fontsize) / 2,\n            left: (this.props.width - width) / 2,\n            margin: '0 0 0 0',\n            textAlign: 'center',\n            textShadow: `${ fontsize * 0.05 }px ${ fontsize * 0.05 }px #111111`,\n            color: 'white'\n          }\n        },\n        this.props.currentTemperature,\n        '\\u00B0'\n      )\n    );\n  }\n}\n\nWeatherDisplay.propTypes = {\n  /* Width of component in pixels */\n  width: React.PropTypes.number,\n  /* Height of component in pixels */\n  height: React.PropTypes.number,\n  /* Actual temperature detected for the location */\n  currentTemperature: React.PropTypes.number,\n  /* The forcast to display */\n  currentCondition: React.PropTypes.oneOf(['sunny', 'cloudy', 'rainy', 'stormy', 'snowy'])\n};\n\nWeatherDisplay.defaultProps = {\n  width: 1280,\n  height: 720,\n  currentTemperature: 70,\n  currentCondition: 'sunny'\n};\n\nmodule.exports = WeatherDisplay;\n"]},"metadata":{},"sourceType":"script"}